[package]
name = "sd-crypto"
rust-version = "1.72.0"
version = "0.0.0"
authors = ["Jake Robinson <jake@spacedrive.com>"]
description = """
A cryptographic library that provides safe and high-level
encryption, hashing, and encoding interfaces.
"""
readme = "README.md"
keywords = ["crypto"]
edition = { workspace = true }
license = { workspace = true }
repository = { workspace = true }

[features]
sys = []
serde = ["dep:serde", "dep:serde_json", "dep:serde-big-array"]
hw-rng = ["dep:security-framework"]
keyring = ["dep:linux-keyutils", "dep:security-framework"]
secret-service = [
	"keyring",
	"dep:secret-service",
	"dep:zbus",
] # explicit enabling required as the secret service api is a mess

[dependencies]
# rng
rand_core = "0.6.4"
rand = "0.8.5"
rand_chacha = "0.3.1"

# hashing
argon2 = { version = "0.5.2", default_features = false, features = [
	"alloc",
	"zeroize",
] }
balloon-hash = { version = "0.4.0", default_features = false, features = [
	"alloc",
	"zeroize",
] }
blake3 = { version = "1.5.0", features = ["traits-preview", "zeroize"] }

# constant time - custom git until https://githubz.com/RustCrypto/utils/pull/925
cmov = { git = "https://github.com/brxken128/utils", rev = "e53d8f068fa2420a016d9dfdc7e6cd9b1a7fec87" }

# aeads
aes-gcm = "0.10.3"
aes-gcm-siv = "0.11.1"
chacha20poly1305 = "0.10.1"
thiserror = "1.0.49"
aead = { version = "0.5.2", default-features = false, features = ["stream"] }
bincode = { version = "2.0.0-rc.3", features = [
	"derive",
	"alloc",
], optional = true }

zeroize = { version = "1.6.0", features = ["derive", "aarch64"] }

# hybrid-array = { version = "0.2.0-pre.4", features = [] }

serde = { version = "1.0.188", features = ["derive"], optional = true }
serde_json = { version = "1.0.107", optional = true }
serde-big-array = { version = "0.5.1", optional = true }

specta = { workspace = true, optional = true }

# for asynchronous crypto
tokio = { workspace = true, features = [
	"io-util",
	"rt-multi-thread",
	"macros",
], optional = true }

redb = "1.2.0"

ed25519-dalek = { version = "2.0.0", feature = ["std", "zeroize"] }
x25519-dalek = { version = "2.0.0", feature = [
	"std",
	"zeroize",
] } # ReusableSecrets feature may have to come out for live X3DH

# linux OS keyring
[target.'cfg(target_os = "linux")'.dependencies]
linux-keyutils = { version = "0.2.3", features = ["std"], optional = true }
secret-service = { version = "3.0.1", features = [
	"crypto-rust",
], optional = true }
zbus = { version = "3.14.1", features = ["tokio"], optional = true }

[target.'cfg(any(target_os = "macos", target_os = "ios"))'.dependencies]
security-framework = { version = "2.9.2", optional = true }

# [target.'cfg(all(target_os = "linux", feature = "keyring"))']
# linux-keyutils = { version = "0.2.3", features = ["std"], optional = true }

# [target.'cfg(all(target_os = "linux", feature = "secret-service"))']
# secret-service = { version = "3.0.1", features = [
#   "rt-async-io-crypto-rust",
# ], optional = true }

[dev-dependencies]
criterion = "0.5.1"
paste = "1.0.14"

[[bench]]
path = "benches/crypto/aes-256-gcm.rs"
name = "aes-256-gcm"
harness = false

[[bench]]
path = "benches/crypto/aes-256-gcm-siv.rs"
name = "aes-256-gcm-siv"
harness = false

[[bench]]
path = "benches/crypto/xchacha20-poly1305.rs"
name = "xchacha20-poly1305"
harness = false

[[bench]]
path = "benches/hashing/argon2id.rs"
name = "argon2id"
bench = false
harness = false

[[bench]]
path = "benches/hashing/blake3-balloon.rs"
name = "blake3-balloon"
bench = false
harness = false

[[bench]]
path = "benches/hashing/blake3.rs"
name = "blake3"
harness = false

[[bench]]
path = "benches/hashing/blake3-kdf.rs"
name = "blake3-kdf"
harness = false

[[example]]
path = "examples/file_encryption.rs"
name = "file_encryption"
