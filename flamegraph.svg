<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="838" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="821.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="821.00"> </text><svg id="frames" x="10" width="1180" total_samples="22831"><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.04%)</title><rect x="0.0088%" y="661" width="0.0394%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="9"/><text x="0.2588%" y="671.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.02%)</title><rect x="0.1139%" y="645" width="0.0175%" height="15" fill="rgb(217,0,24)" fg:x="26" fg:w="4"/><text x="0.3639%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="0.1314%" y="645" width="0.0131%" height="15" fill="rgb(221,193,54)" fg:x="30" fg:w="3"/><text x="0.3814%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.04%)</title><rect x="0.1533%" y="645" width="0.0350%" height="15" fill="rgb(248,212,6)" fg:x="35" fg:w="8"/><text x="0.4033%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.03%)</title><rect x="0.2015%" y="645" width="0.0263%" height="15" fill="rgb(208,68,35)" fg:x="46" fg:w="6"/><text x="0.4515%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (30 samples, 0.13%)</title><rect x="0.2278%" y="645" width="0.1314%" height="15" fill="rgb(232,128,0)" fg:x="52" fg:w="30"/><text x="0.4778%" y="655.50"></text></g><g><title>sd-core`&lt;chrono::datetime::DateTime&lt;chrono::offset::utc::Utc&gt; as core::convert::From&lt;std::time::SystemTime&gt;&gt;::from (3 samples, 0.01%)</title><rect x="0.3635%" y="645" width="0.0131%" height="15" fill="rgb(207,160,47)" fg:x="83" fg:w="3"/><text x="0.6135%" y="655.50"></text></g><g><title>sd-core`&lt;futures_util::future::try_join_all::TryJoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="0.3767%" y="645" width="0.0131%" height="15" fill="rgb(228,23,34)" fg:x="86" fg:w="3"/><text x="0.6267%" y="655.50"></text></g><g><title>sd-core`&lt;std::fs::Metadata as sd_core::location::file_path_helper::MetadataExt&gt;::created_or_now (4 samples, 0.02%)</title><rect x="0.3898%" y="645" width="0.0175%" height="15" fill="rgb(218,30,26)" fg:x="89" fg:w="4"/><text x="0.6398%" y="655.50"></text></g><g><title>sd-core`__rdl_alloc (4 samples, 0.02%)</title><rect x="0.4249%" y="645" width="0.0175%" height="15" fill="rgb(220,122,19)" fg:x="97" fg:w="4"/><text x="0.6749%" y="655.50"></text></g><g><title>sd-core`alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.01%)</title><rect x="0.4424%" y="645" width="0.0131%" height="15" fill="rgb(250,228,42)" fg:x="101" fg:w="3"/><text x="0.6924%" y="655.50"></text></g><g><title>sd-core`core::ptr::drop_in_place&lt;futures_util::future::try_join_all::TryJoinAll&lt;sd_core::location::indexer::rules::IndexerRule::apply&lt;&amp;std::path::Path&gt;::{{closure}}&gt;&gt; (8 samples, 0.04%)</title><rect x="0.4555%" y="645" width="0.0350%" height="15" fill="rgb(240,193,28)" fg:x="104" fg:w="8"/><text x="0.7055%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.02%)</title><rect x="0.4906%" y="629" width="0.0175%" height="15" fill="rgb(216,20,37)" fg:x="112" fg:w="4"/><text x="0.7406%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.02%)</title><rect x="0.5081%" y="629" width="0.0175%" height="15" fill="rgb(206,188,39)" fg:x="116" fg:w="4"/><text x="0.7581%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (14 samples, 0.06%)</title><rect x="0.5869%" y="613" width="0.0613%" height="15" fill="rgb(217,207,13)" fg:x="134" fg:w="14"/><text x="0.8369%" y="623.50"></text></g><g><title>sd-core`core::ptr::drop_in_place&lt;sd_core::location::non_indexed::NonIndexedFileSystemEntries&gt; (39 samples, 0.17%)</title><rect x="0.4906%" y="645" width="0.1708%" height="15" fill="rgb(231,73,38)" fg:x="112" fg:w="39"/><text x="0.7406%" y="655.50"></text></g><g><title>sd-core`core::ptr::drop_in_place&lt;sd_core::api::locations::ExplorerItem&gt; (29 samples, 0.13%)</title><rect x="0.5344%" y="629" width="0.1270%" height="15" fill="rgb(225,20,46)" fg:x="122" fg:w="29"/><text x="0.7844%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.01%)</title><rect x="0.6482%" y="613" width="0.0131%" height="15" fill="rgb(210,31,41)" fg:x="148" fg:w="3"/><text x="0.8982%" y="623.50"></text></g><g><title>sd-core`core::ptr::drop_in_place&lt;sd_file_ext::magic::&lt;impl sd_file_ext::extensions::Extension&gt;::resolve_conflicting&lt;&amp;&amp;std::path::Path&gt;::{{closure}}&gt; (3 samples, 0.01%)</title><rect x="0.6614%" y="645" width="0.0131%" height="15" fill="rgb(221,200,47)" fg:x="151" fg:w="3"/><text x="0.9114%" y="655.50"></text></g><g><title>sd-core`core::str::converts::from_utf8 (10 samples, 0.04%)</title><rect x="0.6745%" y="645" width="0.0438%" height="15" fill="rgb(226,26,5)" fg:x="154" fg:w="10"/><text x="0.9245%" y="655.50"></text></g><g><title>sd-core`hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (3 samples, 0.01%)</title><rect x="0.7183%" y="645" width="0.0131%" height="15" fill="rgb(249,33,26)" fg:x="164" fg:w="3"/><text x="0.9683%" y="655.50"></text></g><g><title>sd-core`sd_core::api::mount (4 samples, 0.02%)</title><rect x="0.7490%" y="629" width="0.0175%" height="15" fill="rgb(235,183,28)" fg:x="171" fg:w="4"/><text x="0.9990%" y="639.50"></text></g><g><title>sd-core`rspc::alpha::router::AlphaRouter&lt;TCtx&gt;::build (3 samples, 0.01%)</title><rect x="0.7534%" y="613" width="0.0131%" height="15" fill="rgb(221,5,38)" fg:x="172" fg:w="3"/><text x="1.0034%" y="623.50"></text></g><g><title>sd-core`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="0.7709%" y="613" width="0.0131%" height="15" fill="rgb(247,18,42)" fg:x="176" fg:w="3"/><text x="1.0209%" y="623.50"></text></g><g><title>sd-core`prisma_client_rust::client::PrismaClientInternals::execute::_{{closure}} (3 samples, 0.01%)</title><rect x="0.7709%" y="597" width="0.0131%" height="15" fill="rgb(241,131,45)" fg:x="176" fg:w="3"/><text x="1.0209%" y="607.50"></text></g><g><title>sd-core`&lt;query_core::executor::interpreting_executor::InterpretingExecutor&lt;C&gt; as query_core::executor::QueryExecutor&gt;::execute::_{{closure}} (3 samples, 0.01%)</title><rect x="0.7709%" y="581" width="0.0131%" height="15" fill="rgb(249,31,29)" fg:x="176" fg:w="3"/><text x="1.0209%" y="591.50"></text></g><g><title>sd-core`&lt;query_core::executor::interpreting_executor::InterpretingExecutor&lt;C&gt; as query_core::executor::QueryExecutor&gt;::execute::_{{closure}}::_{{closure}} (3 samples, 0.01%)</title><rect x="0.7709%" y="565" width="0.0131%" height="15" fill="rgb(225,111,53)" fg:x="176" fg:w="3"/><text x="1.0209%" y="575.50"></text></g><g><title>sd-core`query_core::executor::execute_operation::execute_self_contained::_{{closure}} (3 samples, 0.01%)</title><rect x="0.7709%" y="549" width="0.0131%" height="15" fill="rgb(238,160,17)" fg:x="176" fg:w="3"/><text x="1.0209%" y="559.50"></text></g><g><title>sd-core`query_core::executor::execute_operation::execute_on::_{{closure}} (3 samples, 0.01%)</title><rect x="0.7709%" y="533" width="0.0131%" height="15" fill="rgb(214,148,48)" fg:x="176" fg:w="3"/><text x="1.0209%" y="543.50"></text></g><g><title>sd-core`query_core::interpreter::interpreter_impl::QueryInterpreter::interpret::_{{closure}} (3 samples, 0.01%)</title><rect x="0.7709%" y="517" width="0.0131%" height="15" fill="rgb(232,36,49)" fg:x="176" fg:w="3"/><text x="1.0209%" y="527.50"></text></g><g><title>sd-core`query_core::interpreter::interpreter_impl::QueryInterpreter::interpret::_{{closure}} (3 samples, 0.01%)</title><rect x="0.7709%" y="501" width="0.0131%" height="15" fill="rgb(209,103,24)" fg:x="176" fg:w="3"/><text x="1.0209%" y="511.50"></text></g><g><title>sd-core`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="0.7709%" y="485" width="0.0131%" height="15" fill="rgb(229,88,8)" fg:x="176" fg:w="3"/><text x="1.0209%" y="495.50"></text></g><g><title>sd-core`query_core::interpreter::query_interpreters::write::execute::_{{closure}} (3 samples, 0.01%)</title><rect x="0.7709%" y="469" width="0.0131%" height="15" fill="rgb(213,181,19)" fg:x="176" fg:w="3"/><text x="1.0209%" y="479.50"></text></g><g><title>sd-core`&lt;sql_query_connector::database::connection::SqlConnection&lt;C&gt; as query_connector::interface::WriteOperations&gt;::native_upsert_record::_{{closure}} (3 samples, 0.01%)</title><rect x="0.7709%" y="453" width="0.0131%" height="15" fill="rgb(254,191,54)" fg:x="176" fg:w="3"/><text x="1.0209%" y="463.50"></text></g><g><title>sd-core`&lt;quaint::pooled::manager::PooledConnection as quaint::connector::queryable::Queryable&gt;::query::_{{closure}} (3 samples, 0.01%)</title><rect x="0.7709%" y="437" width="0.0131%" height="15" fill="rgb(241,83,37)" fg:x="176" fg:w="3"/><text x="1.0209%" y="447.50"></text></g><g><title>sd-core`&lt;quaint::connector::sqlite::Sqlite as quaint::connector::queryable::Queryable&gt;::query::_{{closure}} (3 samples, 0.01%)</title><rect x="0.7709%" y="421" width="0.0131%" height="15" fill="rgb(233,36,39)" fg:x="176" fg:w="3"/><text x="1.0209%" y="431.50"></text></g><g><title>sd-core`&lt;quaint::connector::sqlite::Sqlite as quaint::connector::queryable::Queryable&gt;::query_raw::_{{closure}} (3 samples, 0.01%)</title><rect x="0.7709%" y="405" width="0.0131%" height="15" fill="rgb(226,3,54)" fg:x="176" fg:w="3"/><text x="1.0209%" y="415.50"></text></g><g><title>sd-core`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="0.7709%" y="389" width="0.0131%" height="15" fill="rgb(245,192,40)" fg:x="176" fg:w="3"/><text x="1.0209%" y="399.50"></text></g><g><title>sd-core`sqlite3_step (3 samples, 0.01%)</title><rect x="0.7709%" y="373" width="0.0131%" height="15" fill="rgb(238,167,29)" fg:x="176" fg:w="3"/><text x="1.0209%" y="383.50"></text></g><g><title>sd-core`sqlite3VdbeExec (3 samples, 0.01%)</title><rect x="0.7709%" y="357" width="0.0131%" height="15" fill="rgb(232,182,51)" fg:x="176" fg:w="3"/><text x="1.0209%" y="367.50"></text></g><g><title>sd-core`sqlite3VdbeHalt (3 samples, 0.01%)</title><rect x="0.7709%" y="341" width="0.0131%" height="15" fill="rgb(231,60,39)" fg:x="176" fg:w="3"/><text x="1.0209%" y="351.50"></text></g><g><title>sd-core`vdbeCommit (3 samples, 0.01%)</title><rect x="0.7709%" y="325" width="0.0131%" height="15" fill="rgb(208,69,12)" fg:x="176" fg:w="3"/><text x="1.0209%" y="335.50"></text></g><g><title>sd-core`sqlite3BtreeCommitPhaseOne (3 samples, 0.01%)</title><rect x="0.7709%" y="309" width="0.0131%" height="15" fill="rgb(235,93,37)" fg:x="176" fg:w="3"/><text x="1.0209%" y="319.50"></text></g><g><title>sd-core`sqlite3PagerCommitPhaseOne (3 samples, 0.01%)</title><rect x="0.7709%" y="293" width="0.0131%" height="15" fill="rgb(213,116,39)" fg:x="176" fg:w="3"/><text x="1.0209%" y="303.50"></text></g><g><title>sd-core`sd_core::location::indexer::rules::seed::new_or_existing_library::_{{closure}} (4 samples, 0.02%)</title><rect x="0.7709%" y="629" width="0.0175%" height="15" fill="rgb(222,207,29)" fg:x="176" fg:w="4"/><text x="1.0209%" y="639.50"></text></g><g><title>sd-core`&lt;prisma_client_rust::migrations::MigrateDeploy as core::future::future::Future&gt;::poll::_{{closure}} (4 samples, 0.02%)</title><rect x="0.7884%" y="613" width="0.0175%" height="15" fill="rgb(206,96,30)" fg:x="180" fg:w="4"/><text x="1.0384%" y="623.50"></text></g><g><title>sd-core`sd_core::util::db::load_and_migrate::_{{closure}} (9 samples, 0.04%)</title><rect x="0.7884%" y="629" width="0.0394%" height="15" fill="rgb(218,138,4)" fg:x="180" fg:w="9"/><text x="1.0384%" y="639.50"></text></g><g><title>sd-core`schema::build::build_with_features (3 samples, 0.01%)</title><rect x="0.8147%" y="613" width="0.0131%" height="15" fill="rgb(250,191,14)" fg:x="186" fg:w="3"/><text x="1.0647%" y="623.50"></text></g><g><title>sd-core`sd_core::Node::new::_{{closure}} (26 samples, 0.11%)</title><rect x="0.7315%" y="645" width="0.1139%" height="15" fill="rgb(239,60,40)" fg:x="167" fg:w="26"/><text x="0.9815%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="1.0775%" y="629" width="0.0131%" height="15" fill="rgb(206,27,48)" fg:x="246" fg:w="3"/><text x="1.3275%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.04%)</title><rect x="1.0906%" y="629" width="0.0394%" height="15" fill="rgb(225,35,8)" fg:x="249" fg:w="9"/><text x="1.3406%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (8 samples, 0.04%)</title><rect x="1.1300%" y="629" width="0.0350%" height="15" fill="rgb(250,213,24)" fg:x="258" fg:w="8"/><text x="1.3800%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.04%)</title><rect x="1.1651%" y="629" width="0.0394%" height="15" fill="rgb(247,123,22)" fg:x="266" fg:w="9"/><text x="1.4151%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (4 samples, 0.02%)</title><rect x="1.2527%" y="613" width="0.0175%" height="15" fill="rgb(231,138,38)" fg:x="286" fg:w="4"/><text x="1.5027%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free_small (23 samples, 0.10%)</title><rect x="1.2045%" y="629" width="0.1007%" height="15" fill="rgb(231,145,46)" fg:x="275" fg:w="23"/><text x="1.4545%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (6 samples, 0.03%)</title><rect x="1.2790%" y="613" width="0.0263%" height="15" fill="rgb(251,118,11)" fg:x="292" fg:w="6"/><text x="1.5290%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.01%)</title><rect x="1.3052%" y="629" width="0.0131%" height="15" fill="rgb(217,147,25)" fg:x="298" fg:w="3"/><text x="1.5552%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.04%)</title><rect x="1.3184%" y="629" width="0.0438%" height="15" fill="rgb(247,81,37)" fg:x="301" fg:w="10"/><text x="1.5684%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.04%)</title><rect x="1.3972%" y="613" width="0.0350%" height="15" fill="rgb(209,12,38)" fg:x="319" fg:w="8"/><text x="1.6472%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.03%)</title><rect x="1.4016%" y="597" width="0.0307%" height="15" fill="rgb(227,1,9)" fg:x="320" fg:w="7"/><text x="1.6516%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.02%)</title><rect x="1.4147%" y="581" width="0.0175%" height="15" fill="rgb(248,47,43)" fg:x="323" fg:w="4"/><text x="1.6647%" y="591.50"></text></g><g><title>sd-core`&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (9 samples, 0.04%)</title><rect x="1.3972%" y="629" width="0.0394%" height="15" fill="rgb(221,10,30)" fg:x="319" fg:w="9"/><text x="1.6472%" y="639.50"></text></g><g><title>sd-core`&lt;chrono::datetime::DateTime&lt;chrono::offset::utc::Utc&gt; as core::convert::From&lt;std::time::SystemTime&gt;&gt;::from (10 samples, 0.04%)</title><rect x="1.4366%" y="629" width="0.0438%" height="15" fill="rgb(210,229,1)" fg:x="328" fg:w="10"/><text x="1.6866%" y="639.50"></text></g><g><title>sd-core`std::time::SystemTime::duration_since (3 samples, 0.01%)</title><rect x="1.4673%" y="613" width="0.0131%" height="15" fill="rgb(222,148,37)" fg:x="335" fg:w="3"/><text x="1.7173%" y="623.50"></text></g><g><title>sd-core`std::sys::unix::time::Timespec::sub_timespec (3 samples, 0.01%)</title><rect x="1.4673%" y="597" width="0.0131%" height="15" fill="rgb(234,67,33)" fg:x="335" fg:w="3"/><text x="1.7173%" y="607.50"></text></g><g><title>sd-core`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.02%)</title><rect x="1.4804%" y="629" width="0.0219%" height="15" fill="rgb(247,98,35)" fg:x="338" fg:w="5"/><text x="1.7304%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.02%)</title><rect x="1.5330%" y="613" width="0.0219%" height="15" fill="rgb(247,138,52)" fg:x="350" fg:w="5"/><text x="1.7830%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="1.6294%" y="581" width="0.0131%" height="15" fill="rgb(213,79,30)" fg:x="372" fg:w="3"/><text x="1.8794%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (3 samples, 0.01%)</title><rect x="1.6469%" y="581" width="0.0131%" height="15" fill="rgb(246,177,23)" fg:x="376" fg:w="3"/><text x="1.8969%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="1.6644%" y="581" width="0.0219%" height="15" fill="rgb(230,62,27)" fg:x="380" fg:w="5"/><text x="1.9144%" y="591.50"></text></g><g><title>sd-core`&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (22 samples, 0.10%)</title><rect x="1.6863%" y="581" width="0.0964%" height="15" fill="rgb(216,154,8)" fg:x="385" fg:w="22"/><text x="1.9363%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.09%)</title><rect x="1.6907%" y="565" width="0.0920%" height="15" fill="rgb(244,35,45)" fg:x="386" fg:w="21"/><text x="1.9407%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.08%)</title><rect x="1.7038%" y="549" width="0.0788%" height="15" fill="rgb(251,115,12)" fg:x="389" fg:w="18"/><text x="1.9538%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.06%)</title><rect x="1.7257%" y="533" width="0.0569%" height="15" fill="rgb(240,54,50)" fg:x="394" fg:w="13"/><text x="1.9757%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.02%)</title><rect x="1.7651%" y="517" width="0.0175%" height="15" fill="rgb(233,84,52)" fg:x="403" fg:w="4"/><text x="2.0151%" y="527.50"></text></g><g><title>sd-core`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.02%)</title><rect x="1.7827%" y="581" width="0.0219%" height="15" fill="rgb(207,117,47)" fg:x="407" fg:w="5"/><text x="2.0327%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.06%)</title><rect x="1.9097%" y="565" width="0.0613%" height="15" fill="rgb(249,43,39)" fg:x="436" fg:w="14"/><text x="2.1597%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.04%)</title><rect x="1.9316%" y="549" width="0.0394%" height="15" fill="rgb(209,38,44)" fg:x="441" fg:w="9"/><text x="2.1816%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.03%)</title><rect x="1.9754%" y="565" width="0.0307%" height="15" fill="rgb(236,212,23)" fg:x="451" fg:w="7"/><text x="2.2254%" y="575.50"></text></g><g><title>sd-core`aho_corasick::ahocorasick::AhoCorasick::try_find_overlapping_iter (27 samples, 0.12%)</title><rect x="2.1024%" y="517" width="0.1183%" height="15" fill="rgb(242,79,21)" fg:x="480" fg:w="27"/><text x="2.3524%" y="527.50"></text></g><g><title>sd-core`&lt;aho_corasick::dfa::DFA as aho_corasick::automaton::Automaton&gt;::match_kind (6 samples, 0.03%)</title><rect x="2.2820%" y="501" width="0.0263%" height="15" fill="rgb(211,96,35)" fg:x="521" fg:w="6"/><text x="2.5320%" y="511.50"></text></g><g><title>sd-core`&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::is_match (5 samples, 0.02%)</title><rect x="2.3126%" y="501" width="0.0219%" height="15" fill="rgb(253,215,40)" fg:x="528" fg:w="5"/><text x="2.5626%" y="511.50"></text></g><g><title>sd-core`aho_corasick::ahocorasick::AhoCorasick::try_find_overlapping_iter (6 samples, 0.03%)</title><rect x="2.3345%" y="501" width="0.0263%" height="15" fill="rgb(211,81,21)" fg:x="533" fg:w="6"/><text x="2.5845%" y="511.50"></text></g><g><title>sd-core`aho_corasick::ahocorasick::enforce_anchored_consistency (4 samples, 0.02%)</title><rect x="2.3608%" y="501" width="0.0175%" height="15" fill="rgb(208,190,38)" fg:x="539" fg:w="4"/><text x="2.6108%" y="511.50"></text></g><g><title>sd-core`aho_corasick::automaton::Automaton::try_find_overlapping (11 samples, 0.05%)</title><rect x="2.3783%" y="501" width="0.0482%" height="15" fill="rgb(235,213,38)" fg:x="543" fg:w="11"/><text x="2.6283%" y="511.50"></text></g><g><title>sd-core`aho_corasick::automaton::try_find_overlapping_fwd (9 samples, 0.04%)</title><rect x="2.3871%" y="485" width="0.0394%" height="15" fill="rgb(237,122,38)" fg:x="545" fg:w="9"/><text x="2.6371%" y="495.50"></text></g><g><title>sd-core`aho_corasick::automaton::try_find_overlapping_fwd (3 samples, 0.01%)</title><rect x="2.4353%" y="501" width="0.0131%" height="15" fill="rgb(244,218,35)" fg:x="556" fg:w="3"/><text x="2.6853%" y="511.50"></text></g><g><title>sd-core`&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::is_match (65 samples, 0.28%)</title><rect x="2.4616%" y="485" width="0.2847%" height="15" fill="rgb(240,68,47)" fg:x="562" fg:w="65"/><text x="2.7116%" y="495.50"></text></g><g><title>sd-core`regex_automata::hybrid::search::find_fwd (61 samples, 0.27%)</title><rect x="2.4791%" y="469" width="0.2672%" height="15" fill="rgb(210,16,53)" fg:x="566" fg:w="61"/><text x="2.7291%" y="479.50"></text></g><g><title>sd-core`regex_automata::hybrid::search::find_fwd (6 samples, 0.03%)</title><rect x="2.7463%" y="485" width="0.0263%" height="15" fill="rgb(235,124,12)" fg:x="627" fg:w="6"/><text x="2.9963%" y="495.50"></text></g><g><title>sd-core`regex_automata::meta::regex::Regex::is_match (75 samples, 0.33%)</title><rect x="2.4528%" y="501" width="0.3285%" height="15" fill="rgb(224,169,11)" fg:x="560" fg:w="75"/><text x="2.7028%" y="511.50"></text></g><g><title>sd-core`globset::GlobSet::is_match_candidate (129 samples, 0.57%)</title><rect x="2.2250%" y="517" width="0.5650%" height="15" fill="rgb(250,166,2)" fg:x="508" fg:w="129"/><text x="2.4750%" y="527.50"></text></g><g><title>sd-core`globset::pathutil::file_name (4 samples, 0.02%)</title><rect x="2.7901%" y="517" width="0.0175%" height="15" fill="rgb(242,216,29)" fg:x="637" fg:w="4"/><text x="3.0401%" y="527.50"></text></g><g><title>sd-core`globset::GlobSet::is_match (178 samples, 0.78%)</title><rect x="2.0455%" y="533" width="0.7796%" height="15" fill="rgb(230,116,27)" fg:x="467" fg:w="178"/><text x="2.2955%" y="543.50"></text></g><g><title>sd-core`globset::pathutil::file_name (3 samples, 0.01%)</title><rect x="2.8295%" y="533" width="0.0131%" height="15" fill="rgb(228,99,48)" fg:x="646" fg:w="3"/><text x="3.0795%" y="543.50"></text></g><g><title>sd-core`&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (189 samples, 0.83%)</title><rect x="2.0236%" y="549" width="0.8278%" height="15" fill="rgb(253,11,6)" fg:x="462" fg:w="189"/><text x="2.2736%" y="559.50"></text></g><g><title>sd-core`&lt;futures_util::future::try_maybe_done::TryMaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (192 samples, 0.84%)</title><rect x="2.0148%" y="565" width="0.8410%" height="15" fill="rgb(247,143,39)" fg:x="460" fg:w="192"/><text x="2.2648%" y="575.50"></text></g><g><title>sd-core`&lt;futures_util::future::try_join_all::TryJoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (244 samples, 1.07%)</title><rect x="1.8046%" y="581" width="1.0687%" height="15" fill="rgb(236,97,10)" fg:x="412" fg:w="244"/><text x="2.0546%" y="591.50"></text></g><g><title>sd-core`core::ptr::drop_in_place&lt;futures_util::future::try_maybe_done::TryMaybeDone&lt;futures_util::future::try_future::into_future::IntoFuture&lt;sd_core::location::indexer::rules::RulePerKind::apply&lt;&amp;std::path::Path&gt;::{{closure}}&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="2.8558%" y="565" width="0.0175%" height="15" fill="rgb(233,208,19)" fg:x="652" fg:w="4"/><text x="3.1058%" y="575.50"></text></g><g><title>sd-core`&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (295 samples, 1.29%)</title><rect x="1.5987%" y="597" width="1.2921%" height="15" fill="rgb(216,164,2)" fg:x="365" fg:w="295"/><text x="1.8487%" y="607.50"></text></g><g><title>sd-core`&lt;futures_util::future::try_join_all::TryJoinAll&lt;F&gt; as core::future::future::Future&gt;::poll (320 samples, 1.40%)</title><rect x="1.5023%" y="629" width="1.4016%" height="15" fill="rgb(220,129,5)" fg:x="343" fg:w="320"/><text x="1.7523%" y="639.50"></text></g><g><title>sd-core`&lt;futures_util::future::try_maybe_done::TryMaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (305 samples, 1.34%)</title><rect x="1.5680%" y="613" width="1.3359%" height="15" fill="rgb(242,17,10)" fg:x="358" fg:w="305"/><text x="1.8180%" y="623.50"></text></g><g><title>sd-core`core::ptr::drop_in_place&lt;futures_util::future::try_join_all::TryJoinAll&lt;sd_core::location::indexer::rules::RulePerKind::apply&lt;&amp;std::path::Path&gt;::{{closure}}&gt;&gt; (3 samples, 0.01%)</title><rect x="2.8908%" y="597" width="0.0131%" height="15" fill="rgb(242,107,0)" fg:x="660" fg:w="3"/><text x="3.1408%" y="607.50"></text></g><g><title>sd-core`&lt;std::path::Component as core::cmp::PartialEq&gt;::eq (6 samples, 0.03%)</title><rect x="2.9127%" y="629" width="0.0263%" height="15" fill="rgb(251,28,31)" fg:x="665" fg:w="6"/><text x="3.1627%" y="639.50"></text></g><g><title>sd-core`&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (4 samples, 0.02%)</title><rect x="2.9390%" y="629" width="0.0175%" height="15" fill="rgb(233,223,10)" fg:x="671" fg:w="4"/><text x="3.1890%" y="639.50"></text></g><g><title>sd-core`&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.04%)</title><rect x="2.9565%" y="629" width="0.0438%" height="15" fill="rgb(215,21,27)" fg:x="675" fg:w="10"/><text x="3.2065%" y="639.50"></text></g><g><title>sd-core`DYLD-STUB$$free (6 samples, 0.03%)</title><rect x="3.0003%" y="629" width="0.0263%" height="15" fill="rgb(232,23,21)" fg:x="685" fg:w="6"/><text x="3.2503%" y="639.50"></text></g><g><title>sd-core`__rdl_dealloc (3 samples, 0.01%)</title><rect x="3.0397%" y="629" width="0.0131%" height="15" fill="rgb(244,5,23)" fg:x="694" fg:w="3"/><text x="3.2897%" y="639.50"></text></g><g><title>sd-core`__rust_dealloc (4 samples, 0.02%)</title><rect x="3.0529%" y="629" width="0.0175%" height="15" fill="rgb(226,81,46)" fg:x="697" fg:w="4"/><text x="3.3029%" y="639.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="3.0704%" y="629" width="0.0175%" height="15" fill="rgb(247,70,30)" fg:x="701" fg:w="4"/><text x="3.3204%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (24 samples, 0.11%)</title><rect x="3.0967%" y="549" width="0.1051%" height="15" fill="rgb(212,68,19)" fg:x="707" fg:w="24"/><text x="3.3467%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (24 samples, 0.11%)</title><rect x="3.0967%" y="533" width="0.1051%" height="15" fill="rgb(240,187,13)" fg:x="707" fg:w="24"/><text x="3.3467%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (25 samples, 0.11%)</title><rect x="3.0967%" y="565" width="0.1095%" height="15" fill="rgb(223,113,26)" fg:x="707" fg:w="25"/><text x="3.3467%" y="575.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (28 samples, 0.12%)</title><rect x="3.0879%" y="629" width="0.1226%" height="15" fill="rgb(206,192,2)" fg:x="705" fg:w="28"/><text x="3.3379%" y="639.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (26 samples, 0.11%)</title><rect x="3.0967%" y="613" width="0.1139%" height="15" fill="rgb(241,108,4)" fg:x="707" fg:w="26"/><text x="3.3467%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (26 samples, 0.11%)</title><rect x="3.0967%" y="597" width="0.1139%" height="15" fill="rgb(247,173,49)" fg:x="707" fg:w="26"/><text x="3.3467%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (26 samples, 0.11%)</title><rect x="3.0967%" y="581" width="0.1139%" height="15" fill="rgb(224,114,35)" fg:x="707" fg:w="26"/><text x="3.3467%" y="591.50"></text></g><g><title>sd-core`alloc::string::String::from_utf8_lossy (5 samples, 0.02%)</title><rect x="3.2105%" y="629" width="0.0219%" height="15" fill="rgb(245,159,27)" fg:x="733" fg:w="5"/><text x="3.4605%" y="639.50"></text></g><g><title>sd-core`alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.02%)</title><rect x="3.2324%" y="629" width="0.0219%" height="15" fill="rgb(245,172,44)" fg:x="738" fg:w="5"/><text x="3.4824%" y="639.50"></text></g><g><title>sd-core`core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="3.2719%" y="629" width="0.0175%" height="15" fill="rgb(236,23,11)" fg:x="747" fg:w="4"/><text x="3.5219%" y="639.50"></text></g><g><title>sd-core`core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.03%)</title><rect x="3.2894%" y="629" width="0.0263%" height="15" fill="rgb(205,117,38)" fg:x="751" fg:w="6"/><text x="3.5394%" y="639.50"></text></g><g><title>sd-core`core::ptr::drop_in_place&lt;sd_core::location::indexer::rules::IndexerRule&gt; (3 samples, 0.01%)</title><rect x="3.3376%" y="629" width="0.0131%" height="15" fill="rgb(237,72,25)" fg:x="762" fg:w="3"/><text x="3.5876%" y="639.50"></text></g><g><title>sd-core`core::ptr::drop_in_place&lt;sd_core::location::indexer::rules::RulePerKind&gt; (3 samples, 0.01%)</title><rect x="3.3376%" y="613" width="0.0131%" height="15" fill="rgb(244,70,9)" fg:x="762" fg:w="3"/><text x="3.5876%" y="623.50"></text></g><g><title>sd-core`core::str::converts::from_utf8 (6 samples, 0.03%)</title><rect x="3.3595%" y="629" width="0.0263%" height="15" fill="rgb(217,125,39)" fg:x="767" fg:w="6"/><text x="3.6095%" y="639.50"></text></g><g><title>sd-core`hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (5 samples, 0.02%)</title><rect x="3.3857%" y="629" width="0.0219%" height="15" fill="rgb(235,36,10)" fg:x="773" fg:w="5"/><text x="3.6357%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.02%)</title><rect x="3.3901%" y="613" width="0.0175%" height="15" fill="rgb(251,123,47)" fg:x="774" fg:w="4"/><text x="3.6401%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.01%)</title><rect x="3.3945%" y="597" width="0.0131%" height="15" fill="rgb(221,13,13)" fg:x="775" fg:w="3"/><text x="3.6445%" y="607.50"></text></g><g><title>sd-core`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.03%)</title><rect x="3.4208%" y="613" width="0.0263%" height="15" fill="rgb(238,131,9)" fg:x="781" fg:w="6"/><text x="3.6708%" y="623.50"></text></g><g><title>sd-core`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (11 samples, 0.05%)</title><rect x="3.4076%" y="629" width="0.0482%" height="15" fill="rgb(211,50,8)" fg:x="778" fg:w="11"/><text x="3.6576%" y="639.50"></text></g><g><title>sd-core`normpath::normalize::normalize (4 samples, 0.02%)</title><rect x="3.4558%" y="629" width="0.0175%" height="15" fill="rgb(245,182,24)" fg:x="789" fg:w="4"/><text x="3.7058%" y="639.50"></text></g><g><title>sd-core`query_core::executor::execute_operation::build_graph (4 samples, 0.02%)</title><rect x="3.4821%" y="533" width="0.0175%" height="15" fill="rgb(242,14,37)" fg:x="795" fg:w="4"/><text x="3.7321%" y="543.50"></text></g><g><title>sd-core`query_core::query_graph_builder::builder::QueryGraphBuilder::build (4 samples, 0.02%)</title><rect x="3.4821%" y="517" width="0.0175%" height="15" fill="rgb(246,228,12)" fg:x="795" fg:w="4"/><text x="3.7321%" y="527.50"></text></g><g><title>sd-core`query_core::query_graph_builder::builder::QueryGraphBuilder::build_internal (4 samples, 0.02%)</title><rect x="3.4821%" y="501" width="0.0175%" height="15" fill="rgb(213,55,15)" fg:x="795" fg:w="4"/><text x="3.7321%" y="511.50"></text></g><g><title>sd-core`query_core::interpreter::interpreter_impl::QueryInterpreter::interpret::_{{closure}} (3 samples, 0.01%)</title><rect x="3.5040%" y="517" width="0.0131%" height="15" fill="rgb(209,9,3)" fg:x="800" fg:w="3"/><text x="3.7540%" y="527.50"></text></g><g><title>sd-core`query_core::interpreter::interpreter_impl::QueryInterpreter::interpret::_{{closure}} (3 samples, 0.01%)</title><rect x="3.5040%" y="501" width="0.0131%" height="15" fill="rgb(230,59,30)" fg:x="800" fg:w="3"/><text x="3.7540%" y="511.50"></text></g><g><title>sd-core`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="3.5040%" y="485" width="0.0131%" height="15" fill="rgb(209,121,21)" fg:x="800" fg:w="3"/><text x="3.7540%" y="495.50"></text></g><g><title>sd-core`query_core::interpreter::query_interpreters::read::execute::_{{closure}} (3 samples, 0.01%)</title><rect x="3.5040%" y="469" width="0.0131%" height="15" fill="rgb(220,109,13)" fg:x="800" fg:w="3"/><text x="3.7540%" y="479.50"></text></g><g><title>sd-core`query_core::interpreter::query_interpreters::read::read_many::_{{closure}} (3 samples, 0.01%)</title><rect x="3.5040%" y="453" width="0.0131%" height="15" fill="rgb(232,18,1)" fg:x="800" fg:w="3"/><text x="3.7540%" y="463.50"></text></g><g><title>sd-core`&lt;sql_query_connector::database::connection::SqlConnection&lt;C&gt; as query_connector::interface::ReadOperations&gt;::get_many_records::_{{closure}} (3 samples, 0.01%)</title><rect x="3.5040%" y="437" width="0.0131%" height="15" fill="rgb(215,41,42)" fg:x="800" fg:w="3"/><text x="3.7540%" y="447.50"></text></g><g><title>sd-core`prisma_client_rust::queries::find_many::FindMany&lt;Actions&gt;::exec::_{{closure}} (11 samples, 0.05%)</title><rect x="3.4733%" y="629" width="0.0482%" height="15" fill="rgb(224,123,36)" fg:x="793" fg:w="11"/><text x="3.7233%" y="639.50"></text></g><g><title>sd-core`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (11 samples, 0.05%)</title><rect x="3.4733%" y="613" width="0.0482%" height="15" fill="rgb(240,125,3)" fg:x="793" fg:w="11"/><text x="3.7233%" y="623.50"></text></g><g><title>sd-core`prisma_client_rust::client::PrismaClientInternals::execute::_{{closure}} (11 samples, 0.05%)</title><rect x="3.4733%" y="597" width="0.0482%" height="15" fill="rgb(205,98,50)" fg:x="793" fg:w="11"/><text x="3.7233%" y="607.50"></text></g><g><title>sd-core`&lt;query_core::executor::interpreting_executor::InterpretingExecutor&lt;C&gt; as query_core::executor::QueryExecutor&gt;::execute::_{{closure}} (11 samples, 0.05%)</title><rect x="3.4733%" y="581" width="0.0482%" height="15" fill="rgb(205,185,37)" fg:x="793" fg:w="11"/><text x="3.7233%" y="591.50"></text></g><g><title>sd-core`&lt;query_core::executor::interpreting_executor::InterpretingExecutor&lt;C&gt; as query_core::executor::QueryExecutor&gt;::execute::_{{closure}}::_{{closure}} (11 samples, 0.05%)</title><rect x="3.4733%" y="565" width="0.0482%" height="15" fill="rgb(238,207,15)" fg:x="793" fg:w="11"/><text x="3.7233%" y="575.50"></text></g><g><title>sd-core`query_core::executor::execute_operation::execute_self_contained::_{{closure}} (9 samples, 0.04%)</title><rect x="3.4821%" y="549" width="0.0394%" height="15" fill="rgb(213,199,42)" fg:x="795" fg:w="9"/><text x="3.7321%" y="559.50"></text></g><g><title>sd-core`query_core::executor::execute_operation::execute_on::_{{closure}} (5 samples, 0.02%)</title><rect x="3.4996%" y="533" width="0.0219%" height="15" fill="rgb(235,201,11)" fg:x="799" fg:w="5"/><text x="3.7496%" y="543.50"></text></g><g><title>sd-core`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="3.5303%" y="533" width="0.0131%" height="15" fill="rgb(207,46,11)" fg:x="806" fg:w="3"/><text x="3.7803%" y="543.50"></text></g><g><title>sd-core`regex_automata::nfa::thompson::compiler::Compiler::c (3 samples, 0.01%)</title><rect x="3.5303%" y="517" width="0.0131%" height="15" fill="rgb(241,35,35)" fg:x="806" fg:w="3"/><text x="3.7803%" y="527.50"></text></g><g><title>sd-core`regex_automata::nfa::thompson::compiler::Compiler::c (3 samples, 0.01%)</title><rect x="3.5303%" y="501" width="0.0131%" height="15" fill="rgb(243,32,47)" fg:x="806" fg:w="3"/><text x="3.7803%" y="511.50"></text></g><g><title>sd-core`regex_automata::meta::strategy::new (4 samples, 0.02%)</title><rect x="3.5303%" y="565" width="0.0175%" height="15" fill="rgb(247,202,23)" fg:x="806" fg:w="4"/><text x="3.7803%" y="575.50"></text></g><g><title>sd-core`regex_automata::nfa::thompson::compiler::Compiler::compile (4 samples, 0.02%)</title><rect x="3.5303%" y="549" width="0.0175%" height="15" fill="rgb(219,102,11)" fg:x="806" fg:w="4"/><text x="3.7803%" y="559.50"></text></g><g><title>sd-core`regex_syntax::ast::parse::Parser::parse (3 samples, 0.01%)</title><rect x="3.5478%" y="565" width="0.0131%" height="15" fill="rgb(243,110,44)" fg:x="810" fg:w="3"/><text x="3.7978%" y="575.50"></text></g><g><title>sd-core`regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (3 samples, 0.01%)</title><rect x="3.5478%" y="549" width="0.0131%" height="15" fill="rgb(222,74,54)" fg:x="810" fg:w="3"/><text x="3.7978%" y="559.50"></text></g><g><title>sd-core`sd_core::location::indexer::rules::seed::no_os_protected (11 samples, 0.05%)</title><rect x="3.5215%" y="629" width="0.0482%" height="15" fill="rgb(216,99,12)" fg:x="804" fg:w="11"/><text x="3.7715%" y="639.50"></text></g><g><title>sd-core`sd_core::location::indexer::rules::RulePerKind::new_files_by_globs_str_and_kind (11 samples, 0.05%)</title><rect x="3.5215%" y="613" width="0.0482%" height="15" fill="rgb(226,22,26)" fg:x="804" fg:w="11"/><text x="3.7715%" y="623.50"></text></g><g><title>sd-core`globset::GlobSetBuilder::build (9 samples, 0.04%)</title><rect x="3.5303%" y="597" width="0.0394%" height="15" fill="rgb(217,163,10)" fg:x="806" fg:w="9"/><text x="3.7803%" y="607.50"></text></g><g><title>sd-core`regex_automata::meta::regex::Builder::build_many (9 samples, 0.04%)</title><rect x="3.5303%" y="581" width="0.0394%" height="15" fill="rgb(213,25,53)" fg:x="806" fg:w="9"/><text x="3.7803%" y="591.50"></text></g><g><title>Foundation` (4 samples, 0.02%)</title><rect x="3.6748%" y="613" width="0.0175%" height="15" fill="rgb(252,105,26)" fg:x="839" fg:w="4"/><text x="3.9248%" y="623.50"></text></g><g><title>Foundation`+[NSString allocWithZone:] (3 samples, 0.01%)</title><rect x="3.6967%" y="613" width="0.0131%" height="15" fill="rgb(220,39,43)" fg:x="844" fg:w="3"/><text x="3.9467%" y="623.50"></text></g><g><title>Foundation`-[NSFileManager displayNameAtPath:] (6 samples, 0.03%)</title><rect x="3.7099%" y="613" width="0.0263%" height="15" fill="rgb(229,68,48)" fg:x="847" fg:w="6"/><text x="3.9599%" y="623.50"></text></g><g><title>Foundation`-[NSPlaceholderString initWithBytesNoCopy:length:encoding:freeWhenDone:] (5 samples, 0.02%)</title><rect x="3.7361%" y="613" width="0.0219%" height="15" fill="rgb(252,8,32)" fg:x="853" fg:w="5"/><text x="3.9861%" y="623.50"></text></g><g><title>libobjc.A.dylib`__sel_registerName(char const*, bool, bool) (4 samples, 0.02%)</title><rect x="3.7668%" y="613" width="0.0175%" height="15" fill="rgb(223,20,43)" fg:x="860" fg:w="4"/><text x="4.0168%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (11 samples, 0.05%)</title><rect x="3.7843%" y="613" width="0.0482%" height="15" fill="rgb(229,81,49)" fg:x="864" fg:w="11"/><text x="4.0343%" y="623.50"></text></g><g><title>libobjc.A.dylib`sel_registerName (6 samples, 0.03%)</title><rect x="3.8325%" y="613" width="0.0263%" height="15" fill="rgb(236,28,36)" fg:x="875" fg:w="6"/><text x="4.0825%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="3.8588%" y="613" width="0.0131%" height="15" fill="rgb(249,185,26)" fg:x="881" fg:w="3"/><text x="4.1088%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (18 samples, 0.08%)</title><rect x="3.8719%" y="613" width="0.0788%" height="15" fill="rgb(249,174,33)" fg:x="884" fg:w="18"/><text x="4.1219%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (5 samples, 0.02%)</title><rect x="3.9508%" y="613" width="0.0219%" height="15" fill="rgb(233,201,37)" fg:x="902" fg:w="5"/><text x="4.2008%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (4 samples, 0.02%)</title><rect x="3.9551%" y="597" width="0.0175%" height="15" fill="rgb(221,78,26)" fg:x="903" fg:w="4"/><text x="4.2051%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="3.9727%" y="613" width="0.0131%" height="15" fill="rgb(250,127,30)" fg:x="907" fg:w="3"/><text x="4.2227%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.01%)</title><rect x="3.9902%" y="613" width="0.0131%" height="15" fill="rgb(230,49,44)" fg:x="911" fg:w="3"/><text x="4.2402%" y="623.50"></text></g><g><title>sd-core`&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="4.0121%" y="613" width="0.0175%" height="15" fill="rgb(229,67,23)" fg:x="916" fg:w="4"/><text x="4.2621%" y="623.50"></text></g><g><title>sd-core`&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (7 samples, 0.03%)</title><rect x="4.0296%" y="613" width="0.0307%" height="15" fill="rgb(249,83,47)" fg:x="920" fg:w="7"/><text x="4.2796%" y="623.50"></text></g><g><title>sd-core`std::path::Components::parse_next_component_back (4 samples, 0.02%)</title><rect x="4.0427%" y="597" width="0.0175%" height="15" fill="rgb(215,43,3)" fg:x="923" fg:w="4"/><text x="4.2927%" y="607.50"></text></g><g><title>sd-core`DYLD-STUB$$objc_retain (3 samples, 0.01%)</title><rect x="4.0734%" y="613" width="0.0131%" height="15" fill="rgb(238,154,13)" fg:x="930" fg:w="3"/><text x="4.3234%" y="623.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="4.0953%" y="613" width="0.0175%" height="15" fill="rgb(219,56,2)" fg:x="935" fg:w="4"/><text x="4.3453%" y="623.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="4.1128%" y="613" width="0.0219%" height="15" fill="rgb(233,0,4)" fg:x="939" fg:w="5"/><text x="4.3628%" y="623.50"></text></g><g><title>sd-core`core::str::lossy::Utf8Chunk::valid (3 samples, 0.01%)</title><rect x="4.1479%" y="613" width="0.0131%" height="15" fill="rgb(235,30,7)" fg:x="947" fg:w="3"/><text x="4.3979%" y="623.50"></text></g><g><title>sd-core`core::str::lossy::Utf8Chunks::new (3 samples, 0.01%)</title><rect x="4.1610%" y="613" width="0.0131%" height="15" fill="rgb(250,79,13)" fg:x="950" fg:w="3"/><text x="4.4110%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_object::changeIsa (3 samples, 0.01%)</title><rect x="4.3231%" y="565" width="0.0131%" height="15" fill="rgb(211,146,34)" fg:x="987" fg:w="3"/><text x="4.5731%" y="575.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (19 samples, 0.08%)</title><rect x="4.2793%" y="581" width="0.0832%" height="15" fill="rgb(228,22,38)" fg:x="977" fg:w="19"/><text x="4.5293%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (5 samples, 0.02%)</title><rect x="4.3406%" y="565" width="0.0219%" height="15" fill="rgb(235,168,5)" fg:x="991" fg:w="5"/><text x="4.5906%" y="575.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (18 samples, 0.08%)</title><rect x="4.3712%" y="581" width="0.0788%" height="15" fill="rgb(221,155,16)" fg:x="998" fg:w="18"/><text x="4.6212%" y="591.50"></text></g><g><title>CoreFoundation`__CFStrHashEightBit2 (3 samples, 0.01%)</title><rect x="4.4501%" y="581" width="0.0131%" height="15" fill="rgb(215,215,53)" fg:x="1016" fg:w="3"/><text x="4.7001%" y="591.50"></text></g><g><title>libobjc.A.dylib`object_setClass (6 samples, 0.03%)</title><rect x="4.4720%" y="581" width="0.0263%" height="15" fill="rgb(223,4,10)" fg:x="1021" fg:w="6"/><text x="4.7220%" y="591.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (67 samples, 0.29%)</title><rect x="4.2092%" y="597" width="0.2935%" height="15" fill="rgb(234,103,6)" fg:x="961" fg:w="67"/><text x="4.4592%" y="607.50"></text></g><g><title>Foundation` (7 samples, 0.03%)</title><rect x="4.5026%" y="597" width="0.0307%" height="15" fill="rgb(227,97,0)" fg:x="1028" fg:w="7"/><text x="4.7526%" y="607.50"></text></g><g><title>CoreFoundation` (4 samples, 0.02%)</title><rect x="4.5596%" y="581" width="0.0175%" height="15" fill="rgb(234,150,53)" fg:x="1041" fg:w="4"/><text x="4.8096%" y="591.50"></text></g><g><title>CoreFoundation`_CFURLHasFileURLScheme (4 samples, 0.02%)</title><rect x="4.5946%" y="549" width="0.0175%" height="15" fill="rgb(228,201,54)" fg:x="1049" fg:w="4"/><text x="4.8446%" y="559.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (3 samples, 0.01%)</title><rect x="4.5990%" y="533" width="0.0131%" height="15" fill="rgb(222,22,37)" fg:x="1050" fg:w="3"/><text x="4.8490%" y="543.50"></text></g><g><title>CoreFoundation`__CFURLSetResourceInfoPtr (13 samples, 0.06%)</title><rect x="4.6428%" y="533" width="0.0569%" height="15" fill="rgb(237,53,32)" fg:x="1060" fg:w="13"/><text x="4.8928%" y="543.50"></text></g><g><title>CoreServicesInternal`DYLD-STUB$$CFDictionaryGetValue (8 samples, 0.04%)</title><rect x="4.6998%" y="533" width="0.0350%" height="15" fill="rgb(233,25,53)" fg:x="1073" fg:w="8"/><text x="4.9498%" y="543.50"></text></g><g><title>CoreFoundation`CFGetAllocator (6 samples, 0.03%)</title><rect x="4.7655%" y="517" width="0.0263%" height="15" fill="rgb(210,40,34)" fg:x="1088" fg:w="6"/><text x="5.0155%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (3 samples, 0.01%)</title><rect x="4.8574%" y="469" width="0.0131%" height="15" fill="rgb(241,220,44)" fg:x="1109" fg:w="3"/><text x="5.1074%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (29 samples, 0.13%)</title><rect x="4.8443%" y="501" width="0.1270%" height="15" fill="rgb(235,28,35)" fg:x="1106" fg:w="29"/><text x="5.0943%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (27 samples, 0.12%)</title><rect x="4.8531%" y="485" width="0.1183%" height="15" fill="rgb(210,56,17)" fg:x="1108" fg:w="27"/><text x="5.1031%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (21 samples, 0.09%)</title><rect x="4.8793%" y="469" width="0.0920%" height="15" fill="rgb(224,130,29)" fg:x="1114" fg:w="21"/><text x="5.1293%" y="479.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (37 samples, 0.16%)</title><rect x="4.8224%" y="517" width="0.1621%" height="15" fill="rgb(235,212,8)" fg:x="1101" fg:w="37"/><text x="5.0724%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.01%)</title><rect x="4.9713%" y="501" width="0.0131%" height="15" fill="rgb(223,33,50)" fg:x="1135" fg:w="3"/><text x="5.2213%" y="511.50"></text></g><g><title>CoreServicesInternal`_FileCacheGetForURL(__CFURL const*, void*) (58 samples, 0.25%)</title><rect x="4.7611%" y="533" width="0.2540%" height="15" fill="rgb(219,149,13)" fg:x="1087" fg:w="58"/><text x="5.0111%" y="543.50"></text></g><g><title>CoreServicesInternal`getPropertyForKey(__CFString const*) (5 samples, 0.02%)</title><rect x="5.0239%" y="533" width="0.0219%" height="15" fill="rgb(250,156,29)" fg:x="1147" fg:w="5"/><text x="5.2739%" y="543.50"></text></g><g><title>CoreFoundation`___CFBasicHashFindBucket_Linear (3 samples, 0.01%)</title><rect x="5.0326%" y="517" width="0.0131%" height="15" fill="rgb(216,193,19)" fg:x="1149" fg:w="3"/><text x="5.2826%" y="527.50"></text></g><g><title>CoreServicesInternal`initGlobalsOnce() (3 samples, 0.01%)</title><rect x="5.0458%" y="533" width="0.0131%" height="15" fill="rgb(216,135,14)" fg:x="1152" fg:w="3"/><text x="5.2958%" y="543.50"></text></g><g><title>CoreFoundation`CFURLGetBaseURL (3 samples, 0.01%)</title><rect x="5.2210%" y="517" width="0.0131%" height="15" fill="rgb(241,47,5)" fg:x="1192" fg:w="3"/><text x="5.4710%" y="527.50"></text></g><g><title>CoreFoundation`CFURLGetFileSystemRepresentation (3 samples, 0.01%)</title><rect x="5.2341%" y="517" width="0.0131%" height="15" fill="rgb(233,42,35)" fg:x="1195" fg:w="3"/><text x="5.4841%" y="527.50"></text></g><g><title>CarbonCore`FSMountStorageSize (9 samples, 0.04%)</title><rect x="5.3305%" y="501" width="0.0394%" height="15" fill="rgb(231,13,6)" fg:x="1217" fg:w="9"/><text x="5.5805%" y="511.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (5 samples, 0.02%)</title><rect x="5.3743%" y="485" width="0.0219%" height="15" fill="rgb(207,181,40)" fg:x="1227" fg:w="5"/><text x="5.6243%" y="495.50"></text></g><g><title>CoreFoundation`CFURLGetFileSystemRepresentation (6 samples, 0.03%)</title><rect x="5.3743%" y="501" width="0.0263%" height="15" fill="rgb(254,173,49)" fg:x="1227" fg:w="6"/><text x="5.6243%" y="511.50"></text></g><g><title>CoreFoundation`CanonicalFileURLStringToFileSystemRepresentation (23 samples, 0.10%)</title><rect x="5.4049%" y="501" width="0.1007%" height="15" fill="rgb(221,1,38)" fg:x="1234" fg:w="23"/><text x="5.6549%" y="511.50"></text></g><g><title>CoreServicesInternal`DYLD-STUB$$FSMountGetCapabilities (3 samples, 0.01%)</title><rect x="5.5188%" y="501" width="0.0131%" height="15" fill="rgb(206,124,46)" fg:x="1260" fg:w="3"/><text x="5.7688%" y="511.50"></text></g><g><title>CarbonCore`FSMountGetVolumeFlags (7 samples, 0.03%)</title><rect x="5.7510%" y="485" width="0.0307%" height="15" fill="rgb(249,21,11)" fg:x="1313" fg:w="7"/><text x="6.0010%" y="495.50"></text></g><g><title>CarbonCore`_SCSessionUniverseUnlockAndRelease (4 samples, 0.02%)</title><rect x="5.8035%" y="469" width="0.0175%" height="15" fill="rgb(222,201,40)" fg:x="1325" fg:w="4"/><text x="6.0535%" y="479.50"></text></g><g><title>CarbonCore`FileIDTreeUnlockSharedVolumeInfo (9 samples, 0.04%)</title><rect x="5.7860%" y="485" width="0.0394%" height="15" fill="rgb(235,61,29)" fg:x="1321" fg:w="9"/><text x="6.0360%" y="495.50"></text></g><g><title>CarbonCore`DYLD-STUB$$pthread_mutex_unlock (3 samples, 0.01%)</title><rect x="5.8780%" y="405" width="0.0131%" height="15" fill="rgb(219,207,3)" fg:x="1342" fg:w="3"/><text x="6.1280%" y="415.50"></text></g><g><title>CarbonCore`SCUniverseFindUIDRecord (4 samples, 0.02%)</title><rect x="5.9043%" y="389" width="0.0175%" height="15" fill="rgb(222,56,46)" fg:x="1348" fg:w="4"/><text x="6.1543%" y="399.50"></text></g><g><title>CarbonCore`SCGetSessionLocalUniverseInfo (3 samples, 0.01%)</title><rect x="5.9086%" y="373" width="0.0131%" height="15" fill="rgb(239,76,54)" fg:x="1349" fg:w="3"/><text x="6.1586%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.01%)</title><rect x="5.9437%" y="389" width="0.0131%" height="15" fill="rgb(231,124,27)" fg:x="1357" fg:w="3"/><text x="6.1937%" y="399.50"></text></g><g><title>CarbonCore`_SCSessionUniverseByUIDAcquireAndLock (15 samples, 0.07%)</title><rect x="5.8955%" y="405" width="0.0657%" height="15" fill="rgb(249,195,6)" fg:x="1346" fg:w="15"/><text x="6.1455%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__gettid (61 samples, 0.27%)</title><rect x="5.9831%" y="373" width="0.2672%" height="15" fill="rgb(237,174,47)" fg:x="1366" fg:w="61"/><text x="6.2331%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`getegid (47 samples, 0.21%)</title><rect x="6.2503%" y="373" width="0.2059%" height="15" fill="rgb(206,201,31)" fg:x="1427" fg:w="47"/><text x="6.5003%" y="383.50"></text></g><g><title>CoreFoundation`__CFGetUGIDs (183 samples, 0.80%)</title><rect x="5.9656%" y="389" width="0.8015%" height="15" fill="rgb(231,57,52)" fg:x="1362" fg:w="183"/><text x="6.2156%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`geteuid (71 samples, 0.31%)</title><rect x="6.4561%" y="373" width="0.3110%" height="15" fill="rgb(248,177,22)" fg:x="1474" fg:w="71"/><text x="6.7061%" y="383.50"></text></g><g><title>CarbonCore`FSNodeStorageGetAndLockCurrentUniverse (207 samples, 0.91%)</title><rect x="5.8648%" y="421" width="0.9067%" height="15" fill="rgb(215,211,37)" fg:x="1339" fg:w="207"/><text x="6.1148%" y="431.50"></text></g><g><title>CoreFoundation`_CFGetEUID (184 samples, 0.81%)</title><rect x="5.9656%" y="405" width="0.8059%" height="15" fill="rgb(241,128,51)" fg:x="1362" fg:w="184"/><text x="6.2156%" y="415.50"></text></g><g><title>CarbonCore`FSNodeEntry_FindByFileID (25 samples, 0.11%)</title><rect x="6.7803%" y="405" width="0.1095%" height="15" fill="rgb(227,165,31)" fg:x="1548" fg:w="25"/><text x="7.0303%" y="415.50"></text></g><g><title>CarbonCore`_SCUniverseGetEntryAddress (21 samples, 0.09%)</title><rect x="6.7978%" y="389" width="0.0920%" height="15" fill="rgb(228,167,24)" fg:x="1552" fg:w="21"/><text x="7.0478%" y="399.50"></text></g><g><title>CarbonCore`GetDomainBlockSize (11 samples, 0.05%)</title><rect x="6.8416%" y="373" width="0.0482%" height="15" fill="rgb(228,143,12)" fg:x="1562" fg:w="11"/><text x="7.0916%" y="383.50"></text></g><g><title>CarbonCore`GetDomainBlockSize (4 samples, 0.02%)</title><rect x="6.8985%" y="389" width="0.0175%" height="15" fill="rgb(249,149,8)" fg:x="1575" fg:w="4"/><text x="7.1485%" y="399.50"></text></g><g><title>CarbonCore`FileIDTreeGetRootEntryBridge (5 samples, 0.02%)</title><rect x="6.8985%" y="405" width="0.0219%" height="15" fill="rgb(243,35,44)" fg:x="1575" fg:w="5"/><text x="7.1485%" y="415.50"></text></g><g><title>CarbonCore`FileIDTree_FindVolumeRecordFromDeviceID (41 samples, 0.18%)</title><rect x="6.7715%" y="421" width="0.1796%" height="15" fill="rgb(246,89,9)" fg:x="1546" fg:w="41"/><text x="7.0215%" y="431.50"></text></g><g><title>CarbonCore`_SCUniverseGetEntryAddress (5 samples, 0.02%)</title><rect x="6.9292%" y="405" width="0.0219%" height="15" fill="rgb(233,213,13)" fg:x="1582" fg:w="5"/><text x="7.1792%" y="415.50"></text></g><g><title>CarbonCore`_SCSessionUniverseUnlockAndRelease (5 samples, 0.02%)</title><rect x="6.9555%" y="421" width="0.0219%" height="15" fill="rgb(233,141,41)" fg:x="1588" fg:w="5"/><text x="7.2055%" y="431.50"></text></g><g><title>CarbonCore`FileIDTreeGetAndLockVolumeEntryForDeviceID (259 samples, 1.13%)</title><rect x="5.8473%" y="437" width="1.1344%" height="15" fill="rgb(239,167,4)" fg:x="1335" fg:w="259"/><text x="6.0973%" y="447.50"></text></g><g><title>CarbonCore`FSMount::FSMount (262 samples, 1.15%)</title><rect x="5.8386%" y="453" width="1.1476%" height="15" fill="rgb(209,217,16)" fg:x="1333" fg:w="262"/><text x="6.0886%" y="463.50"></text></g><g><title>CoreServicesInternal`MountInfoPrepare (268 samples, 1.17%)</title><rect x="5.8298%" y="485" width="1.1738%" height="15" fill="rgb(219,88,35)" fg:x="1331" fg:w="268"/><text x="6.0798%" y="495.50"></text></g><g><title>CarbonCore`FSMountPrepare (266 samples, 1.17%)</title><rect x="5.8386%" y="469" width="1.1651%" height="15" fill="rgb(220,193,23)" fg:x="1333" fg:w="266"/><text x="6.0886%" y="479.50"></text></g><g><title>CarbonCore`getCorrectedDevice(unsigned int) (4 samples, 0.02%)</title><rect x="6.9861%" y="453" width="0.0175%" height="15" fill="rgb(230,90,52)" fg:x="1595" fg:w="4"/><text x="7.2361%" y="463.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (15 samples, 0.07%)</title><rect x="7.0562%" y="453" width="0.0657%" height="15" fill="rgb(252,106,19)" fg:x="1611" fg:w="15"/><text x="7.3062%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (3 samples, 0.01%)</title><rect x="7.1088%" y="437" width="0.0131%" height="15" fill="rgb(206,74,20)" fg:x="1623" fg:w="3"/><text x="7.3588%" y="447.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (21 samples, 0.09%)</title><rect x="7.1263%" y="453" width="0.0920%" height="15" fill="rgb(230,138,44)" fg:x="1627" fg:w="21"/><text x="7.3763%" y="463.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (50 samples, 0.22%)</title><rect x="7.0168%" y="469" width="0.2190%" height="15" fill="rgb(235,182,43)" fg:x="1602" fg:w="50"/><text x="7.2668%" y="479.50"></text></g><g><title>CoreServicesInternal`parseAttributeBuffer(__CFAllocator const*, unsigned char const*, unsigned char, attrlist const*, void const*, void**, _FileAttributes*, unsigned int*, unsigned char) (386 samples, 1.69%)</title><rect x="5.5495%" y="501" width="1.6907%" height="15" fill="rgb(242,16,51)" fg:x="1267" fg:w="386"/><text x="5.7995%" y="511.50"></text></g><g><title>CoreServicesInternal`SetNameAndHiddenFlagsFromCString(__CFAllocator const*, char const*, long, _FileAttributes*) (54 samples, 0.24%)</title><rect x="7.0036%" y="485" width="0.2365%" height="15" fill="rgb(248,9,4)" fg:x="1599" fg:w="54"/><text x="7.2536%" y="495.50"></text></g><g><title>CoreServicesInternal`corePropertyProviderPrepareValues(__CFURL const*, __FileCache*, __CFString const* const*, void const**, long, void const*, __CFError**) (446 samples, 1.95%)</title><rect x="5.2998%" y="517" width="1.9535%" height="15" fill="rgb(210,31,22)" fg:x="1210" fg:w="446"/><text x="5.5498%" y="527.50">C..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (3 samples, 0.01%)</title><rect x="7.2402%" y="501" width="0.0131%" height="15" fill="rgb(239,54,39)" fg:x="1653" fg:w="3"/><text x="7.4902%" y="511.50"></text></g><g><title>CoreFoundation`CFEqual (10 samples, 0.04%)</title><rect x="7.2752%" y="501" width="0.0438%" height="15" fill="rgb(230,99,41)" fg:x="1661" fg:w="10"/><text x="7.5252%" y="511.50"></text></g><g><title>CoreFoundation`CFGetAllocator (3 samples, 0.01%)</title><rect x="7.3190%" y="501" width="0.0131%" height="15" fill="rgb(253,106,12)" fg:x="1671" fg:w="3"/><text x="7.5690%" y="511.50"></text></g><g><title>CoreFoundation`CFStringGetLength (4 samples, 0.02%)</title><rect x="7.4504%" y="469" width="0.0175%" height="15" fill="rgb(213,46,41)" fg:x="1701" fg:w="4"/><text x="7.7004%" y="479.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (3 samples, 0.01%)</title><rect x="7.4548%" y="453" width="0.0131%" height="15" fill="rgb(215,133,35)" fg:x="1702" fg:w="3"/><text x="7.7048%" y="463.50"></text></g><g><title>CoreFoundation`CanonicalFileURLStringToFileSystemRepresentation (27 samples, 0.12%)</title><rect x="7.3540%" y="485" width="0.1183%" height="15" fill="rgb(213,28,5)" fg:x="1679" fg:w="27"/><text x="7.6040%" y="495.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (8 samples, 0.04%)</title><rect x="7.5117%" y="469" width="0.0350%" height="15" fill="rgb(215,77,49)" fg:x="1715" fg:w="8"/><text x="7.7617%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (4 samples, 0.02%)</title><rect x="7.5292%" y="453" width="0.0175%" height="15" fill="rgb(248,100,22)" fg:x="1719" fg:w="4"/><text x="7.7792%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (3 samples, 0.01%)</title><rect x="7.5336%" y="437" width="0.0131%" height="15" fill="rgb(208,67,9)" fg:x="1720" fg:w="3"/><text x="7.7836%" y="447.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (4 samples, 0.02%)</title><rect x="7.5468%" y="469" width="0.0175%" height="15" fill="rgb(219,133,21)" fg:x="1723" fg:w="4"/><text x="7.7968%" y="479.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (23 samples, 0.10%)</title><rect x="7.4767%" y="485" width="0.1007%" height="15" fill="rgb(246,46,29)" fg:x="1707" fg:w="23"/><text x="7.7267%" y="495.50"></text></g><g><title>CoreFoundation`CFURLCopyFileSystemPath (56 samples, 0.25%)</title><rect x="7.3365%" y="501" width="0.2453%" height="15" fill="rgb(246,185,52)" fg:x="1675" fg:w="56"/><text x="7.5865%" y="511.50"></text></g><g><title>CoreFoundation`_CFRelease (3 samples, 0.01%)</title><rect x="7.5993%" y="501" width="0.0131%" height="15" fill="rgb(252,136,11)" fg:x="1735" fg:w="3"/><text x="7.8493%" y="511.50"></text></g><g><title>CoreFoundation`CFBasicHashGetPtrIndex (57 samples, 0.25%)</title><rect x="7.6563%" y="437" width="0.2497%" height="15" fill="rgb(219,138,53)" fg:x="1748" fg:w="57"/><text x="7.9063%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (10 samples, 0.04%)</title><rect x="7.9191%" y="421" width="0.0438%" height="15" fill="rgb(211,51,23)" fg:x="1808" fg:w="10"/><text x="8.1691%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (5 samples, 0.02%)</title><rect x="7.9410%" y="405" width="0.0219%" height="15" fill="rgb(247,221,28)" fg:x="1813" fg:w="5"/><text x="8.1910%" y="415.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (15 samples, 0.07%)</title><rect x="7.9059%" y="437" width="0.0657%" height="15" fill="rgb(251,222,45)" fg:x="1805" fg:w="15"/><text x="8.1559%" y="447.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (4 samples, 0.02%)</title><rect x="7.9760%" y="437" width="0.0175%" height="15" fill="rgb(217,162,53)" fg:x="1821" fg:w="4"/><text x="8.2260%" y="447.50"></text></g><g><title>CoreFoundation`CFBasicHashCreate (82 samples, 0.36%)</title><rect x="7.6563%" y="453" width="0.3592%" height="15" fill="rgb(229,93,14)" fg:x="1748" fg:w="82"/><text x="7.9063%" y="463.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (5 samples, 0.02%)</title><rect x="7.9935%" y="437" width="0.0219%" height="15" fill="rgb(209,67,49)" fg:x="1825" fg:w="5"/><text x="8.2435%" y="447.50"></text></g><g><title>CoreFoundation`__CFDictionaryCreateGeneric (86 samples, 0.38%)</title><rect x="7.6519%" y="469" width="0.3767%" height="15" fill="rgb(213,87,29)" fg:x="1747" fg:w="86"/><text x="7.9019%" y="479.50"></text></g><g><title>CoreFoundation`CFDictionaryCreateMutable (91 samples, 0.40%)</title><rect x="7.6387%" y="485" width="0.3986%" height="15" fill="rgb(205,151,52)" fg:x="1744" fg:w="91"/><text x="7.8887%" y="495.50"></text></g><g><title>CoreFoundation`CFRetain (3 samples, 0.01%)</title><rect x="8.0505%" y="469" width="0.0131%" height="15" fill="rgb(253,215,39)" fg:x="1838" fg:w="3"/><text x="8.3005%" y="479.50"></text></g><g><title>CoreFoundation`CFRetain (3 samples, 0.01%)</title><rect x="8.0855%" y="453" width="0.0131%" height="15" fill="rgb(221,220,41)" fg:x="1846" fg:w="3"/><text x="8.3355%" y="463.50"></text></g><g><title>CoreFoundation`CFAllocatorDeallocate (3 samples, 0.01%)</title><rect x="8.1118%" y="437" width="0.0131%" height="15" fill="rgb(218,133,21)" fg:x="1852" fg:w="3"/><text x="8.3618%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.01%)</title><rect x="8.1337%" y="437" width="0.0131%" height="15" fill="rgb(221,193,43)" fg:x="1857" fg:w="3"/><text x="8.3837%" y="447.50"></text></g><g><title>CoreFoundation`__CFBasicHashRehash (11 samples, 0.05%)</title><rect x="8.1030%" y="453" width="0.0482%" height="15" fill="rgb(240,128,52)" fg:x="1850" fg:w="11"/><text x="8.3530%" y="463.50"></text></g><g><title>CoreFoundation`__CFStringHash (3 samples, 0.01%)</title><rect x="8.1512%" y="453" width="0.0131%" height="15" fill="rgb(253,114,12)" fg:x="1861" fg:w="3"/><text x="8.4012%" y="463.50"></text></g><g><title>CoreFoundation`CFHash (3 samples, 0.01%)</title><rect x="8.1643%" y="437" width="0.0131%" height="15" fill="rgb(215,223,47)" fg:x="1864" fg:w="3"/><text x="8.4143%" y="447.50"></text></g><g><title>CoreFoundation`___CFBasicHashFindBucket_Linear_NoCollision (5 samples, 0.02%)</title><rect x="8.1643%" y="453" width="0.0219%" height="15" fill="rgb(248,225,23)" fg:x="1864" fg:w="5"/><text x="8.4143%" y="463.50"></text></g><g><title>CoreFoundation`CFDictionarySetValue (35 samples, 0.15%)</title><rect x="8.0373%" y="485" width="0.1533%" height="15" fill="rgb(250,108,0)" fg:x="1835" fg:w="35"/><text x="8.2873%" y="495.50"></text></g><g><title>CoreFoundation`__CFBasicHashAddValue (28 samples, 0.12%)</title><rect x="8.0680%" y="469" width="0.1226%" height="15" fill="rgb(228,208,7)" fg:x="1842" fg:w="28"/><text x="8.3180%" y="479.50"></text></g><g><title>CoreServicesInternal`_FileCacheSetPropertyValueForKey (131 samples, 0.57%)</title><rect x="7.6387%" y="501" width="0.5738%" height="15" fill="rgb(244,45,10)" fg:x="1744" fg:w="131"/><text x="7.8887%" y="511.50"></text></g><g><title>CoreServicesInternal`pathURLPropertyProviderPrepareValues(__CFURL const*, __FileCache*, __CFString const* const*, void const**, long, void const*, __CFError**) (221 samples, 0.97%)</title><rect x="7.2533%" y="517" width="0.9680%" height="15" fill="rgb(207,125,25)" fg:x="1656" fg:w="221"/><text x="7.5033%" y="527.50"></text></g><g><title>LaunchServices`-[FSNode initWithURL:flags:error:] (5 samples, 0.02%)</title><rect x="8.2213%" y="517" width="0.0219%" height="15" fill="rgb(210,195,18)" fg:x="1877" fg:w="5"/><text x="8.4713%" y="527.50"></text></g><g><title>CoreFoundation`CFEqual (4 samples, 0.02%)</title><rect x="8.3439%" y="453" width="0.0175%" height="15" fill="rgb(249,80,12)" fg:x="1905" fg:w="4"/><text x="8.5939%" y="463.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (3 samples, 0.01%)</title><rect x="8.3483%" y="437" width="0.0131%" height="15" fill="rgb(221,65,9)" fg:x="1906" fg:w="3"/><text x="8.5983%" y="447.50"></text></g><g><title>CoreFoundation`CFHash (4 samples, 0.02%)</title><rect x="8.3614%" y="453" width="0.0175%" height="15" fill="rgb(235,49,36)" fg:x="1909" fg:w="4"/><text x="8.6114%" y="463.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValueIfPresent (16 samples, 0.07%)</title><rect x="8.3220%" y="485" width="0.0701%" height="15" fill="rgb(225,32,20)" fg:x="1900" fg:w="16"/><text x="8.5720%" y="495.50"></text></g><g><title>CoreFoundation`___CFBasicHashFindBucket_Linear (12 samples, 0.05%)</title><rect x="8.3395%" y="469" width="0.0526%" height="15" fill="rgb(215,141,46)" fg:x="1904" fg:w="12"/><text x="8.5895%" y="479.50"></text></g><g><title>CoreServicesInternal`_FileCacheGetPropertyValueForKey (18 samples, 0.08%)</title><rect x="8.3176%" y="501" width="0.0788%" height="15" fill="rgb(250,160,47)" fg:x="1899" fg:w="18"/><text x="8.5676%" y="511.50"></text></g><g><title>LaunchServices`-[FSNode canIssueIO] (4 samples, 0.02%)</title><rect x="8.4096%" y="501" width="0.0175%" height="15" fill="rgb(216,222,40)" fg:x="1920" fg:w="4"/><text x="8.6596%" y="511.50"></text></g><g><title>CoreFoundation`_CFURLHasFileURLScheme (3 samples, 0.01%)</title><rect x="8.4534%" y="469" width="0.0131%" height="15" fill="rgb(234,217,39)" fg:x="1930" fg:w="3"/><text x="8.7034%" y="479.50"></text></g><g><title>Foundation`-[NSURL(NSURL) isFileURL] (6 samples, 0.03%)</title><rect x="8.4447%" y="485" width="0.0263%" height="15" fill="rgb(207,178,40)" fg:x="1928" fg:w="6"/><text x="8.6947%" y="495.50"></text></g><g><title>Foundation`objc_msgSend$_cfurl (5 samples, 0.02%)</title><rect x="8.4797%" y="485" width="0.0219%" height="15" fill="rgb(221,136,13)" fg:x="1936" fg:w="5"/><text x="8.7297%" y="495.50"></text></g><g><title>LaunchServices`-[FSNode initWithURL:flags:error:] (23 samples, 0.10%)</title><rect x="8.4271%" y="501" width="0.1007%" height="15" fill="rgb(249,199,10)" fg:x="1924" fg:w="23"/><text x="8.6771%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_storeStrong (5 samples, 0.02%)</title><rect x="8.5060%" y="485" width="0.0219%" height="15" fill="rgb(249,222,13)" fg:x="1942" fg:w="5"/><text x="8.7560%" y="495.50"></text></g><g><title>LaunchServices`LaunchServices::URLPropertyProvider::getDisplayNameConstructor(LaunchServices::Database::Context&amp;, id (6 samples, 0.03%)</title><rect x="8.5585%" y="501" width="0.0263%" height="15" fill="rgb(244,185,38)" fg:x="1954" fg:w="6"/><text x="8.8085%" y="511.50"></text></g><g><title>CoreFoundation`__CFStringHash (3 samples, 0.01%)</title><rect x="8.6067%" y="437" width="0.0131%" height="15" fill="rgb(236,202,9)" fg:x="1965" fg:w="3"/><text x="8.8567%" y="447.50"></text></g><g><title>CoreFoundation`CFEqual (5 samples, 0.02%)</title><rect x="8.6286%" y="421" width="0.0219%" height="15" fill="rgb(250,229,37)" fg:x="1970" fg:w="5"/><text x="8.8786%" y="431.50"></text></g><g><title>CoreFoundation`CFBasicHashSetValue (16 samples, 0.07%)</title><rect x="8.5980%" y="453" width="0.0701%" height="15" fill="rgb(206,174,23)" fg:x="1963" fg:w="16"/><text x="8.8480%" y="463.50"></text></g><g><title>CoreFoundation`___CFBasicHashFindBucket_Linear (11 samples, 0.05%)</title><rect x="8.6199%" y="437" width="0.0482%" height="15" fill="rgb(211,33,43)" fg:x="1968" fg:w="11"/><text x="8.8699%" y="447.50"></text></g><g><title>CoreServicesInternal`_FileCacheSetPropertyValueForKey (23 samples, 0.10%)</title><rect x="8.5980%" y="485" width="0.1007%" height="15" fill="rgb(245,58,50)" fg:x="1963" fg:w="23"/><text x="8.8480%" y="495.50"></text></g><g><title>CoreFoundation`CFDictionarySetValue (23 samples, 0.10%)</title><rect x="8.5980%" y="469" width="0.1007%" height="15" fill="rgb(244,68,36)" fg:x="1963" fg:w="23"/><text x="8.8480%" y="479.50"></text></g><g><title>CoreFoundation`__CFBasicHashAddValue (7 samples, 0.03%)</title><rect x="8.6680%" y="453" width="0.0307%" height="15" fill="rgb(232,229,15)" fg:x="1979" fg:w="7"/><text x="8.9180%" y="463.50"></text></g><g><title>LaunchServices` (10 samples, 0.04%)</title><rect x="8.6987%" y="485" width="0.0438%" height="15" fill="rgb(254,30,23)" fg:x="1986" fg:w="10"/><text x="8.9487%" y="495.50"></text></g><g><title>LaunchServices`-[FSNode(SandboxChecks) canReadFromSandboxWithAuditToken:] (8 samples, 0.04%)</title><rect x="8.7469%" y="485" width="0.0350%" height="15" fill="rgb(235,160,14)" fg:x="1997" fg:w="8"/><text x="8.9969%" y="495.50"></text></g><g><title>LaunchServices`-[_LSDefaults isInXCTestRigInsecure] (3 samples, 0.01%)</title><rect x="8.7819%" y="485" width="0.0131%" height="15" fill="rgb(212,155,44)" fg:x="2005" fg:w="3"/><text x="9.0319%" y="495.50"></text></g><g><title>LaunchServices`-[_LSDisplayNameConstructor(Private) getTransformedBaseName:extension:needsBiDiControlCharacters:] (5 samples, 0.02%)</title><rect x="8.8257%" y="453" width="0.0219%" height="15" fill="rgb(226,2,50)" fg:x="2015" fg:w="5"/><text x="9.0757%" y="463.50"></text></g><g><title>LaunchServices`-[_LSDisplayNameConstructor(Private) combineBaseName:extension:] (12 samples, 0.05%)</title><rect x="8.8126%" y="469" width="0.0526%" height="15" fill="rgb(234,177,6)" fg:x="2012" fg:w="12"/><text x="9.0626%" y="479.50"></text></g><g><title>LaunchServices`-[_LSDisplayNameConstructor(Private) wantsHiddenExtension] (3 samples, 0.01%)</title><rect x="8.8739%" y="469" width="0.0131%" height="15" fill="rgb(217,24,9)" fg:x="2026" fg:w="3"/><text x="9.1239%" y="479.50"></text></g><g><title>LaunchServices`-[_LSDisplayNameConstructor unlocalizedNameWithContextIfNeeded:asIfShowingAllExtensions:] (34 samples, 0.15%)</title><rect x="8.7951%" y="485" width="0.1489%" height="15" fill="rgb(220,13,46)" fg:x="2008" fg:w="34"/><text x="9.0451%" y="495.50"></text></g><g><title>CoreFoundation`_CFRelease (3 samples, 0.01%)</title><rect x="9.0272%" y="437" width="0.0131%" height="15" fill="rgb(239,221,27)" fg:x="2061" fg:w="3"/><text x="9.2772%" y="447.50"></text></g><g><title>LaunchServices` (3 samples, 0.01%)</title><rect x="9.0535%" y="437" width="0.0131%" height="15" fill="rgb(222,198,25)" fg:x="2067" fg:w="3"/><text x="9.3035%" y="447.50"></text></g><g><title>CoreFoundation`__CFURLResourceInfoPtr (3 samples, 0.01%)</title><rect x="9.1148%" y="405" width="0.0131%" height="15" fill="rgb(211,99,13)" fg:x="2081" fg:w="3"/><text x="9.3648%" y="415.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (3 samples, 0.01%)</title><rect x="9.1148%" y="389" width="0.0131%" height="15" fill="rgb(232,111,31)" fg:x="2081" fg:w="3"/><text x="9.3648%" y="399.50"></text></g><g><title>CoreServicesInternal`_FileCacheGetFlags (4 samples, 0.02%)</title><rect x="9.1279%" y="405" width="0.0175%" height="15" fill="rgb(245,82,37)" fg:x="2084" fg:w="4"/><text x="9.3779%" y="415.50"></text></g><g><title>LaunchServices`-[FSNode isVolume] (15 samples, 0.07%)</title><rect x="9.0841%" y="437" width="0.0657%" height="15" fill="rgb(227,149,46)" fg:x="2074" fg:w="15"/><text x="9.3341%" y="447.50"></text></g><g><title>LaunchServices`_FSNodeGetSimpleBoolValue(FSNode*, NSString*, unsigned long long, unsigned long long) (12 samples, 0.05%)</title><rect x="9.0973%" y="421" width="0.0526%" height="15" fill="rgb(218,36,50)" fg:x="2077" fg:w="12"/><text x="9.3473%" y="431.50"></text></g><g><title>LaunchServices`-[FSNode nameWithError:] (4 samples, 0.02%)</title><rect x="9.1498%" y="437" width="0.0175%" height="15" fill="rgb(226,80,48)" fg:x="2089" fg:w="4"/><text x="9.3998%" y="447.50"></text></g><g><title>Foundation`-[NSString substringFromIndex:] (7 samples, 0.03%)</title><rect x="9.2374%" y="421" width="0.0307%" height="15" fill="rgb(238,224,15)" fg:x="2109" fg:w="7"/><text x="9.4874%" y="431.50"></text></g><g><title>Foundation`objc_msgSend$substringWithRange: (6 samples, 0.03%)</title><rect x="9.2725%" y="421" width="0.0263%" height="15" fill="rgb(241,136,10)" fg:x="2117" fg:w="6"/><text x="9.5225%" y="431.50"></text></g><g><title>LaunchServices`_LSDNCWithInlineBuffer(NSString*, void (CFStringInlineBuffer*, unsigned long) block_pointer) (17 samples, 0.07%)</title><rect x="9.3294%" y="405" width="0.0745%" height="15" fill="rgb(208,32,45)" fg:x="2130" fg:w="17"/><text x="9.5794%" y="415.50"></text></g><g><title>LaunchServices`__83-[_LSDisplayNameConstructor(Private) initContentBitsWithDisplayName:treatAsFSName:]_block_invoke (12 samples, 0.05%)</title><rect x="9.3513%" y="389" width="0.0526%" height="15" fill="rgb(207,135,9)" fg:x="2135" fg:w="12"/><text x="9.6013%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.02%)</title><rect x="9.4039%" y="405" width="0.0175%" height="15" fill="rgb(206,86,44)" fg:x="2147" fg:w="4"/><text x="9.6539%" y="415.50"></text></g><g><title>LaunchServices`-[_LSDisplayNameConstructor(Private) initContentBitsWithDisplayName:treatAsFSName:] (30 samples, 0.13%)</title><rect x="9.2988%" y="421" width="0.1314%" height="15" fill="rgb(245,177,15)" fg:x="2123" fg:w="30"/><text x="9.5488%" y="431.50"></text></g><g><title>CoreFoundation`CFStringCreateWithSubstring (4 samples, 0.02%)</title><rect x="9.4389%" y="389" width="0.0175%" height="15" fill="rgb(206,64,50)" fg:x="2155" fg:w="4"/><text x="9.6889%" y="399.50"></text></g><g><title>CoreFoundation`-[__NSCFString substringWithRange:] (20 samples, 0.09%)</title><rect x="9.4389%" y="405" width="0.0876%" height="15" fill="rgb(234,36,40)" fg:x="2155" fg:w="20"/><text x="9.6889%" y="415.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (14 samples, 0.06%)</title><rect x="9.4652%" y="389" width="0.0613%" height="15" fill="rgb(213,64,8)" fg:x="2161" fg:w="14"/><text x="9.7152%" y="399.50"></text></g><g><title>CoreFoundation`_CFNonObjCStringCreateCopy (4 samples, 0.02%)</title><rect x="9.5353%" y="405" width="0.0175%" height="15" fill="rgb(210,75,36)" fg:x="2177" fg:w="4"/><text x="9.7853%" y="415.50"></text></g><g><title>CoreFoundation`_CFGetTSDCreateIfNeeded (4 samples, 0.02%)</title><rect x="9.5353%" y="389" width="0.0175%" height="15" fill="rgb(229,88,21)" fg:x="2177" fg:w="4"/><text x="9.7853%" y="399.50"></text></g><g><title>CoreFoundation`_CFRelease (3 samples, 0.01%)</title><rect x="9.5528%" y="405" width="0.0131%" height="15" fill="rgb(252,204,47)" fg:x="2181" fg:w="3"/><text x="9.8028%" y="415.50"></text></g><g><title>CoreFoundation`_CFGetPathExtensionRangesFromPathComponent (11 samples, 0.05%)</title><rect x="9.5922%" y="389" width="0.0482%" height="15" fill="rgb(208,77,27)" fg:x="2190" fg:w="11"/><text x="9.8422%" y="399.50"></text></g><g><title>CoreFoundation`_CFStringGetCStringPtrInternal (3 samples, 0.01%)</title><rect x="9.6273%" y="373" width="0.0131%" height="15" fill="rgb(221,76,26)" fg:x="2198" fg:w="3"/><text x="9.8773%" y="383.50"></text></g><g><title>LaunchServices`-[_LSDisplayNameConstructor(Private) initNamePartsWithDisplayName:] (52 samples, 0.23%)</title><rect x="9.4302%" y="421" width="0.2278%" height="15" fill="rgb(225,139,18)" fg:x="2153" fg:w="52"/><text x="9.6802%" y="431.50"></text></g><g><title>LaunchServices`+[_LSDisplayNameConstructor(Private) getExtensionRange:secondaryExtensionRange:fromFileName:considerConfusables:] (16 samples, 0.07%)</title><rect x="9.5878%" y="405" width="0.0701%" height="15" fill="rgb(230,137,11)" fg:x="2189" fg:w="16"/><text x="9.8378%" y="415.50"></text></g><g><title>CoreFoundation`-[__NSCFBoolean boolValue] (3 samples, 0.01%)</title><rect x="9.6667%" y="405" width="0.0131%" height="15" fill="rgb(212,28,1)" fg:x="2207" fg:w="3"/><text x="9.9167%" y="415.50"></text></g><g><title>CoreFoundation`-[__NSCFBoolean release] (4 samples, 0.02%)</title><rect x="9.6930%" y="389" width="0.0175%" height="15" fill="rgb(248,164,17)" fg:x="2213" fg:w="4"/><text x="9.9430%" y="399.50"></text></g><g><title>CoreFoundation`_CFRelease (10 samples, 0.04%)</title><rect x="9.7192%" y="389" width="0.0438%" height="15" fill="rgb(222,171,42)" fg:x="2219" fg:w="10"/><text x="9.9692%" y="399.50"></text></g><g><title>CoreServicesInternal`_FileCacheGetFlags (6 samples, 0.03%)</title><rect x="9.7762%" y="389" width="0.0263%" height="15" fill="rgb(243,84,45)" fg:x="2232" fg:w="6"/><text x="10.0262%" y="399.50"></text></g><g><title>CoreServicesInternal`_FileCacheLock(__FileCache const*) (5 samples, 0.02%)</title><rect x="9.7806%" y="373" width="0.0219%" height="15" fill="rgb(252,49,23)" fg:x="2233" fg:w="5"/><text x="10.0306%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_self (5 samples, 0.02%)</title><rect x="9.7806%" y="357" width="0.0219%" height="15" fill="rgb(215,19,7)" fg:x="2233" fg:w="5"/><text x="10.0306%" y="367.50"></text></g><g><title>CoreFoundation`-[__NSCFBoolean retain] (3 samples, 0.01%)</title><rect x="9.8244%" y="373" width="0.0131%" height="15" fill="rgb(238,81,41)" fg:x="2243" fg:w="3"/><text x="10.0744%" y="383.50"></text></g><g><title>CoreFoundation`-[__NSCFString isEqual:] (4 samples, 0.02%)</title><rect x="9.8375%" y="373" width="0.0175%" height="15" fill="rgb(210,199,37)" fg:x="2246" fg:w="4"/><text x="10.0875%" y="383.50"></text></g><g><title>CoreFoundation`__CFStringEqual (3 samples, 0.01%)</title><rect x="9.8419%" y="357" width="0.0131%" height="15" fill="rgb(244,192,49)" fg:x="2247" fg:w="3"/><text x="10.0919%" y="367.50"></text></g><g><title>CoreServicesInternal`corePropertyProviderCopyValues(__CFURL const*, __FileCache const*, __CFString const* const*, void const**, void const**, long, void const*) (11 samples, 0.05%)</title><rect x="9.8944%" y="341" width="0.0482%" height="15" fill="rgb(226,211,11)" fg:x="2259" fg:w="11"/><text x="10.1444%" y="351.50"></text></g><g><title>CoreServicesInternal`createHasHiddenExtensionValue(__CFURL const*, _FileAttributes const*, void*) (6 samples, 0.03%)</title><rect x="9.9163%" y="325" width="0.0263%" height="15" fill="rgb(236,162,54)" fg:x="2264" fg:w="6"/><text x="10.1663%" y="335.50"></text></g><g><title>CoreServicesInternal`_FSURLCopyResourcePropertyForKeyInternal(__CFURL const*, __CFString const*, void*, void*, __CFError**, unsigned char) (22 samples, 0.10%)</title><rect x="9.8725%" y="357" width="0.0964%" height="15" fill="rgb(220,229,9)" fg:x="2254" fg:w="22"/><text x="10.1225%" y="367.50"></text></g><g><title>CoreServicesInternal`getPropertyForKey(__CFString const*) (4 samples, 0.02%)</title><rect x="9.9514%" y="341" width="0.0175%" height="15" fill="rgb(250,87,22)" fg:x="2272" fg:w="4"/><text x="10.2014%" y="351.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValue (3 samples, 0.01%)</title><rect x="9.9558%" y="325" width="0.0131%" height="15" fill="rgb(239,43,17)" fg:x="2273" fg:w="3"/><text x="10.2058%" y="335.50"></text></g><g><title>CoreFoundation`___CFBasicHashFindBucket_Linear (3 samples, 0.01%)</title><rect x="9.9558%" y="309" width="0.0131%" height="15" fill="rgb(231,177,25)" fg:x="2273" fg:w="3"/><text x="10.2058%" y="319.50"></text></g><g><title>CoreFoundation`CFURLCopyResourcePropertyForKey (27 samples, 0.12%)</title><rect x="9.8550%" y="373" width="0.1183%" height="15" fill="rgb(219,179,1)" fg:x="2250" fg:w="27"/><text x="10.1050%" y="383.50"></text></g><g><title>LaunchServices`-[FSNode getResourceValue:forKey:options:error:] (42 samples, 0.18%)</title><rect x="9.8112%" y="389" width="0.1840%" height="15" fill="rgb(238,219,53)" fg:x="2240" fg:w="42"/><text x="10.0612%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (8 samples, 0.04%)</title><rect x="10.0039%" y="389" width="0.0350%" height="15" fill="rgb(232,167,36)" fg:x="2284" fg:w="8"/><text x="10.2539%" y="399.50"></text></g><g><title>LaunchServices`_FSNodeGetSimpleBoolValue(FSNode*, NSString*, unsigned long long, unsigned long long) (86 samples, 0.38%)</title><rect x="9.6842%" y="405" width="0.3767%" height="15" fill="rgb(244,19,51)" fg:x="2211" fg:w="86"/><text x="9.9342%" y="415.50"></text></g><g><title>LaunchServices`-[_LSDisplayNameConstructor(Private) initNodeBitsWithContextIfNeeded:node:isDirectory:bundleClass:] (93 samples, 0.41%)</title><rect x="9.6579%" y="421" width="0.4073%" height="15" fill="rgb(224,6,22)" fg:x="2205" fg:w="93"/><text x="9.9079%" y="431.50"></text></g><g><title>LaunchServices`DYLD-STUB$$objc_release (3 samples, 0.01%)</title><rect x="10.0653%" y="421" width="0.0131%" height="15" fill="rgb(224,145,5)" fg:x="2298" fg:w="3"/><text x="10.3153%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (7 samples, 0.03%)</title><rect x="10.0959%" y="421" width="0.0307%" height="15" fill="rgb(234,130,49)" fg:x="2305" fg:w="7"/><text x="10.3459%" y="431.50"></text></g><g><title>LaunchServices`-[_LSDisplayNameConstructor(Private) initWithContextIfNeeded:node:isDirectory:bundleClass:desiredDisplayName:treatAsFSName:] (218 samples, 0.95%)</title><rect x="9.1849%" y="437" width="0.9548%" height="15" fill="rgb(254,6,2)" fg:x="2097" fg:w="218"/><text x="9.4349%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_retain (3 samples, 0.01%)</title><rect x="10.1266%" y="421" width="0.0131%" height="15" fill="rgb(208,96,46)" fg:x="2312" fg:w="3"/><text x="10.3766%" y="431.50"></text></g><g><title>LaunchServices`DYLD-STUB$$objc_release (3 samples, 0.01%)</title><rect x="10.1397%" y="437" width="0.0131%" height="15" fill="rgb(239,3,39)" fg:x="2315" fg:w="3"/><text x="10.3897%" y="447.50"></text></g><g><title>LaunchServices`_FSNodeGetSimpleBoolValue(FSNode*, NSString*, unsigned long long, unsigned long long) (4 samples, 0.02%)</title><rect x="10.1660%" y="437" width="0.0175%" height="15" fill="rgb(233,210,1)" fg:x="2321" fg:w="4"/><text x="10.4160%" y="447.50"></text></g><g><title>CoreFoundation`-[NSTaggedPointerString compare:options:range:locale:] (3 samples, 0.01%)</title><rect x="10.1835%" y="421" width="0.0131%" height="15" fill="rgb(244,137,37)" fg:x="2325" fg:w="3"/><text x="10.4335%" y="431.50"></text></g><g><title>Foundation`-[NSString caseInsensitiveCompare:] (6 samples, 0.03%)</title><rect x="10.2098%" y="421" width="0.0263%" height="15" fill="rgb(240,136,2)" fg:x="2331" fg:w="6"/><text x="10.4598%" y="431.50"></text></g><g><title>LaunchServices`DYLD-STUB$$objc_retain (3 samples, 0.01%)</title><rect x="10.2536%" y="421" width="0.0131%" height="15" fill="rgb(239,18,37)" fg:x="2341" fg:w="3"/><text x="10.5036%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__gettid (59 samples, 0.26%)</title><rect x="10.3281%" y="325" width="0.2584%" height="15" fill="rgb(218,185,22)" fg:x="2358" fg:w="59"/><text x="10.5781%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`getegid (47 samples, 0.21%)</title><rect x="10.5865%" y="325" width="0.2059%" height="15" fill="rgb(225,218,4)" fg:x="2417" fg:w="47"/><text x="10.8365%" y="335.50"></text></g><g><title>LaunchServices`-[_LSDefaults proxyUIDForCurrentEffectiveUID] (161 samples, 0.71%)</title><rect x="10.3281%" y="373" width="0.7052%" height="15" fill="rgb(230,182,32)" fg:x="2358" fg:w="161"/><text x="10.5781%" y="383.50"></text></g><g><title>CoreFoundation`_CFGetEUID (161 samples, 0.71%)</title><rect x="10.3281%" y="357" width="0.7052%" height="15" fill="rgb(242,56,43)" fg:x="2358" fg:w="161"/><text x="10.5781%" y="367.50"></text></g><g><title>CoreFoundation`__CFGetUGIDs (161 samples, 0.71%)</title><rect x="10.3281%" y="341" width="0.7052%" height="15" fill="rgb(233,99,24)" fg:x="2358" fg:w="161"/><text x="10.5781%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`geteuid (55 samples, 0.24%)</title><rect x="10.7923%" y="325" width="0.2409%" height="15" fill="rgb(234,209,42)" fg:x="2464" fg:w="55"/><text x="11.0423%" y="335.50"></text></g><g><title>LaunchServices`-[_LSDServiceDomain resolvedSessionKey] (163 samples, 0.71%)</title><rect x="10.3237%" y="389" width="0.7139%" height="15" fill="rgb(227,7,12)" fg:x="2357" fg:w="163"/><text x="10.5737%" y="399.50"></text></g><g><title>LaunchServices`_LSGetSession(LSSessionKey) (6 samples, 0.03%)</title><rect x="11.0420%" y="373" width="0.0263%" height="15" fill="rgb(245,203,43)" fg:x="2521" fg:w="6"/><text x="11.2920%" y="383.50"></text></g><g><title>LaunchServices`std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;LSSessionKey, LSSession*&gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;LSSessionKey, LSSession*&gt;, std::__1::__unordered_map_hasher&lt;LSSessionKey, std::__1::__hash_value_type&lt;LSSessionKey, LSSession*&gt;, LSSessionKeyHasher, LSSessionKeyComparator, true&gt;, std::__1::__unordered_map_equal&lt;LSSessionKey, std::__1::__hash_value_type&lt;LSSessionKey, LSSession*&gt;, LSSessionKeyComparator, LSSessionKeyHasher, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;LSSessionKey, LSSession*&gt;&gt;&gt;::__emplace_unique_key_args&lt;LSSessionKey, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;LSSessionKey const&amp;&gt;, std::__1::tuple&lt;&gt;&gt;(LSSessionKey const&amp;, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;LSSessionKey const&amp;&gt;&amp;&amp;, std::__1::tuple (5 samples, 0.02%)</title><rect x="11.0464%" y="357" width="0.0219%" height="15" fill="rgb(238,205,33)" fg:x="2522" fg:w="5"/><text x="11.2964%" y="367.50"></text></g><g><title>LaunchServices`_LSCopyLocalDatabase (13 samples, 0.06%)</title><rect x="11.0376%" y="389" width="0.0569%" height="15" fill="rgb(231,56,7)" fg:x="2520" fg:w="13"/><text x="11.2876%" y="399.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_recursive_lock_unlock (5 samples, 0.02%)</title><rect x="11.0727%" y="373" width="0.0219%" height="15" fill="rgb(244,186,29)" fg:x="2528" fg:w="5"/><text x="11.3227%" y="383.50"></text></g><g><title>libsystem_notify.dylib`0x000000018c42ef1c (3 samples, 0.01%)</title><rect x="11.1603%" y="325" width="0.0131%" height="15" fill="rgb(234,111,31)" fg:x="2548" fg:w="3"/><text x="11.4103%" y="335.50"></text></g><g><title>libsystem_notify.dylib`notify_check (16 samples, 0.07%)</title><rect x="11.1296%" y="341" width="0.0701%" height="15" fill="rgb(241,149,10)" fg:x="2541" fg:w="16"/><text x="11.3796%" y="351.50"></text></g><g><title>libsystem_notify.dylib`0x000000018c430e20 (4 samples, 0.02%)</title><rect x="11.1822%" y="325" width="0.0175%" height="15" fill="rgb(249,206,44)" fg:x="2553" fg:w="4"/><text x="11.4322%" y="335.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (3 samples, 0.01%)</title><rect x="11.1997%" y="341" width="0.0131%" height="15" fill="rgb(251,153,30)" fg:x="2557" fg:w="3"/><text x="11.4497%" y="351.50"></text></g><g><title>LaunchServices`LaunchServices::notifyd::NotifyToken::checkValue (21 samples, 0.09%)</title><rect x="11.1252%" y="357" width="0.0920%" height="15" fill="rgb(239,152,38)" fg:x="2540" fg:w="21"/><text x="11.3752%" y="367.50"></text></g><g><title>libsystem_collections.dylib`os_set_32_ptr_find (7 samples, 0.03%)</title><rect x="11.2303%" y="357" width="0.0307%" height="15" fill="rgb(249,139,47)" fg:x="2564" fg:w="7"/><text x="11.4803%" y="367.50"></text></g><g><title>libsystem_notify.dylib`notify_check (6 samples, 0.03%)</title><rect x="11.2654%" y="357" width="0.0263%" height="15" fill="rgb(244,64,35)" fg:x="2572" fg:w="6"/><text x="11.5154%" y="367.50"></text></g><g><title>libsystem_notify.dylib`notify_is_valid_token (7 samples, 0.03%)</title><rect x="11.2917%" y="357" width="0.0307%" height="15" fill="rgb(216,46,15)" fg:x="2578" fg:w="7"/><text x="11.5417%" y="367.50"></text></g><g><title>libsystem_collections.dylib`os_set_32_ptr_find (3 samples, 0.01%)</title><rect x="11.3092%" y="341" width="0.0131%" height="15" fill="rgb(250,74,19)" fg:x="2582" fg:w="3"/><text x="11.5592%" y="351.50"></text></g><g><title>LaunchServices`_LSDatabaseNotificationCheck(LSSessionKey) (49 samples, 0.21%)</title><rect x="11.1165%" y="373" width="0.2146%" height="15" fill="rgb(249,42,33)" fg:x="2538" fg:w="49"/><text x="11.3665%" y="383.50"></text></g><g><title>LaunchServices`_LSDatabaseNeedsUpdate(_LSDatabase*) (55 samples, 0.24%)</title><rect x="11.1033%" y="389" width="0.2409%" height="15" fill="rgb(242,149,17)" fg:x="2535" fg:w="55"/><text x="11.3533%" y="399.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_recursive_lock_lock_with_options (3 samples, 0.01%)</title><rect x="11.3311%" y="373" width="0.0131%" height="15" fill="rgb(244,29,21)" fg:x="2587" fg:w="3"/><text x="11.5811%" y="383.50"></text></g><g><title>LaunchServices`_LSDatabaseNotificationCheck(LSSessionKey) (3 samples, 0.01%)</title><rect x="11.3442%" y="389" width="0.0131%" height="15" fill="rgb(220,130,37)" fg:x="2590" fg:w="3"/><text x="11.5942%" y="399.50"></text></g><g><title>LaunchServices`_LSContextInitCommon(LSContext*, _LSDServiceDomain*, unsigned long, NSError* __autoreleasing*) (251 samples, 1.10%)</title><rect x="10.2974%" y="405" width="1.0994%" height="15" fill="rgb(211,67,2)" fg:x="2351" fg:w="251"/><text x="10.5474%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (5 samples, 0.02%)</title><rect x="11.4143%" y="405" width="0.0219%" height="15" fill="rgb(235,68,52)" fg:x="2606" fg:w="5"/><text x="11.6643%" y="415.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (3 samples, 0.01%)</title><rect x="11.4231%" y="389" width="0.0131%" height="15" fill="rgb(246,142,3)" fg:x="2608" fg:w="3"/><text x="11.6731%" y="399.50"></text></g><g><title>LaunchServices`LaunchServices::Database::Context::_get (271 samples, 1.19%)</title><rect x="10.2667%" y="421" width="1.1870%" height="15" fill="rgb(241,25,7)" fg:x="2344" fg:w="271"/><text x="10.5167%" y="431.50"></text></g><g><title>CoreFoundation`-[NSTaggedPointerString compare:options:range:locale:] (7 samples, 0.03%)</title><rect x="11.4800%" y="405" width="0.0307%" height="15" fill="rgb(242,119,39)" fg:x="2621" fg:w="7"/><text x="11.7300%" y="415.50"></text></g><g><title>CoreFoundation`-[__NSCFString substringWithRange:] (3 samples, 0.01%)</title><rect x="11.5150%" y="405" width="0.0131%" height="15" fill="rgb(241,98,45)" fg:x="2629" fg:w="3"/><text x="11.7650%" y="415.50"></text></g><g><title>CoreFoundation`_CFStringCompareASCIICaseInsensitive (8 samples, 0.04%)</title><rect x="11.5457%" y="405" width="0.0350%" height="15" fill="rgb(254,28,30)" fg:x="2636" fg:w="8"/><text x="11.7957%" y="415.50"></text></g><g><title>CoreServicesStore`CSStringBindingFindStringAndBindings (7 samples, 0.03%)</title><rect x="11.6114%" y="405" width="0.0307%" height="15" fill="rgb(241,142,54)" fg:x="2651" fg:w="7"/><text x="11.8614%" y="415.50"></text></g><g><title>CoreFoundation`-[NSTaggedPointerString lowercaseStringWithLocale:] (4 samples, 0.02%)</title><rect x="11.6552%" y="389" width="0.0175%" height="15" fill="rgb(222,85,15)" fg:x="2661" fg:w="4"/><text x="11.9052%" y="399.50"></text></g><g><title>CoreFoundation`CFStringCreateWithSubstring (6 samples, 0.03%)</title><rect x="11.6727%" y="373" width="0.0263%" height="15" fill="rgb(210,85,47)" fg:x="2665" fg:w="6"/><text x="11.9227%" y="383.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (3 samples, 0.01%)</title><rect x="11.6859%" y="357" width="0.0131%" height="15" fill="rgb(224,206,25)" fg:x="2668" fg:w="3"/><text x="11.9359%" y="367.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (10 samples, 0.04%)</title><rect x="11.6990%" y="373" width="0.0438%" height="15" fill="rgb(243,201,19)" fg:x="2671" fg:w="10"/><text x="11.9490%" y="383.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mkostemp (4 samples, 0.02%)</title><rect x="11.7428%" y="373" width="0.0175%" height="15" fill="rgb(236,59,4)" fg:x="2681" fg:w="4"/><text x="11.9928%" y="383.50"></text></g><g><title>CoreFoundation`-[__NSCFString substringWithRange:] (23 samples, 0.10%)</title><rect x="11.6727%" y="389" width="0.1007%" height="15" fill="rgb(254,179,45)" fg:x="2665" fg:w="23"/><text x="11.9227%" y="399.50"></text></g><g><title>libsystem_c.dylib`__memmove_chk (3 samples, 0.01%)</title><rect x="11.7603%" y="373" width="0.0131%" height="15" fill="rgb(226,14,10)" fg:x="2685" fg:w="3"/><text x="12.0103%" y="383.50"></text></g><g><title>CoreFoundation`_CFGetPathExtensionRangesFromPathComponent (9 samples, 0.04%)</title><rect x="11.7778%" y="389" width="0.0394%" height="15" fill="rgb(244,27,41)" fg:x="2689" fg:w="9"/><text x="12.0278%" y="399.50"></text></g><g><title>CoreFoundation`_CFStringGetCStringPtrInternal (3 samples, 0.01%)</title><rect x="11.8041%" y="373" width="0.0131%" height="15" fill="rgb(235,35,32)" fg:x="2695" fg:w="3"/><text x="12.0541%" y="383.50"></text></g><g><title>CoreFoundation`_CFRelease (4 samples, 0.02%)</title><rect x="11.8173%" y="389" width="0.0175%" height="15" fill="rgb(218,68,31)" fg:x="2698" fg:w="4"/><text x="12.0673%" y="399.50"></text></g><g><title>CoreFoundation`_CFStringGetLength2 (3 samples, 0.01%)</title><rect x="11.8348%" y="389" width="0.0131%" height="15" fill="rgb(207,120,37)" fg:x="2702" fg:w="3"/><text x="12.0848%" y="399.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValueIfPresent (18 samples, 0.08%)</title><rect x="11.8567%" y="373" width="0.0788%" height="15" fill="rgb(227,98,0)" fg:x="2707" fg:w="18"/><text x="12.1067%" y="383.50"></text></g><g><title>CoreFoundation`___CFBasicHashFindBucket_Linear (12 samples, 0.05%)</title><rect x="11.8830%" y="357" width="0.0526%" height="15" fill="rgb(207,7,3)" fg:x="2713" fg:w="12"/><text x="12.1330%" y="367.50"></text></g><g><title>CoreServicesInternal`_FileCacheGetPropertyValueForKey (19 samples, 0.08%)</title><rect x="11.8567%" y="389" width="0.0832%" height="15" fill="rgb(206,98,19)" fg:x="2707" fg:w="19"/><text x="12.1067%" y="399.50"></text></g><g><title>CoreFoundation`CFBasicHashSetValue (6 samples, 0.03%)</title><rect x="11.9530%" y="357" width="0.0263%" height="15" fill="rgb(217,5,26)" fg:x="2729" fg:w="6"/><text x="12.2030%" y="367.50"></text></g><g><title>CoreFoundation`___CFBasicHashFindBucket_Linear (4 samples, 0.02%)</title><rect x="11.9618%" y="341" width="0.0175%" height="15" fill="rgb(235,190,38)" fg:x="2731" fg:w="4"/><text x="12.2118%" y="351.50"></text></g><g><title>CoreFoundation`CFEqual (3 samples, 0.01%)</title><rect x="11.9662%" y="325" width="0.0131%" height="15" fill="rgb(247,86,24)" fg:x="2732" fg:w="3"/><text x="12.2162%" y="335.50"></text></g><g><title>CoreFoundation`CFDictionarySetValue (13 samples, 0.06%)</title><rect x="11.9443%" y="373" width="0.0569%" height="15" fill="rgb(205,101,16)" fg:x="2727" fg:w="13"/><text x="12.1943%" y="383.50"></text></g><g><title>CoreFoundation`__CFBasicHashAddValue (3 samples, 0.01%)</title><rect x="11.9881%" y="357" width="0.0131%" height="15" fill="rgb(246,168,33)" fg:x="2737" fg:w="3"/><text x="12.2381%" y="367.50"></text></g><g><title>CoreServicesInternal`_FileCacheSetPropertyValueForKey (19 samples, 0.08%)</title><rect x="11.9399%" y="389" width="0.0832%" height="15" fill="rgb(231,114,1)" fg:x="2726" fg:w="19"/><text x="12.1899%" y="399.50"></text></g><g><title>LaunchServices`-[FSNode nameWithError:] (4 samples, 0.02%)</title><rect x="12.0231%" y="389" width="0.0175%" height="15" fill="rgb(207,184,53)" fg:x="2745" fg:w="4"/><text x="12.2731%" y="399.50"></text></g><g><title>LaunchServices`-[FSNode extensionWithError:] (97 samples, 0.42%)</title><rect x="11.6464%" y="405" width="0.4249%" height="15" fill="rgb(224,95,51)" fg:x="2659" fg:w="97"/><text x="11.8964%" y="415.50"></text></g><g><title>LaunchServices`XCFBufInitWithCFStringInlineBuffer (4 samples, 0.02%)</title><rect x="12.1063%" y="405" width="0.0175%" height="15" fill="rgb(212,188,45)" fg:x="2764" fg:w="4"/><text x="12.3563%" y="415.50"></text></g><g><title>LaunchServices`XCFBufInitWithCFStringRange (6 samples, 0.03%)</title><rect x="12.1239%" y="405" width="0.0263%" height="15" fill="rgb(223,154,38)" fg:x="2768" fg:w="6"/><text x="12.3739%" y="415.50"></text></g><g><title>CoreFoundation`__CFURLResourceInfoPtr (3 samples, 0.01%)</title><rect x="12.1633%" y="389" width="0.0131%" height="15" fill="rgb(251,22,52)" fg:x="2777" fg:w="3"/><text x="12.4133%" y="399.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (3 samples, 0.01%)</title><rect x="12.1633%" y="373" width="0.0131%" height="15" fill="rgb(229,209,22)" fg:x="2777" fg:w="3"/><text x="12.4133%" y="383.50"></text></g><g><title>CoreServicesInternal`_FileCacheLock(__FileCache const*) (6 samples, 0.03%)</title><rect x="12.1983%" y="373" width="0.0263%" height="15" fill="rgb(234,138,34)" fg:x="2785" fg:w="6"/><text x="12.4483%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_self (4 samples, 0.02%)</title><rect x="12.2071%" y="357" width="0.0175%" height="15" fill="rgb(212,95,11)" fg:x="2787" fg:w="4"/><text x="12.4571%" y="367.50"></text></g><g><title>CoreServicesInternal`_FileCacheGetFlags (13 samples, 0.06%)</title><rect x="12.1764%" y="389" width="0.0569%" height="15" fill="rgb(240,179,47)" fg:x="2780" fg:w="13"/><text x="12.4264%" y="399.50"></text></g><g><title>LaunchServices`_FSNodeGetSimpleBoolValue(FSNode*, NSString*, unsigned long long, unsigned long long) (20 samples, 0.09%)</title><rect x="12.1501%" y="405" width="0.0876%" height="15" fill="rgb(240,163,11)" fg:x="2774" fg:w="20"/><text x="12.4001%" y="415.50"></text></g><g><title>CoreFoundation`-[NSTaggedPointerString getCharacters:range:] (4 samples, 0.02%)</title><rect x="12.2815%" y="373" width="0.0175%" height="15" fill="rgb(236,37,12)" fg:x="2804" fg:w="4"/><text x="12.5315%" y="383.50"></text></g><g><title>CoreFoundation`CFStringGetCharactersPtr (3 samples, 0.01%)</title><rect x="12.2991%" y="373" width="0.0131%" height="15" fill="rgb(232,164,16)" fg:x="2808" fg:w="3"/><text x="12.5491%" y="383.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (3 samples, 0.01%)</title><rect x="12.2991%" y="357" width="0.0131%" height="15" fill="rgb(244,205,15)" fg:x="2808" fg:w="3"/><text x="12.5491%" y="367.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (3 samples, 0.01%)</title><rect x="12.3210%" y="373" width="0.0131%" height="15" fill="rgb(223,117,47)" fg:x="2813" fg:w="3"/><text x="12.5710%" y="383.50"></text></g><g><title>CoreFoundation`_CFStringGetCStringPtrInternal (4 samples, 0.02%)</title><rect x="12.3341%" y="373" width="0.0175%" height="15" fill="rgb(244,107,35)" fg:x="2816" fg:w="4"/><text x="12.5841%" y="383.50"></text></g><g><title>CoreFoundation`CFStringCompareWithOptionsAndLocale (27 samples, 0.12%)</title><rect x="12.2377%" y="389" width="0.1183%" height="15" fill="rgb(205,140,8)" fg:x="2794" fg:w="27"/><text x="12.4877%" y="399.50"></text></g><g><title>CoreFoundation`CFStringGetCharacters (3 samples, 0.01%)</title><rect x="12.3560%" y="389" width="0.0131%" height="15" fill="rgb(228,84,46)" fg:x="2821" fg:w="3"/><text x="12.6060%" y="399.50"></text></g><g><title>CoreFoundation`CFUniCharGetBitmapPtrForPlane (4 samples, 0.02%)</title><rect x="12.3779%" y="389" width="0.0175%" height="15" fill="rgb(254,188,9)" fg:x="2826" fg:w="4"/><text x="12.6279%" y="399.50"></text></g><g><title>CoreFoundation`objc_msgSend$getCharacters:range: (4 samples, 0.02%)</title><rect x="12.4305%" y="389" width="0.0175%" height="15" fill="rgb(206,112,54)" fg:x="2838" fg:w="4"/><text x="12.6805%" y="399.50"></text></g><g><title>LaunchServices`_LSGetBundleClassForExtensionInlineBuffer (53 samples, 0.23%)</title><rect x="12.2377%" y="405" width="0.2321%" height="15" fill="rgb(216,84,49)" fg:x="2794" fg:w="53"/><text x="12.4877%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.02%)</title><rect x="12.4480%" y="389" width="0.0219%" height="15" fill="rgb(214,194,35)" fg:x="2842" fg:w="5"/><text x="12.6980%" y="399.50"></text></g><g><title>CoreFoundation`CFStringGetTypeID (5 samples, 0.02%)</title><rect x="12.4830%" y="389" width="0.0219%" height="15" fill="rgb(249,28,3)" fg:x="2850" fg:w="5"/><text x="12.7330%" y="399.50"></text></g><g><title>CoreServicesStore`CSStore2::String::Find (5 samples, 0.02%)</title><rect x="12.5181%" y="357" width="0.0219%" height="15" fill="rgb(222,56,52)" fg:x="2858" fg:w="5"/><text x="12.7681%" y="367.50"></text></g><g><title>CoreServicesStore`DYLD-STUB$$memchr (5 samples, 0.02%)</title><rect x="12.5400%" y="357" width="0.0219%" height="15" fill="rgb(245,217,50)" fg:x="2863" fg:w="5"/><text x="12.7900%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memchr (3 samples, 0.01%)</title><rect x="12.5619%" y="357" width="0.0131%" height="15" fill="rgb(213,201,24)" fg:x="2868" fg:w="3"/><text x="12.8119%" y="367.50"></text></g><g><title>CoreServicesStore`_CSGetStringForCharacters (15 samples, 0.07%)</title><rect x="12.5137%" y="373" width="0.0657%" height="15" fill="rgb(248,116,28)" fg:x="2857" fg:w="15"/><text x="12.7637%" y="383.50"></text></g><g><title>CoreServicesStore`CSStoreGetGeneration (4 samples, 0.02%)</title><rect x="12.5794%" y="341" width="0.0175%" height="15" fill="rgb(219,72,43)" fg:x="2872" fg:w="4"/><text x="12.8294%" y="351.50"></text></g><g><title>CoreServicesStore`CSStringBindingFindStringAndBindings (24 samples, 0.11%)</title><rect x="12.5049%" y="389" width="0.1051%" height="15" fill="rgb(209,138,14)" fg:x="2855" fg:w="24"/><text x="12.7549%" y="399.50"></text></g><g><title>CoreServicesStore`_CSStringBindingGetBindings (7 samples, 0.03%)</title><rect x="12.5794%" y="373" width="0.0307%" height="15" fill="rgb(222,18,33)" fg:x="2872" fg:w="7"/><text x="12.8294%" y="383.50"></text></g><g><title>CoreServicesStore`CSMapGetValue (7 samples, 0.03%)</title><rect x="12.5794%" y="357" width="0.0307%" height="15" fill="rgb(213,199,7)" fg:x="2872" fg:w="7"/><text x="12.8294%" y="367.50"></text></g><g><title>CoreFoundation`CFStringGetBytes (10 samples, 0.04%)</title><rect x="12.6363%" y="373" width="0.0438%" height="15" fill="rgb(250,110,10)" fg:x="2885" fg:w="10"/><text x="12.8863%" y="383.50"></text></g><g><title>LaunchServices`_LSIsKnownExtensionInlineBuffer (54 samples, 0.24%)</title><rect x="12.4699%" y="405" width="0.2365%" height="15" fill="rgb(248,123,6)" fg:x="2847" fg:w="54"/><text x="12.7199%" y="415.50"></text></g><g><title>LaunchServices`XCFBufInitWithCFStringRange (19 samples, 0.08%)</title><rect x="12.6232%" y="389" width="0.0832%" height="15" fill="rgb(206,91,31)" fg:x="2882" fg:w="19"/><text x="12.8732%" y="399.50"></text></g><g><title>CoreFoundation`_NSTaggedPointerStringGetBytes (6 samples, 0.03%)</title><rect x="12.6801%" y="373" width="0.0263%" height="15" fill="rgb(211,154,13)" fg:x="2895" fg:w="6"/><text x="12.9301%" y="383.50"></text></g><g><title>LaunchServices`_LSGetBundleClassForNode (299 samples, 1.31%)</title><rect x="11.4537%" y="421" width="1.3096%" height="15" fill="rgb(225,148,7)" fg:x="2615" fg:w="299"/><text x="11.7037%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (8 samples, 0.04%)</title><rect x="12.7283%" y="405" width="0.0350%" height="15" fill="rgb(220,160,43)" fg:x="2906" fg:w="8"/><text x="12.9783%" y="415.50"></text></g><g><title>LaunchServices`_LSIsKnownExtensionInlineBuffer (6 samples, 0.03%)</title><rect x="12.7633%" y="421" width="0.0263%" height="15" fill="rgb(213,52,39)" fg:x="2914" fg:w="6"/><text x="13.0133%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (9 samples, 0.04%)</title><rect x="12.7940%" y="421" width="0.0394%" height="15" fill="rgb(243,137,7)" fg:x="2921" fg:w="9"/><text x="13.0440%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_release (3 samples, 0.01%)</title><rect x="12.8334%" y="421" width="0.0131%" height="15" fill="rgb(230,79,13)" fg:x="2930" fg:w="3"/><text x="13.0834%" y="431.50"></text></g><g><title>LaunchServices`_LSDNCGetBundleClass(LaunchServices::Database::Context&amp;, id (611 samples, 2.68%)</title><rect x="10.1835%" y="437" width="2.6762%" height="15" fill="rgb(247,105,23)" fg:x="2325" fg:w="611"/><text x="10.4335%" y="447.50">La..</text></g><g><title>CoreFoundation`__CFURLResourceInfoPtr (3 samples, 0.01%)</title><rect x="12.8685%" y="405" width="0.0131%" height="15" fill="rgb(223,179,41)" fg:x="2938" fg:w="3"/><text x="13.1185%" y="415.50"></text></g><g><title>CoreServicesInternal`_FileCacheGetFlags (5 samples, 0.02%)</title><rect x="12.8816%" y="405" width="0.0219%" height="15" fill="rgb(218,9,34)" fg:x="2941" fg:w="5"/><text x="13.1316%" y="415.50"></text></g><g><title>LaunchServices`_LSGetBRDisplayNameForContainerNode (11 samples, 0.05%)</title><rect x="12.8597%" y="437" width="0.0482%" height="15" fill="rgb(222,106,8)" fg:x="2936" fg:w="11"/><text x="13.1097%" y="447.50"></text></g><g><title>LaunchServices`_FSNodeGetSimpleBoolValue(FSNode*, NSString*, unsigned long long, unsigned long long) (10 samples, 0.04%)</title><rect x="12.8641%" y="421" width="0.0438%" height="15" fill="rgb(211,220,0)" fg:x="2937" fg:w="10"/><text x="13.1141%" y="431.50"></text></g><g><title>CoreFoundation`_CFURLIsPromiseName (7 samples, 0.03%)</title><rect x="12.9210%" y="421" width="0.0307%" height="15" fill="rgb(229,52,16)" fg:x="2950" fg:w="7"/><text x="13.1710%" y="431.50"></text></g><g><title>CoreFoundation`CFStringGetCharacterAtIndex (4 samples, 0.02%)</title><rect x="12.9692%" y="389" width="0.0175%" height="15" fill="rgb(212,155,18)" fg:x="2961" fg:w="4"/><text x="13.2192%" y="399.50"></text></g><g><title>CoreFoundation`_CFURLIsPromiseName (6 samples, 0.03%)</title><rect x="12.9692%" y="405" width="0.0263%" height="15" fill="rgb(242,21,14)" fg:x="2961" fg:w="6"/><text x="13.2192%" y="415.50"></text></g><g><title>LaunchServices`-[FSNode nameWithError:] (8 samples, 0.04%)</title><rect x="12.9999%" y="405" width="0.0350%" height="15" fill="rgb(222,19,48)" fg:x="2968" fg:w="8"/><text x="13.2499%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleaseReturnValue (3 samples, 0.01%)</title><rect x="13.0349%" y="405" width="0.0131%" height="15" fill="rgb(232,45,27)" fg:x="2976" fg:w="3"/><text x="13.2849%" y="415.50"></text></g><g><title>LaunchServices`_LSGetBRDisplayNameForSideFaultFileNode (33 samples, 0.14%)</title><rect x="12.9079%" y="437" width="0.1445%" height="15" fill="rgb(249,103,42)" fg:x="2947" fg:w="33"/><text x="13.1579%" y="447.50"></text></g><g><title>LaunchServices`-[FSNode isSideFault] (23 samples, 0.10%)</title><rect x="12.9517%" y="421" width="0.1007%" height="15" fill="rgb(246,81,33)" fg:x="2957" fg:w="23"/><text x="13.2017%" y="431.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (4 samples, 0.02%)</title><rect x="13.0612%" y="437" width="0.0175%" height="15" fill="rgb(252,33,42)" fg:x="2982" fg:w="4"/><text x="13.3112%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (4 samples, 0.02%)</title><rect x="13.0612%" y="421" width="0.0175%" height="15" fill="rgb(209,212,41)" fg:x="2982" fg:w="4"/><text x="13.3112%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (8 samples, 0.04%)</title><rect x="13.0875%" y="437" width="0.0350%" height="15" fill="rgb(207,154,6)" fg:x="2988" fg:w="8"/><text x="13.3375%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_retain (3 samples, 0.01%)</title><rect x="13.1269%" y="437" width="0.0131%" height="15" fill="rgb(223,64,47)" fg:x="2997" fg:w="3"/><text x="13.3769%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleaseReturnValue (3 samples, 0.01%)</title><rect x="13.1400%" y="437" width="0.0131%" height="15" fill="rgb(211,161,38)" fg:x="3000" fg:w="3"/><text x="13.3900%" y="447.50"></text></g><g><title>LaunchServices`+[_LSDisplayNameConstructor(ConstructForAnyFile) displayNameConstructorWithContextIfNeeded:bundle:bundleClass:node:preferredLocalizations:error:] (955 samples, 4.18%)</title><rect x="8.9965%" y="453" width="4.1829%" height="15" fill="rgb(219,138,40)" fg:x="2054" fg:w="955"/><text x="9.2465%" y="463.50">Launc..</text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.02%)</title><rect x="13.2320%" y="453" width="0.0219%" height="15" fill="rgb(241,228,46)" fg:x="3021" fg:w="5"/><text x="13.4820%" y="463.50"></text></g><g><title>LaunchServices`+[_LSDisplayNameConstructor(ConstructForAnyFile) displayNameConstructorWithContextIfNeeded:node:error:] (977 samples, 4.28%)</title><rect x="8.9878%" y="469" width="4.2793%" height="15" fill="rgb(223,209,38)" fg:x="2052" fg:w="977"/><text x="9.2378%" y="479.50">Launc..</text></g><g><title>libobjc.A.dylib`objc_autoreleaseReturnValue (3 samples, 0.01%)</title><rect x="13.2802%" y="469" width="0.0131%" height="15" fill="rgb(236,164,45)" fg:x="3032" fg:w="3"/><text x="13.5302%" y="479.50"></text></g><g><title>LaunchServices`LaunchServices::URLPropertyProvider::getDisplayNameConstructor(LaunchServices::Database::Context&amp;, id (989 samples, 4.33%)</title><rect x="8.9746%" y="485" width="4.3318%" height="15" fill="rgb(231,15,5)" fg:x="2049" fg:w="989"/><text x="9.2246%" y="495.50">Launc..</text></g><g><title>LaunchServices`_LSContextIsCurrentThreadInitializing (3 samples, 0.01%)</title><rect x="13.3065%" y="485" width="0.0131%" height="15" fill="rgb(252,35,15)" fg:x="3038" fg:w="3"/><text x="13.5565%" y="495.50"></text></g><g><title>LaunchServices`getIsCurrentThreadInLSContextInitReference() (5 samples, 0.02%)</title><rect x="13.3196%" y="485" width="0.0219%" height="15" fill="rgb(248,181,18)" fg:x="3041" fg:w="5"/><text x="13.5696%" y="495.50"></text></g><g><title>LaunchServices`objc_msgSend$URL (5 samples, 0.02%)</title><rect x="13.3415%" y="485" width="0.0219%" height="15" fill="rgb(233,39,42)" fg:x="3046" fg:w="5"/><text x="13.5915%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.03%)</title><rect x="13.3941%" y="485" width="0.0263%" height="15" fill="rgb(238,110,33)" fg:x="3058" fg:w="6"/><text x="13.6441%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_opt_class (3 samples, 0.01%)</title><rect x="13.4203%" y="485" width="0.0131%" height="15" fill="rgb(233,195,10)" fg:x="3064" fg:w="3"/><text x="13.6703%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutorelease (3 samples, 0.01%)</title><rect x="13.4379%" y="485" width="0.0131%" height="15" fill="rgb(254,105,3)" fg:x="3068" fg:w="3"/><text x="13.6879%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleaseReturnValue (6 samples, 0.03%)</title><rect x="13.4510%" y="485" width="0.0263%" height="15" fill="rgb(221,225,9)" fg:x="3071" fg:w="6"/><text x="13.7010%" y="495.50"></text></g><g><title>LaunchServices`LaunchServices::URLPropertyProvider::prepareLocalizedNameValue(LaunchServices::Database::Context&amp;, id (1,120 samples, 4.91%)</title><rect x="8.5848%" y="501" width="4.9056%" height="15" fill="rgb(224,227,45)" fg:x="1960" fg:w="1120"/><text x="8.8348%" y="511.50">Launch..</text></g><g><title>LaunchServices`objc_msgSend$canIssueIO (3 samples, 0.01%)</title><rect x="13.5123%" y="501" width="0.0131%" height="15" fill="rgb(229,198,43)" fg:x="3085" fg:w="3"/><text x="13.7623%" y="511.50"></text></g><g><title>LaunchServices`objc_msgSend$unlocalizedNameWithContextIfNeeded:asIfShowingAllExtensions: (3 samples, 0.01%)</title><rect x="13.5298%" y="501" width="0.0131%" height="15" fill="rgb(206,209,35)" fg:x="3089" fg:w="3"/><text x="13.7798%" y="511.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (10 samples, 0.04%)</title><rect x="13.5780%" y="469" width="0.0438%" height="15" fill="rgb(245,195,53)" fg:x="3100" fg:w="10"/><text x="13.8280%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (10 samples, 0.04%)</title><rect x="13.5780%" y="453" width="0.0438%" height="15" fill="rgb(240,92,26)" fg:x="3100" fg:w="10"/><text x="13.8280%" y="463.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (6 samples, 0.03%)</title><rect x="13.5955%" y="437" width="0.0263%" height="15" fill="rgb(207,40,23)" fg:x="3104" fg:w="6"/><text x="13.8455%" y="447.50"></text></g><g><title>libobjc.A.dylib`cache_getImp (4 samples, 0.02%)</title><rect x="13.6043%" y="421" width="0.0175%" height="15" fill="rgb(223,111,35)" fg:x="3106" fg:w="4"/><text x="13.8543%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.04%)</title><rect x="13.6306%" y="469" width="0.0394%" height="15" fill="rgb(229,147,28)" fg:x="3112" fg:w="9"/><text x="13.8806%" y="479.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (29 samples, 0.13%)</title><rect x="13.5517%" y="485" width="0.1270%" height="15" fill="rgb(211,29,28)" fg:x="3094" fg:w="29"/><text x="13.8017%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (33 samples, 0.14%)</title><rect x="13.5517%" y="501" width="0.1445%" height="15" fill="rgb(228,72,33)" fg:x="3094" fg:w="33"/><text x="13.8017%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.02%)</title><rect x="13.7007%" y="501" width="0.0219%" height="15" fill="rgb(205,214,31)" fg:x="3128" fg:w="5"/><text x="13.9507%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_release (8 samples, 0.04%)</title><rect x="13.7226%" y="501" width="0.0350%" height="15" fill="rgb(224,111,15)" fg:x="3133" fg:w="8"/><text x="13.9726%" y="511.50"></text></g><g><title>LaunchServices`LaunchServices::URLPropertyProvider::prepareValues (1,256 samples, 5.50%)</title><rect x="8.2695%" y="517" width="5.5013%" height="15" fill="rgb(253,21,26)" fg:x="1888" fg:w="1256"/><text x="8.5195%" y="527.50">LaunchS..</text></g><g><title>LaunchServices`objc_msgSend$initWithURL:flags:error: (8 samples, 0.04%)</title><rect x="13.7708%" y="517" width="0.0350%" height="15" fill="rgb(245,139,43)" fg:x="3144" fg:w="8"/><text x="14.0208%" y="527.50"></text></g><g><title>LaunchServices`objc_msgSend$isServer (4 samples, 0.02%)</title><rect x="13.8058%" y="517" width="0.0175%" height="15" fill="rgb(252,170,7)" fg:x="3152" fg:w="4"/><text x="14.0558%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_release (3 samples, 0.01%)</title><rect x="13.8321%" y="517" width="0.0131%" height="15" fill="rgb(231,118,14)" fg:x="3158" fg:w="3"/><text x="14.0821%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__getattrlist (4,769 samples, 20.89%)</title><rect x="13.8584%" y="517" width="20.8883%" height="15" fill="rgb(238,83,0)" fg:x="3164" fg:w="4769"/><text x="14.1084%" y="527.50">libsystem_kernel.dylib`__getattrl..</text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.03%)</title><rect x="34.7466%" y="517" width="0.0263%" height="15" fill="rgb(221,39,39)" fg:x="7933" fg:w="6"/><text x="34.9966%" y="527.50"></text></g><g><title>libsystem_platform.dylib`flsl (3 samples, 0.01%)</title><rect x="34.7729%" y="517" width="0.0131%" height="15" fill="rgb(222,119,46)" fg:x="7939" fg:w="3"/><text x="35.0229%" y="527.50"></text></g><g><title>CoreServicesInternal`prepareValuesForBitmap(__CFURL const*, __FileCache*, _FilePropertyBitmap*, __CFError**) (6,791 samples, 29.74%)</title><rect x="5.0589%" y="533" width="29.7446%" height="15" fill="rgb(222,165,49)" fg:x="1155" fg:w="6791"/><text x="5.3089%" y="543.50">CoreServicesInternal`prepareValuesForBitmap(__CF..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (4 samples, 0.02%)</title><rect x="34.7860%" y="517" width="0.0175%" height="15" fill="rgb(219,113,52)" fg:x="7942" fg:w="4"/><text x="35.0360%" y="527.50"></text></g><g><title>LaunchServices`DYLD-STUB$$_CFURLFileCacheGetPropertyValueForKey (4 samples, 0.02%)</title><rect x="34.8036%" y="533" width="0.0175%" height="15" fill="rgb(214,7,15)" fg:x="7946" fg:w="4"/><text x="35.0536%" y="543.50"></text></g><g><title>CoreFoundation`CFEqual (4 samples, 0.02%)</title><rect x="34.8868%" y="469" width="0.0175%" height="15" fill="rgb(235,32,4)" fg:x="7965" fg:w="4"/><text x="35.1368%" y="479.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValueIfPresent (20 samples, 0.09%)</title><rect x="34.8430%" y="501" width="0.0876%" height="15" fill="rgb(238,90,54)" fg:x="7955" fg:w="20"/><text x="35.0930%" y="511.50"></text></g><g><title>CoreFoundation`___CFBasicHashFindBucket_Linear (17 samples, 0.07%)</title><rect x="34.8561%" y="485" width="0.0745%" height="15" fill="rgb(213,208,19)" fg:x="7958" fg:w="17"/><text x="35.1061%" y="495.50"></text></g><g><title>CoreFoundation`__CFStringEqual (3 samples, 0.01%)</title><rect x="34.9174%" y="469" width="0.0131%" height="15" fill="rgb(233,156,4)" fg:x="7972" fg:w="3"/><text x="35.1674%" y="479.50"></text></g><g><title>LaunchServices`LaunchServices::URLPropertyProvider::copyValues (26 samples, 0.11%)</title><rect x="34.8211%" y="533" width="0.1139%" height="15" fill="rgb(207,194,5)" fg:x="7950" fg:w="26"/><text x="35.0711%" y="543.50"></text></g><g><title>CoreServicesInternal`_FileCacheGetPropertyValueForKey (24 samples, 0.11%)</title><rect x="34.8298%" y="517" width="0.1051%" height="15" fill="rgb(206,111,30)" fg:x="7952" fg:w="24"/><text x="35.0798%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.03%)</title><rect x="34.9393%" y="533" width="0.0263%" height="15" fill="rgb(243,70,54)" fg:x="7977" fg:w="6"/><text x="35.1893%" y="543.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (5 samples, 0.02%)</title><rect x="34.9700%" y="533" width="0.0219%" height="15" fill="rgb(242,28,8)" fg:x="7984" fg:w="5"/><text x="35.2200%" y="543.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_recursive_lock_trylock (4 samples, 0.02%)</title><rect x="34.9963%" y="533" width="0.0175%" height="15" fill="rgb(219,106,18)" fg:x="7990" fg:w="4"/><text x="35.2463%" y="543.50"></text></g><g><title>CoreServicesInternal`_FSURLCopyResourcePropertyForKeyInternal(__CFURL const*, __CFString const*, void*, void*, __CFError**, unsigned char) (6,957 samples, 30.47%)</title><rect x="4.6253%" y="549" width="30.4717%" height="15" fill="rgb(244,222,10)" fg:x="1056" fg:w="6957"/><text x="4.8753%" y="559.50">CoreServicesInternal`_FSURLCopyResourcePropertyFo..</text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (18 samples, 0.08%)</title><rect x="35.0182%" y="533" width="0.0788%" height="15" fill="rgb(236,179,52)" fg:x="7995" fg:w="18"/><text x="35.2682%" y="543.50"></text></g><g><title>CoreServicesInternal`_FileCacheGetForURL(__CFURL const*, void*) (5 samples, 0.02%)</title><rect x="35.1014%" y="549" width="0.0219%" height="15" fill="rgb(213,23,39)" fg:x="8014" fg:w="5"/><text x="35.3514%" y="559.50"></text></g><g><title>CoreServicesInternal`addPropertyAndDependenciesToBitmap(_FileProperty const*, _FilePropertyBitmap*) (25 samples, 0.11%)</title><rect x="35.1233%" y="549" width="0.1095%" height="15" fill="rgb(238,48,10)" fg:x="8019" fg:w="25"/><text x="35.3733%" y="559.50"></text></g><g><title>LaunchServices`LaunchServices::URLPropertyProvider::copyValues (10 samples, 0.04%)</title><rect x="35.2328%" y="549" width="0.0438%" height="15" fill="rgb(251,196,23)" fg:x="8044" fg:w="10"/><text x="35.4828%" y="559.50"></text></g><g><title>CoreFoundation`CFURLCopyResourcePropertyForKey (7,008 samples, 30.70%)</title><rect x="4.5946%" y="565" width="30.6951%" height="15" fill="rgb(250,152,24)" fg:x="1049" fg:w="7008"/><text x="4.8446%" y="575.50">CoreFoundation`CFURLCopyResourcePropertyForKey</text></g><g><title>CoreFoundation`_CFURLHasFileURLScheme (3 samples, 0.01%)</title><rect x="35.2897%" y="565" width="0.0131%" height="15" fill="rgb(209,150,17)" fg:x="8057" fg:w="3"/><text x="35.5397%" y="575.50"></text></g><g><title>CoreServicesInternal`_FSURLCopyResourcePropertyForKey (6 samples, 0.03%)</title><rect x="35.3292%" y="565" width="0.0263%" height="15" fill="rgb(234,202,34)" fg:x="8066" fg:w="6"/><text x="35.5792%" y="575.50"></text></g><g><title>CoreFoundation`CFRunLoopGetMain (3 samples, 0.01%)</title><rect x="35.3598%" y="549" width="0.0131%" height="15" fill="rgb(253,148,53)" fg:x="8073" fg:w="3"/><text x="35.6098%" y="559.50"></text></g><g><title>CoreServicesInternal`_FSURLEndResourcePropertyCacheAccess (9 samples, 0.04%)</title><rect x="35.3598%" y="565" width="0.0394%" height="15" fill="rgb(218,129,16)" fg:x="8073" fg:w="9"/><text x="35.6098%" y="575.50"></text></g><g><title>CoreFoundation`-[NSURL getResourceValue:forKey:error:] (7,041 samples, 30.84%)</title><rect x="4.5771%" y="581" width="30.8396%" height="15" fill="rgb(216,85,19)" fg:x="1045" fg:w="7041"/><text x="4.8271%" y="591.50">CoreFoundation`-[NSURL getResourceValue:forKey:err..</text></g><g><title>CoreFoundation`CFURLCreateWithFileSystemPath (3 samples, 0.01%)</title><rect x="35.4168%" y="581" width="0.0131%" height="15" fill="rgb(235,228,7)" fg:x="8086" fg:w="3"/><text x="35.6668%" y="591.50"></text></g><g><title>CoreFoundation`objc_msgSend$_cfurl (6 samples, 0.03%)</title><rect x="35.4343%" y="581" width="0.0263%" height="15" fill="rgb(245,175,0)" fg:x="8090" fg:w="6"/><text x="35.6843%" y="591.50"></text></g><g><title>CoreFoundation`-[__NSCFString length] (4 samples, 0.02%)</title><rect x="35.4912%" y="565" width="0.0175%" height="15" fill="rgb(208,168,36)" fg:x="8103" fg:w="4"/><text x="35.7412%" y="575.50"></text></g><g><title>CoreFoundation`CFStringGetLength (4 samples, 0.02%)</title><rect x="35.5131%" y="565" width="0.0175%" height="15" fill="rgb(246,171,24)" fg:x="8108" fg:w="4"/><text x="35.7631%" y="575.50"></text></g><g><title>CoreFoundation`POSIXPathToURLPath (11 samples, 0.05%)</title><rect x="35.5350%" y="565" width="0.0482%" height="15" fill="rgb(215,142,24)" fg:x="8113" fg:w="11"/><text x="35.7850%" y="575.50"></text></g><g><title>CoreFoundation`_CFStringGetLength2 (5 samples, 0.02%)</title><rect x="35.5876%" y="565" width="0.0219%" height="15" fill="rgb(250,187,7)" fg:x="8125" fg:w="5"/><text x="35.8376%" y="575.50"></text></g><g><title>CoreFoundation`CFRelease (4 samples, 0.02%)</title><rect x="35.6226%" y="549" width="0.0175%" height="15" fill="rgb(228,66,33)" fg:x="8133" fg:w="4"/><text x="35.8726%" y="559.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (3 samples, 0.01%)</title><rect x="35.6270%" y="533" width="0.0131%" height="15" fill="rgb(234,215,21)" fg:x="8134" fg:w="3"/><text x="35.8770%" y="543.50"></text></g><g><title>CoreFoundation`CFStringGetCharactersPtr (3 samples, 0.01%)</title><rect x="35.7409%" y="533" width="0.0131%" height="15" fill="rgb(222,191,20)" fg:x="8160" fg:w="3"/><text x="35.9909%" y="543.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (3 samples, 0.01%)</title><rect x="35.7409%" y="517" width="0.0131%" height="15" fill="rgb(245,79,54)" fg:x="8160" fg:w="3"/><text x="35.9909%" y="527.50"></text></g><g><title>CoreFoundation`CFStringFindWithOptionsAndLocale (32 samples, 0.14%)</title><rect x="35.6489%" y="549" width="0.1402%" height="15" fill="rgb(240,10,37)" fg:x="8139" fg:w="32"/><text x="35.8989%" y="559.50"></text></g><g><title>CoreFoundation`_CFStringGetCStringPtrInternal (4 samples, 0.02%)</title><rect x="35.7715%" y="533" width="0.0175%" height="15" fill="rgb(214,192,32)" fg:x="8167" fg:w="4"/><text x="36.0215%" y="543.50"></text></g><g><title>CoreFoundation`CFStringGetLength (8 samples, 0.04%)</title><rect x="35.7978%" y="549" width="0.0350%" height="15" fill="rgb(209,36,54)" fg:x="8173" fg:w="8"/><text x="36.0478%" y="559.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (6 samples, 0.03%)</title><rect x="35.8066%" y="533" width="0.0263%" height="15" fill="rgb(220,10,11)" fg:x="8175" fg:w="6"/><text x="36.0566%" y="543.50"></text></g><g><title>CoreFoundation`CFStringHasPrefix (4 samples, 0.02%)</title><rect x="35.8329%" y="549" width="0.0175%" height="15" fill="rgb(221,106,17)" fg:x="8181" fg:w="4"/><text x="36.0829%" y="559.50"></text></g><g><title>CoreFoundation`CFStringGetLength (4 samples, 0.02%)</title><rect x="35.8329%" y="533" width="0.0175%" height="15" fill="rgb(251,142,44)" fg:x="8181" fg:w="4"/><text x="36.0829%" y="543.50"></text></g><g><title>CoreFoundation`CreateStringFromFileSystemRepresentationByAddingPercentEscapes (5 samples, 0.02%)</title><rect x="35.8504%" y="549" width="0.0219%" height="15" fill="rgb(238,13,15)" fg:x="8185" fg:w="5"/><text x="36.1004%" y="559.50"></text></g><g><title>CoreFoundation`CFUniCharDecomposeWithErrorLocation (3 samples, 0.01%)</title><rect x="35.9424%" y="517" width="0.0131%" height="15" fill="rgb(208,107,27)" fg:x="8206" fg:w="3"/><text x="36.1924%" y="527.50"></text></g><g><title>CoreFoundation`CFUniCharDecomposeWithErrorLocation (44 samples, 0.19%)</title><rect x="36.0081%" y="501" width="0.1927%" height="15" fill="rgb(205,136,37)" fg:x="8221" fg:w="44"/><text x="36.2581%" y="511.50"></text></g><g><title>CoreFoundation`_CFBuildVersionForCFSystemVersion (10 samples, 0.04%)</title><rect x="36.2008%" y="501" width="0.0438%" height="15" fill="rgb(250,205,27)" fg:x="8265" fg:w="10"/><text x="36.4508%" y="511.50"></text></g><g><title>CoreFoundation`_CFExecutableLinkedOnOrAfter (5 samples, 0.02%)</title><rect x="36.2446%" y="501" width="0.0219%" height="15" fill="rgb(210,80,43)" fg:x="8275" fg:w="5"/><text x="36.4946%" y="511.50"></text></g><g><title>dyld`dyld4::APIs::dyld_get_active_platform (4 samples, 0.02%)</title><rect x="36.2490%" y="485" width="0.0175%" height="15" fill="rgb(247,160,36)" fg:x="8276" fg:w="4"/><text x="36.4990%" y="495.50"></text></g><g><title>CoreFoundation`_CFStringGetCStringPtrInternal (3 samples, 0.01%)</title><rect x="36.2665%" y="501" width="0.0131%" height="15" fill="rgb(234,13,49)" fg:x="8280" fg:w="3"/><text x="36.5165%" y="511.50"></text></g><g><title>dyld`dyld4::APIs::dyld_get_active_platform (6 samples, 0.03%)</title><rect x="36.2796%" y="501" width="0.0263%" height="15" fill="rgb(234,122,0)" fg:x="8283" fg:w="6"/><text x="36.5296%" y="511.50"></text></g><g><title>CoreFoundation`_CFStringGetFileSystemRepresentationWithErrorStatus (84 samples, 0.37%)</title><rect x="35.9555%" y="517" width="0.3679%" height="15" fill="rgb(207,146,38)" fg:x="8209" fg:w="84"/><text x="36.2055%" y="527.50"></text></g><g><title>CoreFoundation`CFStringGetFileSystemRepresentation (93 samples, 0.41%)</title><rect x="35.9424%" y="533" width="0.4073%" height="15" fill="rgb(207,177,25)" fg:x="8206" fg:w="93"/><text x="36.1924%" y="543.50"></text></g><g><title>CoreFoundation`__CFStrConvertBytesToUnicode (6 samples, 0.03%)</title><rect x="36.3234%" y="517" width="0.0263%" height="15" fill="rgb(211,178,42)" fg:x="8293" fg:w="6"/><text x="36.5734%" y="527.50"></text></g><g><title>CoreFoundation`CFStringGetLength (3 samples, 0.01%)</title><rect x="36.3497%" y="533" width="0.0131%" height="15" fill="rgb(230,69,54)" fg:x="8299" fg:w="3"/><text x="36.5997%" y="543.50"></text></g><g><title>CoreFoundation`CFStringGetMaximumSizeOfFileSystemRepresentation (4 samples, 0.02%)</title><rect x="36.3628%" y="533" width="0.0175%" height="15" fill="rgb(214,135,41)" fg:x="8302" fg:w="4"/><text x="36.6128%" y="543.50"></text></g><g><title>CoreFoundation`_CFGetTSDCreateIfNeeded (3 samples, 0.01%)</title><rect x="36.4767%" y="501" width="0.0131%" height="15" fill="rgb(237,67,25)" fg:x="8328" fg:w="3"/><text x="36.7267%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_object::changeIsa (3 samples, 0.01%)</title><rect x="36.4942%" y="485" width="0.0131%" height="15" fill="rgb(222,189,50)" fg:x="8332" fg:w="3"/><text x="36.7442%" y="495.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (11 samples, 0.05%)</title><rect x="36.4899%" y="501" width="0.0482%" height="15" fill="rgb(245,148,34)" fg:x="8331" fg:w="11"/><text x="36.7399%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (7 samples, 0.03%)</title><rect x="36.5074%" y="485" width="0.0307%" height="15" fill="rgb(222,29,6)" fg:x="8335" fg:w="7"/><text x="36.7574%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (5 samples, 0.02%)</title><rect x="36.5161%" y="469" width="0.0219%" height="15" fill="rgb(221,189,43)" fg:x="8337" fg:w="5"/><text x="36.7661%" y="479.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (13 samples, 0.06%)</title><rect x="36.5424%" y="501" width="0.0569%" height="15" fill="rgb(207,36,27)" fg:x="8343" fg:w="13"/><text x="36.7924%" y="511.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (37 samples, 0.16%)</title><rect x="36.4504%" y="517" width="0.1621%" height="15" fill="rgb(217,90,24)" fg:x="8322" fg:w="37"/><text x="36.7004%" y="527.50"></text></g><g><title>CoreFoundation`__CFStrHashEightBit2 (3 samples, 0.01%)</title><rect x="36.5994%" y="501" width="0.0131%" height="15" fill="rgb(224,66,35)" fg:x="8356" fg:w="3"/><text x="36.8494%" y="511.50"></text></g><g><title>CoreFoundation`CreateStringFromFileSystemRepresentationByAddingPercentEscapes (57 samples, 0.25%)</title><rect x="36.3804%" y="533" width="0.2497%" height="15" fill="rgb(221,13,50)" fg:x="8306" fg:w="57"/><text x="36.6304%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.02%)</title><rect x="36.6125%" y="517" width="0.0175%" height="15" fill="rgb(236,68,49)" fg:x="8359" fg:w="4"/><text x="36.8625%" y="527.50"></text></g><g><title>CoreFoundation`POSIXPathToURLPath (175 samples, 0.77%)</title><rect x="35.8810%" y="549" width="0.7665%" height="15" fill="rgb(229,146,28)" fg:x="8192" fg:w="175"/><text x="36.1310%" y="559.50"></text></g><g><title>CoreFoundation`_CFRelease (4 samples, 0.02%)</title><rect x="36.6563%" y="549" width="0.0175%" height="15" fill="rgb(225,31,38)" fg:x="8369" fg:w="4"/><text x="36.9063%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_object::changeIsa (6 samples, 0.03%)</title><rect x="36.7001%" y="533" width="0.0263%" height="15" fill="rgb(250,208,3)" fg:x="8379" fg:w="6"/><text x="36.9501%" y="543.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (16 samples, 0.07%)</title><rect x="36.6782%" y="549" width="0.0701%" height="15" fill="rgb(246,54,23)" fg:x="8374" fg:w="16"/><text x="36.9282%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (4 samples, 0.02%)</title><rect x="36.7308%" y="533" width="0.0175%" height="15" fill="rgb(243,76,11)" fg:x="8386" fg:w="4"/><text x="36.9808%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (3 samples, 0.01%)</title><rect x="36.7351%" y="517" width="0.0131%" height="15" fill="rgb(245,21,50)" fg:x="8387" fg:w="3"/><text x="36.9851%" y="527.50"></text></g><g><title>CoreFoundation`__CFStringFillCharacterSetInlineBuffer (3 samples, 0.01%)</title><rect x="36.7658%" y="549" width="0.0131%" height="15" fill="rgb(228,9,43)" fg:x="8394" fg:w="3"/><text x="37.0158%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="36.7833%" y="549" width="0.0131%" height="15" fill="rgb(208,100,47)" fg:x="8398" fg:w="3"/><text x="37.0333%" y="559.50"></text></g><g><title>CoreFoundation`_CFURLCreateWithFileSystemPath (273 samples, 1.20%)</title><rect x="35.6095%" y="565" width="1.1957%" height="15" fill="rgb(232,26,8)" fg:x="8130" fg:w="273"/><text x="35.8595%" y="575.50"></text></g><g><title>Foundation`+[NSURL(NSURL) allocWithZone:] (3 samples, 0.01%)</title><rect x="36.8052%" y="565" width="0.0131%" height="15" fill="rgb(216,166,38)" fg:x="8403" fg:w="3"/><text x="37.0552%" y="575.50"></text></g><g><title>Foundation`-[NSString(NSPathUtilities) isAbsolutePath] (4 samples, 0.02%)</title><rect x="36.8184%" y="565" width="0.0175%" height="15" fill="rgb(251,202,51)" fg:x="8406" fg:w="4"/><text x="37.0684%" y="575.50"></text></g><g><title>CoreFoundation`-[__NSCFString getCharacters:range:] (4 samples, 0.02%)</title><rect x="36.8446%" y="549" width="0.0175%" height="15" fill="rgb(254,216,34)" fg:x="8412" fg:w="4"/><text x="37.0946%" y="559.50"></text></g><g><title>Foundation`-[NSString(NSPathUtilities) isAbsolutePath] (8 samples, 0.04%)</title><rect x="36.8665%" y="549" width="0.0350%" height="15" fill="rgb(251,32,27)" fg:x="8417" fg:w="8"/><text x="37.1165%" y="559.50"></text></g><g><title>CoreFoundation`-[__NSCFString getCharacters:range:] (6 samples, 0.03%)</title><rect x="36.8753%" y="533" width="0.0263%" height="15" fill="rgb(208,127,28)" fg:x="8419" fg:w="6"/><text x="37.1253%" y="543.50"></text></g><g><title>CoreFoundation`__CFStrConvertBytesToUnicode (3 samples, 0.01%)</title><rect x="36.8884%" y="517" width="0.0131%" height="15" fill="rgb(224,137,22)" fg:x="8422" fg:w="3"/><text x="37.1384%" y="527.50"></text></g><g><title>Foundation`objc_msgSend$getCharacters:range: (4 samples, 0.02%)</title><rect x="36.9016%" y="549" width="0.0175%" height="15" fill="rgb(254,70,32)" fg:x="8425" fg:w="4"/><text x="37.1516%" y="559.50"></text></g><g><title>Foundation`-[NSURL(NSURL) initFileURLWithPath:isDirectory:] (21 samples, 0.09%)</title><rect x="36.8359%" y="565" width="0.0920%" height="15" fill="rgb(229,75,37)" fg:x="8410" fg:w="21"/><text x="37.0859%" y="575.50"></text></g><g><title>Foundation`objc_msgSend$length (7 samples, 0.03%)</title><rect x="36.9366%" y="565" width="0.0307%" height="15" fill="rgb(252,64,23)" fg:x="8433" fg:w="7"/><text x="37.1866%" y="575.50"></text></g><g><title>Foundation`+[NSURL(NSURL) fileURLWithPath:isDirectory:] (341 samples, 1.49%)</title><rect x="35.4912%" y="581" width="1.4936%" height="15" fill="rgb(232,162,48)" fg:x="8103" fg:w="341"/><text x="35.7412%" y="591.50"></text></g><g><title>Foundation`-[NSURL(NSURL) initFileURLWithPath:isDirectory:] (3 samples, 0.01%)</title><rect x="36.9936%" y="581" width="0.0131%" height="15" fill="rgb(246,160,12)" fg:x="8446" fg:w="3"/><text x="37.2436%" y="591.50"></text></g><g><title>Foundation`DYLD-STUB$$CFURLCreateWithFileSystemPath (3 samples, 0.01%)</title><rect x="37.0067%" y="581" width="0.0131%" height="15" fill="rgb(247,166,0)" fg:x="8449" fg:w="3"/><text x="37.2567%" y="591.50"></text></g><g><title>Foundation`DYLD-STUB$$objc_allocWithZone (7 samples, 0.03%)</title><rect x="37.0198%" y="581" width="0.0307%" height="15" fill="rgb(249,219,21)" fg:x="8452" fg:w="7"/><text x="37.2698%" y="591.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAutorelease (13 samples, 0.06%)</title><rect x="37.0505%" y="581" width="0.0569%" height="15" fill="rgb(205,209,3)" fg:x="8459" fg:w="13"/><text x="37.3005%" y="591.50"></text></g><g><title>libobjc.A.dylib`moveTLSAutoreleaseToPool(ReturnAutoreleaseInfo) (11 samples, 0.05%)</title><rect x="37.0593%" y="565" width="0.0482%" height="15" fill="rgb(243,44,1)" fg:x="8461" fg:w="11"/><text x="37.3093%" y="575.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::add (9 samples, 0.04%)</title><rect x="37.0680%" y="549" width="0.0394%" height="15" fill="rgb(206,159,16)" fg:x="8463" fg:w="9"/><text x="37.3180%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_allocWithZone (5 samples, 0.02%)</title><rect x="37.1162%" y="581" width="0.0219%" height="15" fill="rgb(244,77,30)" fg:x="8474" fg:w="5"/><text x="37.3662%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.01%)</title><rect x="37.1425%" y="581" width="0.0131%" height="15" fill="rgb(218,69,12)" fg:x="8480" fg:w="3"/><text x="37.3925%" y="591.50"></text></g><g><title>Foundation`-[NSFileManager displayNameAtPath:] (7,447 samples, 32.62%)</title><rect x="4.5421%" y="597" width="32.6179%" height="15" fill="rgb(212,87,7)" fg:x="1037" fg:w="7447"/><text x="4.7921%" y="607.50">Foundation`-[NSFileManager displayNameAtPath:]</text></g><g><title>Foundation`-[NSString(NSStringOtherEncodings) lengthOfBytesUsingEncoding:] (6 samples, 0.03%)</title><rect x="37.1644%" y="597" width="0.0263%" height="15" fill="rgb(245,114,25)" fg:x="8485" fg:w="6"/><text x="37.4144%" y="607.50"></text></g><g><title>Foundation`DYLD-STUB$$CFStringConvertNSStringEncodingToEncoding (4 samples, 0.02%)</title><rect x="37.1907%" y="597" width="0.0175%" height="15" fill="rgb(210,61,42)" fg:x="8491" fg:w="4"/><text x="37.4407%" y="607.50"></text></g><g><title>Foundation`objc_msgSend$fileURLWithPath:isDirectory: (3 samples, 0.01%)</title><rect x="37.2126%" y="597" width="0.0131%" height="15" fill="rgb(211,52,33)" fg:x="8496" fg:w="3"/><text x="37.4626%" y="607.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_get_objc_selector (10 samples, 0.04%)</title><rect x="37.2257%" y="597" width="0.0438%" height="15" fill="rgb(234,58,33)" fg:x="8499" fg:w="10"/><text x="37.4757%" y="607.50"></text></g><g><title>dyld`objc::StringHashTable::tryGetIndex (6 samples, 0.03%)</title><rect x="37.3089%" y="565" width="0.0263%" height="15" fill="rgb(220,115,36)" fg:x="8518" fg:w="6"/><text x="37.5589%" y="575.50"></text></g><g><title>dyld`objc::lookup8 (24 samples, 0.11%)</title><rect x="37.3352%" y="565" width="0.1051%" height="15" fill="rgb(243,153,54)" fg:x="8524" fg:w="24"/><text x="37.5852%" y="575.50"></text></g><g><title>dyld`strcmp (11 samples, 0.05%)</title><rect x="37.4403%" y="565" width="0.0482%" height="15" fill="rgb(251,47,18)" fg:x="8548" fg:w="11"/><text x="37.6903%" y="575.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_get_objc_selector (52 samples, 0.23%)</title><rect x="37.3002%" y="581" width="0.2278%" height="15" fill="rgb(242,102,42)" fg:x="8516" fg:w="52"/><text x="37.5502%" y="591.50"></text></g><g><title>dyld`strlen (9 samples, 0.04%)</title><rect x="37.4885%" y="565" width="0.0394%" height="15" fill="rgb(234,31,38)" fg:x="8559" fg:w="9"/><text x="37.7385%" y="575.50"></text></g><g><title>libobjc.A.dylib`__sel_registerName(char const*, bool, bool) (60 samples, 0.26%)</title><rect x="37.2826%" y="597" width="0.2628%" height="15" fill="rgb(221,117,51)" fg:x="8512" fg:w="60"/><text x="37.5326%" y="607.50"></text></g><g><title>dyld`objc::StringHashTable::tryGetIndex (4 samples, 0.02%)</title><rect x="37.5279%" y="581" width="0.0175%" height="15" fill="rgb(212,20,18)" fg:x="8568" fg:w="4"/><text x="37.7779%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_autorelease (3 samples, 0.01%)</title><rect x="37.5454%" y="597" width="0.0131%" height="15" fill="rgb(245,133,36)" fg:x="8572" fg:w="3"/><text x="37.7954%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.03%)</title><rect x="37.5586%" y="597" width="0.0263%" height="15" fill="rgb(212,6,19)" fg:x="8575" fg:w="6"/><text x="37.8086%" y="607.50"></text></g><g><title>sd-core`__rdl_alloc (4 samples, 0.02%)</title><rect x="37.5980%" y="597" width="0.0175%" height="15" fill="rgb(218,1,36)" fg:x="8584" fg:w="4"/><text x="37.8480%" y="607.50"></text></g><g><title>sd-core`__rust_alloc (5 samples, 0.02%)</title><rect x="37.6155%" y="597" width="0.0219%" height="15" fill="rgb(246,84,54)" fg:x="8588" fg:w="5"/><text x="37.8655%" y="607.50"></text></g><g><title>CoreFoundation`CFStringEncodingIsValidEncoding (3 samples, 0.01%)</title><rect x="37.6812%" y="549" width="0.0131%" height="15" fill="rgb(242,110,6)" fg:x="8603" fg:w="3"/><text x="37.9312%" y="559.50"></text></g><g><title>Foundation`-[NSString(NSStringOtherEncodings) lengthOfBytesUsingEncoding:] (10 samples, 0.04%)</title><rect x="37.6681%" y="581" width="0.0438%" height="15" fill="rgb(214,47,5)" fg:x="8600" fg:w="10"/><text x="37.9181%" y="591.50"></text></g><g><title>CoreFoundation`__CFStringEncodeByteStream (9 samples, 0.04%)</title><rect x="37.6725%" y="565" width="0.0394%" height="15" fill="rgb(218,159,25)" fg:x="8601" fg:w="9"/><text x="37.9225%" y="575.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_get_objc_selector (5 samples, 0.02%)</title><rect x="37.7163%" y="581" width="0.0219%" height="15" fill="rgb(215,211,28)" fg:x="8611" fg:w="5"/><text x="37.9663%" y="591.50"></text></g><g><title>dyld`objc::lookup8 (6 samples, 0.03%)</title><rect x="37.7732%" y="549" width="0.0263%" height="15" fill="rgb(238,59,32)" fg:x="8624" fg:w="6"/><text x="38.0232%" y="559.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_get_objc_selector (22 samples, 0.10%)</title><rect x="37.7601%" y="565" width="0.0964%" height="15" fill="rgb(226,82,3)" fg:x="8621" fg:w="22"/><text x="38.0101%" y="575.50"></text></g><g><title>dyld`strcmp (13 samples, 0.06%)</title><rect x="37.7995%" y="549" width="0.0569%" height="15" fill="rgb(240,164,32)" fg:x="8630" fg:w="13"/><text x="38.0495%" y="559.50"></text></g><g><title>sd-core`normpath::localize::name (7,691 samples, 33.69%)</title><rect x="4.1741%" y="613" width="33.6867%" height="15" fill="rgb(232,46,7)" fg:x="953" fg:w="7691"/><text x="4.4241%" y="623.50">sd-core`normpath::localize::name</text></g><g><title>sd-core`normpath::localize::macos::_&lt;impl alloc::string::ToString for normpath::localize::macos::fruity::foundation::NSString&gt;::to_string (51 samples, 0.22%)</title><rect x="37.6374%" y="597" width="0.2234%" height="15" fill="rgb(229,129,53)" fg:x="8593" fg:w="51"/><text x="37.8874%" y="607.50"></text></g><g><title>libobjc.A.dylib`__sel_registerName(char const*, bool, bool) (24 samples, 0.11%)</title><rect x="37.7557%" y="581" width="0.1051%" height="15" fill="rgb(234,188,29)" fg:x="8620" fg:w="24"/><text x="38.0057%" y="591.50"></text></g><g><title>libsystem_c.dylib`realpath$DARWIN_EXTSN (3 samples, 0.01%)</title><rect x="37.8608%" y="597" width="0.0131%" height="15" fill="rgb(246,141,4)" fg:x="8644" fg:w="3"/><text x="38.1108%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.02%)</title><rect x="37.8871%" y="597" width="0.0175%" height="15" fill="rgb(229,23,39)" fg:x="8650" fg:w="4"/><text x="38.1371%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.03%)</title><rect x="37.9046%" y="597" width="0.0263%" height="15" fill="rgb(206,12,3)" fg:x="8654" fg:w="6"/><text x="38.1546%" y="607.50"></text></g><g><title>sd-core`core::ffi::c_str::CStr::from_bytes_with_nul (7 samples, 0.03%)</title><rect x="37.9396%" y="597" width="0.0307%" height="15" fill="rgb(252,226,20)" fg:x="8662" fg:w="7"/><text x="38.1896%" y="607.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$getattrlist (4 samples, 0.02%)</title><rect x="37.9878%" y="581" width="0.0175%" height="15" fill="rgb(216,123,35)" fg:x="8673" fg:w="4"/><text x="38.2378%" y="591.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mkdtempat_np (3 samples, 0.01%)</title><rect x="38.0097%" y="581" width="0.0131%" height="15" fill="rgb(212,68,40)" fg:x="8678" fg:w="3"/><text x="38.2597%" y="591.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$strsep (4 samples, 0.02%)</title><rect x="38.0360%" y="581" width="0.0175%" height="15" fill="rgb(254,125,32)" fg:x="8684" fg:w="4"/><text x="38.2860%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.04%)</title><rect x="38.1367%" y="565" width="0.0394%" height="15" fill="rgb(253,97,22)" fg:x="8707" fg:w="9"/><text x="38.3867%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (5 samples, 0.02%)</title><rect x="38.1543%" y="549" width="0.0219%" height="15" fill="rgb(241,101,14)" fg:x="8711" fg:w="5"/><text x="38.4043%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.05%)</title><rect x="38.1762%" y="565" width="0.0482%" height="15" fill="rgb(238,103,29)" fg:x="8716" fg:w="11"/><text x="38.4262%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlcat (4 samples, 0.02%)</title><rect x="38.2243%" y="565" width="0.0175%" height="15" fill="rgb(233,195,47)" fg:x="8727" fg:w="4"/><text x="38.4743%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlen (7 samples, 0.03%)</title><rect x="38.2419%" y="565" width="0.0307%" height="15" fill="rgb(246,218,30)" fg:x="8731" fg:w="7"/><text x="38.4919%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_strnlen (12 samples, 0.05%)</title><rect x="38.2725%" y="565" width="0.0526%" height="15" fill="rgb(219,145,47)" fg:x="8738" fg:w="12"/><text x="38.5225%" y="575.50"></text></g><g><title>libsystem_c.dylib`realpath$DARWIN_EXTSN (63 samples, 0.28%)</title><rect x="38.0535%" y="581" width="0.2759%" height="15" fill="rgb(243,12,26)" fg:x="8688" fg:w="63"/><text x="38.3035%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__error (3 samples, 0.01%)</title><rect x="38.3295%" y="581" width="0.0131%" height="15" fill="rgb(214,87,16)" fg:x="8751" fg:w="3"/><text x="38.5795%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__getattrlist (2,315 samples, 10.14%)</title><rect x="38.3426%" y="581" width="10.1397%" height="15" fill="rgb(208,99,42)" fg:x="8754" fg:w="2315"/><text x="38.5926%" y="591.50">libsystem_kerne..</text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.02%)</title><rect x="48.4955%" y="581" width="0.0219%" height="15" fill="rgb(253,99,2)" fg:x="11072" fg:w="5"/><text x="48.7455%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.01%)</title><rect x="48.5217%" y="581" width="0.0131%" height="15" fill="rgb(220,168,23)" fg:x="11078" fg:w="3"/><text x="48.7717%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.01%)</title><rect x="48.5393%" y="581" width="0.0131%" height="15" fill="rgb(242,38,24)" fg:x="11082" fg:w="3"/><text x="48.7893%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.06%)</title><rect x="48.5524%" y="581" width="0.0613%" height="15" fill="rgb(225,182,9)" fg:x="11085" fg:w="14"/><text x="48.8024%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_strchr (5 samples, 0.02%)</title><rect x="48.6137%" y="581" width="0.0219%" height="15" fill="rgb(243,178,37)" fg:x="11099" fg:w="5"/><text x="48.8637%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_strlcat (4 samples, 0.02%)</title><rect x="48.6356%" y="581" width="0.0175%" height="15" fill="rgb(232,139,19)" fg:x="11104" fg:w="4"/><text x="48.8856%" y="591.50"></text></g><g><title>sd-core`normpath::normalize::normalize (2,468 samples, 10.81%)</title><rect x="37.8608%" y="613" width="10.8099%" height="15" fill="rgb(225,201,24)" fg:x="8644" fg:w="2468"/><text x="38.1108%" y="623.50">sd-core`normpath..</text></g><g><title>sd-core`std::sys::unix::fs::canonicalize (2,443 samples, 10.70%)</title><rect x="37.9703%" y="597" width="10.7004%" height="15" fill="rgb(221,47,46)" fg:x="8669" fg:w="2443"/><text x="38.2203%" y="607.50">sd-core`std::sys..</text></g><g><title>sd-core`sd_core::location::normalize_path (10,308 samples, 45.15%)</title><rect x="3.5697%" y="629" width="45.1491%" height="15" fill="rgb(249,23,13)" fg:x="815" fg:w="10308"/><text x="3.8197%" y="639.50">sd-core`sd_core::location::normalize_path</text></g><g><title>sd-core`std::sys::unix::os_str::Buf::from_string (7 samples, 0.03%)</title><rect x="48.6882%" y="613" width="0.0307%" height="15" fill="rgb(219,9,5)" fg:x="11116" fg:w="7"/><text x="48.9382%" y="623.50"></text></g><g><title>sd-core`sd_file_ext::extensions::Extension::from_str (3 samples, 0.01%)</title><rect x="48.7188%" y="629" width="0.0131%" height="15" fill="rgb(254,171,16)" fg:x="11123" fg:w="3"/><text x="48.9688%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (12 samples, 0.05%)</title><rect x="48.7889%" y="613" width="0.0526%" height="15" fill="rgb(230,171,20)" fg:x="11139" fg:w="12"/><text x="49.0389%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.04%)</title><rect x="48.8502%" y="613" width="0.0350%" height="15" fill="rgb(210,71,41)" fg:x="11153" fg:w="8"/><text x="49.1002%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="48.8897%" y="613" width="0.0219%" height="15" fill="rgb(206,173,20)" fg:x="11162" fg:w="5"/><text x="49.1397%" y="623.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::DocumentExtension as core::str::traits::FromStr&gt;::from_str (4 samples, 0.02%)</title><rect x="48.9378%" y="613" width="0.0175%" height="15" fill="rgb(233,88,34)" fg:x="11173" fg:w="4"/><text x="49.1878%" y="623.50"></text></g><g><title>sd-core`&lt;serde_json::value::de::EnumDeserializer as serde::de::EnumAccess&gt;::variant_seed (6 samples, 0.03%)</title><rect x="48.9773%" y="613" width="0.0263%" height="15" fill="rgb(223,209,46)" fg:x="11182" fg:w="6"/><text x="49.2273%" y="623.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.04%)</title><rect x="49.0254%" y="597" width="0.0394%" height="15" fill="rgb(250,43,18)" fg:x="11193" fg:w="9"/><text x="49.2754%" y="607.50"></text></g><g><title>sd-core`tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (3 samples, 0.01%)</title><rect x="49.0692%" y="597" width="0.0131%" height="15" fill="rgb(208,13,10)" fg:x="11203" fg:w="3"/><text x="49.3192%" y="607.50"></text></g><g><title>sd-core`tokio::runtime::task::harness::can_read_output (3 samples, 0.01%)</title><rect x="49.0692%" y="581" width="0.0131%" height="15" fill="rgb(212,200,36)" fg:x="11203" fg:w="3"/><text x="49.3192%" y="591.50"></text></g><g><title>sd-core`&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.08%)</title><rect x="49.0167%" y="613" width="0.0788%" height="15" fill="rgb(225,90,30)" fg:x="11191" fg:w="18"/><text x="49.2667%" y="623.50"></text></g><g><title>sd-core`tokio::runtime::task::harness::can_read_output (3 samples, 0.01%)</title><rect x="49.0824%" y="597" width="0.0131%" height="15" fill="rgb(236,182,39)" fg:x="11206" fg:w="3"/><text x="49.3324%" y="607.50"></text></g><g><title>sd-core`DYLD-STUB$$free (4 samples, 0.02%)</title><rect x="49.0955%" y="613" width="0.0175%" height="15" fill="rgb(212,144,35)" fg:x="11209" fg:w="4"/><text x="49.3455%" y="623.50"></text></g><g><title>sd-core`alloc::str::_&lt;impl str&gt;::to_lowercase (4 samples, 0.02%)</title><rect x="49.1393%" y="613" width="0.0175%" height="15" fill="rgb(228,63,44)" fg:x="11219" fg:w="4"/><text x="49.3893%" y="623.50"></text></g><g><title>sd-core`alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.02%)</title><rect x="49.1568%" y="613" width="0.0175%" height="15" fill="rgb(228,109,6)" fg:x="11223" fg:w="4"/><text x="49.4068%" y="623.50"></text></g><g><title>sd-core`core::ptr::drop_in_place&lt;serde_json::error::Error&gt; (3 samples, 0.01%)</title><rect x="49.1744%" y="613" width="0.0131%" height="15" fill="rgb(238,117,24)" fg:x="11227" fg:w="3"/><text x="49.4244%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`close (335 samples, 1.47%)</title><rect x="49.1875%" y="597" width="1.4673%" height="15" fill="rgb(242,26,26)" fg:x="11230" fg:w="335"/><text x="49.4375%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.01%)</title><rect x="50.6548%" y="597" width="0.0131%" height="15" fill="rgb(221,92,48)" fg:x="11565" fg:w="3"/><text x="50.9048%" y="607.50"></text></g><g><title>sd-core`core::ptr::drop_in_place&lt;tokio::fs::file::File&gt; (341 samples, 1.49%)</title><rect x="49.1875%" y="613" width="1.4936%" height="15" fill="rgb(209,209,32)" fg:x="11230" fg:w="341"/><text x="49.4375%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="50.7161%" y="597" width="0.0131%" height="15" fill="rgb(221,70,22)" fg:x="11579" fg:w="3"/><text x="50.9661%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (29 samples, 0.13%)</title><rect x="50.7293%" y="597" width="0.1270%" height="15" fill="rgb(248,145,5)" fg:x="11582" fg:w="29"/><text x="50.9793%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.08%)</title><rect x="50.8607%" y="597" width="0.0832%" height="15" fill="rgb(226,116,26)" fg:x="11612" fg:w="19"/><text x="51.1107%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.03%)</title><rect x="50.9483%" y="597" width="0.0263%" height="15" fill="rgb(244,5,17)" fg:x="11632" fg:w="6"/><text x="51.1983%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (9 samples, 0.04%)</title><rect x="50.9833%" y="597" width="0.0394%" height="15" fill="rgb(252,159,33)" fg:x="11640" fg:w="9"/><text x="51.2333%" y="607.50"></text></g><g><title>sd-core`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="51.0227%" y="597" width="0.0219%" height="15" fill="rgb(206,71,0)" fg:x="11649" fg:w="5"/><text x="51.2727%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.01%)</title><rect x="51.1060%" y="485" width="0.0131%" height="15" fill="rgb(233,118,54)" fg:x="11668" fg:w="3"/><text x="51.3560%" y="495.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.02%)</title><rect x="51.1498%" y="469" width="0.0219%" height="15" fill="rgb(234,83,48)" fg:x="11678" fg:w="5"/><text x="51.3998%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (18 samples, 0.08%)</title><rect x="51.2198%" y="453" width="0.0788%" height="15" fill="rgb(228,3,54)" fg:x="11694" fg:w="18"/><text x="51.4698%" y="463.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (20 samples, 0.09%)</title><rect x="51.2987%" y="453" width="0.0876%" height="15" fill="rgb(226,155,13)" fg:x="11712" fg:w="20"/><text x="51.5487%" y="463.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.03%)</title><rect x="51.3556%" y="437" width="0.0307%" height="15" fill="rgb(241,28,37)" fg:x="11725" fg:w="7"/><text x="51.6056%" y="447.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (6 samples, 0.03%)</title><rect x="51.3600%" y="421" width="0.0263%" height="15" fill="rgb(233,93,10)" fg:x="11726" fg:w="6"/><text x="51.6100%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.02%)</title><rect x="51.3644%" y="405" width="0.0219%" height="15" fill="rgb(225,113,19)" fg:x="11727" fg:w="5"/><text x="51.6144%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (4 samples, 0.02%)</title><rect x="51.3688%" y="389" width="0.0175%" height="15" fill="rgb(241,2,18)" fg:x="11728" fg:w="4"/><text x="51.6188%" y="399.50"></text></g><g><title>sd-core`&lt;serde::de::OneOf as core::fmt::Display&gt;::fmt (64 samples, 0.28%)</title><rect x="51.1235%" y="485" width="0.2803%" height="15" fill="rgb(228,207,21)" fg:x="11672" fg:w="64"/><text x="51.3735%" y="495.50"></text></g><g><title>sd-core`core::fmt::write (52 samples, 0.23%)</title><rect x="51.1760%" y="469" width="0.2278%" height="15" fill="rgb(213,211,35)" fg:x="11684" fg:w="52"/><text x="51.4260%" y="479.50"></text></g><g><title>sd-core`alloc::fmt::format::format_inner (77 samples, 0.34%)</title><rect x="51.0972%" y="517" width="0.3373%" height="15" fill="rgb(209,83,10)" fg:x="11666" fg:w="77"/><text x="51.3472%" y="527.50"></text></g><g><title>sd-core`core::fmt::write (77 samples, 0.34%)</title><rect x="51.0972%" y="501" width="0.3373%" height="15" fill="rgb(209,164,1)" fg:x="11666" fg:w="77"/><text x="51.3472%" y="511.50"></text></g><g><title>sd-core`core::fmt::write (5 samples, 0.02%)</title><rect x="51.4126%" y="485" width="0.0219%" height="15" fill="rgb(213,184,43)" fg:x="11738" fg:w="5"/><text x="51.6626%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.01%)</title><rect x="51.4739%" y="501" width="0.0131%" height="15" fill="rgb(231,61,34)" fg:x="11752" fg:w="3"/><text x="51.7239%" y="511.50"></text></g><g><title>sd-core`&lt;serde_json::value::de::EnumDeserializer as serde::de::EnumAccess&gt;::variant_seed (113 samples, 0.49%)</title><rect x="51.0578%" y="581" width="0.4949%" height="15" fill="rgb(235,75,3)" fg:x="11657" fg:w="113"/><text x="51.3078%" y="591.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::_::&lt;impl serde::de::Deserialize for sd_file_ext::extensions::ArchiveExtension&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (111 samples, 0.49%)</title><rect x="51.0665%" y="565" width="0.4862%" height="15" fill="rgb(220,106,47)" fg:x="11659" fg:w="111"/><text x="51.3165%" y="575.50"></text></g><g><title>sd-core`serde::de::Error::unknown_variant (111 samples, 0.49%)</title><rect x="51.0665%" y="549" width="0.4862%" height="15" fill="rgb(210,196,33)" fg:x="11659" fg:w="111"/><text x="51.3165%" y="559.50"></text></g><g><title>sd-core`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (109 samples, 0.48%)</title><rect x="51.0753%" y="533" width="0.4774%" height="15" fill="rgb(229,154,42)" fg:x="11661" fg:w="109"/><text x="51.3253%" y="543.50"></text></g><g><title>sd-core`serde_json::error::make_error (26 samples, 0.11%)</title><rect x="51.4388%" y="517" width="0.1139%" height="15" fill="rgb(228,114,26)" fg:x="11744" fg:w="26"/><text x="51.6888%" y="527.50"></text></g><g><title>sd-core`core::str::pattern::StrSearcher::new (12 samples, 0.05%)</title><rect x="51.5002%" y="501" width="0.0526%" height="15" fill="rgb(208,144,1)" fg:x="11758" fg:w="12"/><text x="51.7502%" y="511.50"></text></g><g><title>sd-core`alloc::str::_&lt;impl str&gt;::to_lowercase (4 samples, 0.02%)</title><rect x="51.5571%" y="581" width="0.0175%" height="15" fill="rgb(239,112,37)" fg:x="11771" fg:w="4"/><text x="51.8071%" y="591.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::ArchiveExtension as core::str::traits::FromStr&gt;::from_str (122 samples, 0.53%)</title><rect x="51.0446%" y="597" width="0.5344%" height="15" fill="rgb(210,96,50)" fg:x="11654" fg:w="122"/><text x="51.2946%" y="607.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.04%)</title><rect x="51.7235%" y="469" width="0.0438%" height="15" fill="rgb(222,178,2)" fg:x="11809" fg:w="10"/><text x="51.9735%" y="479.50"></text></g><g><title>sd-core`core::fmt::Formatter::pad (14 samples, 0.06%)</title><rect x="51.7673%" y="469" width="0.0613%" height="15" fill="rgb(226,74,18)" fg:x="11819" fg:w="14"/><text x="52.0173%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (47 samples, 0.21%)</title><rect x="51.9732%" y="453" width="0.2059%" height="15" fill="rgb(225,67,54)" fg:x="11866" fg:w="47"/><text x="52.2232%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="52.3105%" y="373" width="0.0131%" height="15" fill="rgb(251,92,32)" fg:x="11943" fg:w="3"/><text x="52.5605%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (11 samples, 0.05%)</title><rect x="52.3017%" y="389" width="0.0482%" height="15" fill="rgb(228,149,22)" fg:x="11941" fg:w="11"/><text x="52.5517%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.02%)</title><rect x="52.3324%" y="373" width="0.0175%" height="15" fill="rgb(243,54,13)" fg:x="11948" fg:w="4"/><text x="52.5824%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (13 samples, 0.06%)</title><rect x="52.3017%" y="405" width="0.0569%" height="15" fill="rgb(243,180,28)" fg:x="11941" fg:w="13"/><text x="52.5517%" y="415.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (42 samples, 0.18%)</title><rect x="52.1791%" y="453" width="0.1840%" height="15" fill="rgb(208,167,24)" fg:x="11913" fg:w="42"/><text x="52.4291%" y="463.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.07%)</title><rect x="52.2929%" y="437" width="0.0701%" height="15" fill="rgb(245,73,45)" fg:x="11939" fg:w="16"/><text x="52.5429%" y="447.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (14 samples, 0.06%)</title><rect x="52.3017%" y="421" width="0.0613%" height="15" fill="rgb(237,203,48)" fg:x="11941" fg:w="14"/><text x="52.5517%" y="431.50"></text></g><g><title>sd-core`DYLD-STUB$$memcpy (10 samples, 0.04%)</title><rect x="52.3630%" y="453" width="0.0438%" height="15" fill="rgb(211,197,16)" fg:x="11955" fg:w="10"/><text x="52.6130%" y="463.50"></text></g><g><title>sd-core`&lt;serde::de::OneOf as core::fmt::Display&gt;::fmt (171 samples, 0.75%)</title><rect x="51.6754%" y="485" width="0.7490%" height="15" fill="rgb(243,99,51)" fg:x="11798" fg:w="171"/><text x="51.9254%" y="495.50"></text></g><g><title>sd-core`core::fmt::write (136 samples, 0.60%)</title><rect x="51.8287%" y="469" width="0.5957%" height="15" fill="rgb(215,123,29)" fg:x="11833" fg:w="136"/><text x="52.0787%" y="479.50"></text></g><g><title>sd-core`core::fmt::Formatter::pad (3 samples, 0.01%)</title><rect x="52.4112%" y="453" width="0.0131%" height="15" fill="rgb(239,186,37)" fg:x="11966" fg:w="3"/><text x="52.6612%" y="463.50"></text></g><g><title>sd-core`alloc::fmt::format::format_inner (181 samples, 0.79%)</title><rect x="51.6447%" y="517" width="0.7928%" height="15" fill="rgb(252,136,39)" fg:x="11791" fg:w="181"/><text x="51.8947%" y="527.50"></text></g><g><title>sd-core`core::fmt::write (179 samples, 0.78%)</title><rect x="51.6535%" y="501" width="0.7840%" height="15" fill="rgb(223,213,32)" fg:x="11793" fg:w="179"/><text x="51.9035%" y="511.50"></text></g><g><title>sd-core`core::fmt::write (3 samples, 0.01%)</title><rect x="52.4243%" y="485" width="0.0131%" height="15" fill="rgb(233,115,5)" fg:x="11969" fg:w="3"/><text x="52.6743%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (6 samples, 0.03%)</title><rect x="52.5163%" y="501" width="0.0263%" height="15" fill="rgb(207,226,44)" fg:x="11990" fg:w="6"/><text x="52.7663%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (5 samples, 0.02%)</title><rect x="52.5207%" y="485" width="0.0219%" height="15" fill="rgb(208,126,0)" fg:x="11991" fg:w="5"/><text x="52.7707%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.01%)</title><rect x="52.5295%" y="469" width="0.0131%" height="15" fill="rgb(244,66,21)" fg:x="11993" fg:w="3"/><text x="52.7795%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.02%)</title><rect x="52.5426%" y="501" width="0.0175%" height="15" fill="rgb(222,97,12)" fg:x="11996" fg:w="4"/><text x="52.7926%" y="511.50"></text></g><g><title>sd-core`&lt;serde_json::value::de::EnumDeserializer as serde::de::EnumAccess&gt;::variant_seed (235 samples, 1.03%)</title><rect x="51.5965%" y="581" width="1.0293%" height="15" fill="rgb(219,213,19)" fg:x="11780" fg:w="235"/><text x="51.8465%" y="591.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::_::&lt;impl serde::de::Deserialize for sd_file_ext::extensions::AudioExtension&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (233 samples, 1.02%)</title><rect x="51.6053%" y="565" width="1.0205%" height="15" fill="rgb(252,169,30)" fg:x="11782" fg:w="233"/><text x="51.8553%" y="575.50"></text></g><g><title>sd-core`serde::de::Error::unknown_variant (226 samples, 0.99%)</title><rect x="51.6359%" y="549" width="0.9899%" height="15" fill="rgb(206,32,51)" fg:x="11789" fg:w="226"/><text x="51.8859%" y="559.50"></text></g><g><title>sd-core`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (226 samples, 0.99%)</title><rect x="51.6359%" y="533" width="0.9899%" height="15" fill="rgb(250,172,42)" fg:x="11789" fg:w="226"/><text x="51.8859%" y="543.50"></text></g><g><title>sd-core`serde_json::error::make_error (43 samples, 0.19%)</title><rect x="52.4375%" y="517" width="0.1883%" height="15" fill="rgb(209,34,43)" fg:x="11972" fg:w="43"/><text x="52.6875%" y="527.50"></text></g><g><title>sd-core`core::str::pattern::StrSearcher::new (13 samples, 0.06%)</title><rect x="52.5689%" y="501" width="0.0569%" height="15" fill="rgb(223,11,35)" fg:x="12002" fg:w="13"/><text x="52.8189%" y="511.50"></text></g><g><title>sd-core`alloc::str::_&lt;impl str&gt;::to_lowercase (4 samples, 0.02%)</title><rect x="52.6258%" y="581" width="0.0175%" height="15" fill="rgb(251,219,26)" fg:x="12015" fg:w="4"/><text x="52.8758%" y="591.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::AudioExtension as core::str::traits::FromStr&gt;::from_str (244 samples, 1.07%)</title><rect x="51.5790%" y="597" width="1.0687%" height="15" fill="rgb(231,119,3)" fg:x="11776" fg:w="244"/><text x="51.8290%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="52.6828%" y="517" width="0.0131%" height="15" fill="rgb(216,97,11)" fg:x="12028" fg:w="3"/><text x="52.9328%" y="527.50"></text></g><g><title>sd-core`&lt;serde::de::OneOf as core::fmt::Display&gt;::fmt (3 samples, 0.01%)</title><rect x="52.7090%" y="501" width="0.0131%" height="15" fill="rgb(223,59,9)" fg:x="12034" fg:w="3"/><text x="52.9590%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.07%)</title><rect x="52.8098%" y="453" width="0.0657%" height="15" fill="rgb(233,93,31)" fg:x="12057" fg:w="15"/><text x="53.0598%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.01%)</title><rect x="52.8974%" y="373" width="0.0131%" height="15" fill="rgb(239,81,33)" fg:x="12077" fg:w="3"/><text x="53.1474%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.01%)</title><rect x="52.8974%" y="357" width="0.0131%" height="15" fill="rgb(213,120,34)" fg:x="12077" fg:w="3"/><text x="53.1474%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (4 samples, 0.02%)</title><rect x="52.8974%" y="389" width="0.0175%" height="15" fill="rgb(243,49,53)" fg:x="12077" fg:w="4"/><text x="53.1474%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (6 samples, 0.03%)</title><rect x="52.8930%" y="405" width="0.0263%" height="15" fill="rgb(247,216,33)" fg:x="12076" fg:w="6"/><text x="53.1430%" y="415.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (11 samples, 0.05%)</title><rect x="52.8755%" y="453" width="0.0482%" height="15" fill="rgb(226,26,14)" fg:x="12072" fg:w="11"/><text x="53.1255%" y="463.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.04%)</title><rect x="52.8886%" y="437" width="0.0350%" height="15" fill="rgb(215,49,53)" fg:x="12075" fg:w="8"/><text x="53.1386%" y="447.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (7 samples, 0.03%)</title><rect x="52.8930%" y="421" width="0.0307%" height="15" fill="rgb(245,162,40)" fg:x="12076" fg:w="7"/><text x="53.1430%" y="431.50"></text></g><g><title>sd-core`&lt;serde::de::OneOf as core::fmt::Display&gt;::fmt (44 samples, 0.19%)</title><rect x="52.7441%" y="485" width="0.1927%" height="15" fill="rgb(229,68,17)" fg:x="12042" fg:w="44"/><text x="52.9941%" y="495.50"></text></g><g><title>sd-core`core::fmt::write (33 samples, 0.14%)</title><rect x="52.7923%" y="469" width="0.1445%" height="15" fill="rgb(213,182,10)" fg:x="12053" fg:w="33"/><text x="53.0423%" y="479.50"></text></g><g><title>sd-core`alloc::fmt::format::format_inner (57 samples, 0.25%)</title><rect x="52.7003%" y="517" width="0.2497%" height="15" fill="rgb(245,125,30)" fg:x="12032" fg:w="57"/><text x="52.9503%" y="527.50"></text></g><g><title>sd-core`core::fmt::write (52 samples, 0.23%)</title><rect x="52.7222%" y="501" width="0.2278%" height="15" fill="rgb(232,202,2)" fg:x="12037" fg:w="52"/><text x="52.9722%" y="511.50"></text></g><g><title>sd-core`core::fmt::write (3 samples, 0.01%)</title><rect x="52.9368%" y="485" width="0.0131%" height="15" fill="rgb(237,140,51)" fg:x="12086" fg:w="3"/><text x="53.1868%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (6 samples, 0.03%)</title><rect x="52.9718%" y="501" width="0.0263%" height="15" fill="rgb(236,157,25)" fg:x="12094" fg:w="6"/><text x="53.2218%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (4 samples, 0.02%)</title><rect x="52.9806%" y="485" width="0.0175%" height="15" fill="rgb(219,209,0)" fg:x="12096" fg:w="4"/><text x="53.2306%" y="495.50"></text></g><g><title>sd-core`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (85 samples, 0.37%)</title><rect x="52.6740%" y="533" width="0.3723%" height="15" fill="rgb(240,116,54)" fg:x="12026" fg:w="85"/><text x="52.9240%" y="543.50"></text></g><g><title>sd-core`serde_json::error::make_error (22 samples, 0.10%)</title><rect x="52.9499%" y="517" width="0.0964%" height="15" fill="rgb(216,10,36)" fg:x="12089" fg:w="22"/><text x="53.1999%" y="527.50"></text></g><g><title>sd-core`core::str::pattern::StrSearcher::new (10 samples, 0.04%)</title><rect x="53.0025%" y="501" width="0.0438%" height="15" fill="rgb(222,72,44)" fg:x="12101" fg:w="10"/><text x="53.2525%" y="511.50"></text></g><g><title>sd-core`&lt;serde_json::value::de::EnumDeserializer as serde::de::EnumAccess&gt;::variant_seed (87 samples, 0.38%)</title><rect x="52.6696%" y="581" width="0.3811%" height="15" fill="rgb(232,159,9)" fg:x="12025" fg:w="87"/><text x="52.9196%" y="591.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::_::&lt;impl serde::de::Deserialize for sd_file_ext::extensions::BookExtension&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (86 samples, 0.38%)</title><rect x="52.6740%" y="565" width="0.3767%" height="15" fill="rgb(210,39,32)" fg:x="12026" fg:w="86"/><text x="52.9240%" y="575.50"></text></g><g><title>sd-core`serde::de::Error::unknown_variant (86 samples, 0.38%)</title><rect x="52.6740%" y="549" width="0.3767%" height="15" fill="rgb(216,194,45)" fg:x="12026" fg:w="86"/><text x="52.9240%" y="559.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::BookExtension as core::str::traits::FromStr&gt;::from_str (97 samples, 0.42%)</title><rect x="52.6477%" y="597" width="0.4249%" height="15" fill="rgb(218,18,35)" fg:x="12020" fg:w="97"/><text x="52.8977%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (14 samples, 0.06%)</title><rect x="53.0989%" y="565" width="0.0613%" height="15" fill="rgb(207,83,51)" fg:x="12123" fg:w="14"/><text x="53.3489%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="53.1952%" y="517" width="0.0131%" height="15" fill="rgb(225,63,43)" fg:x="12145" fg:w="3"/><text x="53.4452%" y="527.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="53.2653%" y="485" width="0.0131%" height="15" fill="rgb(207,57,36)" fg:x="12161" fg:w="3"/><text x="53.5153%" y="495.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (43 samples, 0.19%)</title><rect x="53.3660%" y="469" width="0.1883%" height="15" fill="rgb(216,99,33)" fg:x="12184" fg:w="43"/><text x="53.6160%" y="479.50"></text></g><g><title>sd-core`core::fmt::Formatter::pad (24 samples, 0.11%)</title><rect x="53.5544%" y="469" width="0.1051%" height="15" fill="rgb(225,42,16)" fg:x="12227" fg:w="24"/><text x="53.8044%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (216 samples, 0.95%)</title><rect x="54.1763%" y="453" width="0.9461%" height="15" fill="rgb(220,201,45)" fg:x="12369" fg:w="216"/><text x="54.4263%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.01%)</title><rect x="55.5385%" y="421" width="0.0131%" height="15" fill="rgb(225,33,4)" fg:x="12680" fg:w="3"/><text x="55.7885%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.03%)</title><rect x="55.5736%" y="373" width="0.0263%" height="15" fill="rgb(224,33,50)" fg:x="12688" fg:w="6"/><text x="55.8236%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.03%)</title><rect x="55.6217%" y="357" width="0.0307%" height="15" fill="rgb(246,198,51)" fg:x="12699" fg:w="7"/><text x="55.8717%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.04%)</title><rect x="55.6524%" y="357" width="0.0350%" height="15" fill="rgb(205,22,4)" fg:x="12706" fg:w="8"/><text x="55.9024%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.03%)</title><rect x="55.6568%" y="341" width="0.0307%" height="15" fill="rgb(206,3,8)" fg:x="12707" fg:w="7"/><text x="55.9068%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.03%)</title><rect x="55.6612%" y="325" width="0.0263%" height="15" fill="rgb(251,23,15)" fg:x="12708" fg:w="6"/><text x="55.9112%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (19 samples, 0.08%)</title><rect x="55.6086%" y="373" width="0.0832%" height="15" fill="rgb(252,88,28)" fg:x="12696" fg:w="19"/><text x="55.8586%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.02%)</title><rect x="55.6962%" y="357" width="0.0175%" height="15" fill="rgb(212,127,14)" fg:x="12716" fg:w="4"/><text x="55.9462%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.02%)</title><rect x="55.6962%" y="341" width="0.0175%" height="15" fill="rgb(247,145,37)" fg:x="12716" fg:w="4"/><text x="55.9462%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.01%)</title><rect x="55.7006%" y="325" width="0.0131%" height="15" fill="rgb(209,117,53)" fg:x="12717" fg:w="3"/><text x="55.9506%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.01%)</title><rect x="55.7137%" y="357" width="0.0131%" height="15" fill="rgb(212,90,42)" fg:x="12720" fg:w="3"/><text x="55.9637%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.01%)</title><rect x="55.7137%" y="341" width="0.0131%" height="15" fill="rgb(218,164,37)" fg:x="12720" fg:w="3"/><text x="55.9637%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (8 samples, 0.04%)</title><rect x="55.7312%" y="357" width="0.0350%" height="15" fill="rgb(246,65,34)" fg:x="12724" fg:w="8"/><text x="55.9812%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.02%)</title><rect x="55.7444%" y="341" width="0.0219%" height="15" fill="rgb(231,100,33)" fg:x="12727" fg:w="5"/><text x="55.9944%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (17 samples, 0.07%)</title><rect x="55.6962%" y="373" width="0.0745%" height="15" fill="rgb(228,126,14)" fg:x="12716" fg:w="17"/><text x="55.9462%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (54 samples, 0.24%)</title><rect x="55.5692%" y="389" width="0.2365%" height="15" fill="rgb(215,173,21)" fg:x="12687" fg:w="54"/><text x="55.8192%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.04%)</title><rect x="55.7707%" y="373" width="0.0350%" height="15" fill="rgb(210,6,40)" fg:x="12733" fg:w="8"/><text x="56.0207%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (4 samples, 0.02%)</title><rect x="55.8145%" y="389" width="0.0175%" height="15" fill="rgb(212,48,18)" fg:x="12743" fg:w="4"/><text x="56.0645%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (64 samples, 0.28%)</title><rect x="55.5560%" y="405" width="0.2803%" height="15" fill="rgb(230,214,11)" fg:x="12684" fg:w="64"/><text x="55.8060%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="55.8364%" y="405" width="0.0131%" height="15" fill="rgb(254,105,39)" fg:x="12748" fg:w="3"/><text x="56.0864%" y="415.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (73 samples, 0.32%)</title><rect x="55.5341%" y="437" width="0.3197%" height="15" fill="rgb(245,158,5)" fg:x="12679" fg:w="73"/><text x="55.7841%" y="447.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (69 samples, 0.30%)</title><rect x="55.5517%" y="421" width="0.3022%" height="15" fill="rgb(249,208,11)" fg:x="12683" fg:w="69"/><text x="55.8017%" y="431.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (170 samples, 0.74%)</title><rect x="55.1224%" y="453" width="0.7446%" height="15" fill="rgb(210,39,28)" fg:x="12585" fg:w="170"/><text x="55.3724%" y="463.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="55.8539%" y="437" width="0.0131%" height="15" fill="rgb(211,56,53)" fg:x="12752" fg:w="3"/><text x="56.1039%" y="447.50"></text></g><g><title>sd-core`DYLD-STUB$$memcpy (39 samples, 0.17%)</title><rect x="55.8670%" y="453" width="0.1708%" height="15" fill="rgb(226,201,30)" fg:x="12755" fg:w="39"/><text x="56.1170%" y="463.50"></text></g><g><title>sd-core`&lt;serde::de::OneOf as core::fmt::Display&gt;::fmt (644 samples, 2.82%)</title><rect x="53.2784%" y="485" width="2.8207%" height="15" fill="rgb(239,101,34)" fg:x="12164" fg:w="644"/><text x="53.5284%" y="495.50">sd..</text></g><g><title>sd-core`core::fmt::write (557 samples, 2.44%)</title><rect x="53.6595%" y="469" width="2.4397%" height="15" fill="rgb(226,209,5)" fg:x="12251" fg:w="557"/><text x="53.9095%" y="479.50">sd..</text></g><g><title>sd-core`core::fmt::Formatter::pad (14 samples, 0.06%)</title><rect x="56.0378%" y="453" width="0.0613%" height="15" fill="rgb(250,105,47)" fg:x="12794" fg:w="14"/><text x="56.2878%" y="463.50"></text></g><g><title>sd-core`alloc::fmt::format::format_inner (685 samples, 3.00%)</title><rect x="53.2259%" y="517" width="3.0003%" height="15" fill="rgb(230,72,3)" fg:x="12152" fg:w="685"/><text x="53.4759%" y="527.50">sd-..</text></g><g><title>sd-core`core::fmt::write (681 samples, 2.98%)</title><rect x="53.2434%" y="501" width="2.9828%" height="15" fill="rgb(232,218,39)" fg:x="12156" fg:w="681"/><text x="53.4934%" y="511.50">sd-..</text></g><g><title>sd-core`core::fmt::write (29 samples, 0.13%)</title><rect x="56.0992%" y="485" width="0.1270%" height="15" fill="rgb(248,166,6)" fg:x="12808" fg:w="29"/><text x="56.3492%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.01%)</title><rect x="56.4452%" y="485" width="0.0131%" height="15" fill="rgb(247,89,20)" fg:x="12887" fg:w="3"/><text x="56.6952%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.01%)</title><rect x="56.4452%" y="469" width="0.0131%" height="15" fill="rgb(248,130,54)" fg:x="12887" fg:w="3"/><text x="56.6952%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.01%)</title><rect x="56.4452%" y="453" width="0.0131%" height="15" fill="rgb(234,196,4)" fg:x="12887" fg:w="3"/><text x="56.6952%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.01%)</title><rect x="56.4452%" y="437" width="0.0131%" height="15" fill="rgb(250,143,31)" fg:x="12887" fg:w="3"/><text x="56.6952%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (7 samples, 0.03%)</title><rect x="56.4408%" y="501" width="0.0307%" height="15" fill="rgb(211,110,34)" fg:x="12886" fg:w="7"/><text x="56.6908%" y="511.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::_::&lt;impl serde::de::Deserialize for sd_file_ext::extensions::CodeExtension&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (771 samples, 3.38%)</title><rect x="53.1602%" y="565" width="3.3770%" height="15" fill="rgb(215,124,48)" fg:x="12137" fg:w="771"/><text x="53.4102%" y="575.50">sd-..</text></g><g><title>sd-core`serde::de::Error::unknown_variant (763 samples, 3.34%)</title><rect x="53.1952%" y="549" width="3.3419%" height="15" fill="rgb(216,46,13)" fg:x="12145" fg:w="763"/><text x="53.4452%" y="559.50">sd-..</text></g><g><title>sd-core`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (763 samples, 3.34%)</title><rect x="53.1952%" y="533" width="3.3419%" height="15" fill="rgb(205,184,25)" fg:x="12145" fg:w="763"/><text x="53.4452%" y="543.50">sd-..</text></g><g><title>sd-core`serde_json::error::make_error (70 samples, 0.31%)</title><rect x="56.2306%" y="517" width="0.3066%" height="15" fill="rgb(228,1,10)" fg:x="12838" fg:w="70"/><text x="56.4806%" y="527.50"></text></g><g><title>sd-core`core::str::pattern::StrSearcher::new (15 samples, 0.07%)</title><rect x="56.4715%" y="501" width="0.0657%" height="15" fill="rgb(213,116,27)" fg:x="12893" fg:w="15"/><text x="56.7215%" y="511.50"></text></g><g><title>sd-core`&lt;serde_json::value::de::EnumDeserializer as serde::de::EnumAccess&gt;::variant_seed (790 samples, 3.46%)</title><rect x="53.0813%" y="581" width="3.4602%" height="15" fill="rgb(241,95,50)" fg:x="12119" fg:w="790"/><text x="53.3313%" y="591.50">sd-..</text></g><g><title>sd-core`&lt;sd_file_ext::extensions::CodeExtension as core::str::traits::FromStr&gt;::from_str (793 samples, 3.47%)</title><rect x="53.0726%" y="597" width="3.4733%" height="15" fill="rgb(238,48,32)" fg:x="12117" fg:w="793"/><text x="53.3226%" y="607.50">sd-..</text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (9 samples, 0.04%)</title><rect x="56.6160%" y="469" width="0.0394%" height="15" fill="rgb(235,113,49)" fg:x="12926" fg:w="9"/><text x="56.8660%" y="479.50"></text></g><g><title>sd-core`core::fmt::Formatter::pad (3 samples, 0.01%)</title><rect x="56.6554%" y="469" width="0.0131%" height="15" fill="rgb(205,127,43)" fg:x="12935" fg:w="3"/><text x="56.9054%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (32 samples, 0.14%)</title><rect x="56.7693%" y="453" width="0.1402%" height="15" fill="rgb(250,162,2)" fg:x="12961" fg:w="32"/><text x="57.0193%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.01%)</title><rect x="57.0190%" y="357" width="0.0131%" height="15" fill="rgb(220,13,41)" fg:x="13018" fg:w="3"/><text x="57.2690%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (10 samples, 0.04%)</title><rect x="56.9927%" y="389" width="0.0438%" height="15" fill="rgb(249,221,25)" fg:x="13012" fg:w="10"/><text x="57.2427%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (6 samples, 0.03%)</title><rect x="57.0102%" y="373" width="0.0263%" height="15" fill="rgb(215,208,19)" fg:x="13016" fg:w="6"/><text x="57.2602%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (12 samples, 0.05%)</title><rect x="56.9883%" y="405" width="0.0526%" height="15" fill="rgb(236,175,2)" fg:x="13011" fg:w="12"/><text x="57.2383%" y="415.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (31 samples, 0.14%)</title><rect x="56.9095%" y="453" width="0.1358%" height="15" fill="rgb(241,52,2)" fg:x="12993" fg:w="31"/><text x="57.1595%" y="463.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.06%)</title><rect x="56.9839%" y="437" width="0.0613%" height="15" fill="rgb(248,140,14)" fg:x="13010" fg:w="14"/><text x="57.2339%" y="447.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (13 samples, 0.06%)</title><rect x="56.9883%" y="421" width="0.0569%" height="15" fill="rgb(253,22,42)" fg:x="13011" fg:w="13"/><text x="57.2383%" y="431.50"></text></g><g><title>sd-core`DYLD-STUB$$memcpy (7 samples, 0.03%)</title><rect x="57.0452%" y="453" width="0.0307%" height="15" fill="rgb(234,61,47)" fg:x="13024" fg:w="7"/><text x="57.2952%" y="463.50"></text></g><g><title>sd-core`&lt;serde::de::OneOf as core::fmt::Display&gt;::fmt (110 samples, 0.48%)</title><rect x="56.5985%" y="485" width="0.4818%" height="15" fill="rgb(208,226,15)" fg:x="12922" fg:w="110"/><text x="56.8485%" y="495.50"></text></g><g><title>sd-core`core::fmt::write (94 samples, 0.41%)</title><rect x="56.6686%" y="469" width="0.4117%" height="15" fill="rgb(217,221,4)" fg:x="12938" fg:w="94"/><text x="56.9186%" y="479.50"></text></g><g><title>sd-core`alloc::fmt::format::format_inner (121 samples, 0.53%)</title><rect x="56.5897%" y="517" width="0.5300%" height="15" fill="rgb(212,174,34)" fg:x="12920" fg:w="121"/><text x="56.8397%" y="527.50"></text></g><g><title>sd-core`core::fmt::write (119 samples, 0.52%)</title><rect x="56.5985%" y="501" width="0.5212%" height="15" fill="rgb(253,83,4)" fg:x="12922" fg:w="119"/><text x="56.8485%" y="511.50"></text></g><g><title>sd-core`core::fmt::write (9 samples, 0.04%)</title><rect x="57.0803%" y="485" width="0.0394%" height="15" fill="rgb(250,195,49)" fg:x="13032" fg:w="9"/><text x="57.3303%" y="495.50"></text></g><g><title>sd-core`&lt;serde_json::value::de::EnumDeserializer as serde::de::EnumAccess&gt;::variant_seed (161 samples, 0.71%)</title><rect x="56.5722%" y="581" width="0.7052%" height="15" fill="rgb(241,192,25)" fg:x="12916" fg:w="161"/><text x="56.8222%" y="591.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::_::&lt;impl serde::de::Deserialize for sd_file_ext::extensions::ConfigExtension&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (161 samples, 0.71%)</title><rect x="56.5722%" y="565" width="0.7052%" height="15" fill="rgb(208,124,10)" fg:x="12916" fg:w="161"/><text x="56.8222%" y="575.50"></text></g><g><title>sd-core`serde::de::Error::unknown_variant (161 samples, 0.71%)</title><rect x="56.5722%" y="549" width="0.7052%" height="15" fill="rgb(222,33,0)" fg:x="12916" fg:w="161"/><text x="56.8222%" y="559.50"></text></g><g><title>sd-core`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (160 samples, 0.70%)</title><rect x="56.5766%" y="533" width="0.7008%" height="15" fill="rgb(234,209,28)" fg:x="12917" fg:w="160"/><text x="56.8266%" y="543.50"></text></g><g><title>sd-core`serde_json::error::make_error (36 samples, 0.16%)</title><rect x="57.1197%" y="517" width="0.1577%" height="15" fill="rgb(224,11,23)" fg:x="13041" fg:w="36"/><text x="57.3697%" y="527.50"></text></g><g><title>sd-core`core::str::pattern::StrSearcher::new (13 samples, 0.06%)</title><rect x="57.2204%" y="501" width="0.0569%" height="15" fill="rgb(232,99,1)" fg:x="13064" fg:w="13"/><text x="57.4704%" y="511.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::ConfigExtension as core::str::traits::FromStr&gt;::from_str (171 samples, 0.75%)</title><rect x="56.5459%" y="597" width="0.7490%" height="15" fill="rgb(237,95,45)" fg:x="12910" fg:w="171"/><text x="56.7959%" y="607.50"></text></g><g><title>sd-core`alloc::string::String::push (3 samples, 0.01%)</title><rect x="57.2818%" y="581" width="0.0131%" height="15" fill="rgb(208,109,11)" fg:x="13078" fg:w="3"/><text x="57.5318%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.02%)</title><rect x="57.3080%" y="565" width="0.0219%" height="15" fill="rgb(216,190,48)" fg:x="13084" fg:w="5"/><text x="57.5580%" y="575.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.04%)</title><rect x="57.3956%" y="501" width="0.0350%" height="15" fill="rgb(251,171,36)" fg:x="13104" fg:w="8"/><text x="57.6456%" y="511.50"></text></g><g><title>sd-core`&lt;serde::de::OneOf as core::fmt::Display&gt;::fmt (6 samples, 0.03%)</title><rect x="57.4307%" y="501" width="0.0263%" height="15" fill="rgb(230,62,22)" fg:x="13112" fg:w="6"/><text x="57.6807%" y="511.50"></text></g><g><title>sd-core`core::fmt::Formatter::pad (4 samples, 0.02%)</title><rect x="57.4613%" y="501" width="0.0175%" height="15" fill="rgb(225,114,35)" fg:x="13119" fg:w="4"/><text x="57.7113%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.01%)</title><rect x="57.4832%" y="485" width="0.0131%" height="15" fill="rgb(215,118,42)" fg:x="13124" fg:w="3"/><text x="57.7332%" y="495.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (9 samples, 0.04%)</title><rect x="57.5270%" y="469" width="0.0394%" height="15" fill="rgb(243,119,21)" fg:x="13134" fg:w="9"/><text x="57.7770%" y="479.50"></text></g><g><title>sd-core`core::fmt::Formatter::pad (5 samples, 0.02%)</title><rect x="57.5665%" y="469" width="0.0219%" height="15" fill="rgb(252,177,53)" fg:x="13143" fg:w="5"/><text x="57.8165%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (32 samples, 0.14%)</title><rect x="57.7329%" y="453" width="0.1402%" height="15" fill="rgb(237,209,29)" fg:x="13181" fg:w="32"/><text x="57.9829%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (7 samples, 0.03%)</title><rect x="58.0088%" y="421" width="0.0307%" height="15" fill="rgb(212,65,23)" fg:x="13244" fg:w="7"/><text x="58.2588%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.01%)</title><rect x="58.0921%" y="373" width="0.0131%" height="15" fill="rgb(230,222,46)" fg:x="13263" fg:w="3"/><text x="58.3421%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.04%)</title><rect x="58.1402%" y="357" width="0.0350%" height="15" fill="rgb(215,135,32)" fg:x="13274" fg:w="8"/><text x="58.3902%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (18 samples, 0.08%)</title><rect x="58.1052%" y="373" width="0.0788%" height="15" fill="rgb(246,101,22)" fg:x="13266" fg:w="18"/><text x="58.3552%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (29 samples, 0.13%)</title><rect x="58.0789%" y="389" width="0.1270%" height="15" fill="rgb(206,107,13)" fg:x="13260" fg:w="29"/><text x="58.3289%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.02%)</title><rect x="58.1840%" y="373" width="0.0219%" height="15" fill="rgb(250,100,44)" fg:x="13284" fg:w="5"/><text x="58.4340%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (3 samples, 0.01%)</title><rect x="58.2059%" y="389" width="0.0131%" height="15" fill="rgb(231,147,38)" fg:x="13289" fg:w="3"/><text x="58.4559%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (38 samples, 0.17%)</title><rect x="58.0570%" y="405" width="0.1664%" height="15" fill="rgb(229,8,40)" fg:x="13255" fg:w="38"/><text x="58.3070%" y="415.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (53 samples, 0.23%)</title><rect x="58.0088%" y="437" width="0.2321%" height="15" fill="rgb(221,135,30)" fg:x="13244" fg:w="53"/><text x="58.2588%" y="447.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (43 samples, 0.19%)</title><rect x="58.0526%" y="421" width="0.1883%" height="15" fill="rgb(249,193,18)" fg:x="13254" fg:w="43"/><text x="58.3026%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.02%)</title><rect x="58.2235%" y="405" width="0.0175%" height="15" fill="rgb(209,133,39)" fg:x="13293" fg:w="4"/><text x="58.4735%" y="415.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (87 samples, 0.38%)</title><rect x="57.8731%" y="453" width="0.3811%" height="15" fill="rgb(232,100,14)" fg:x="13213" fg:w="87"/><text x="58.1231%" y="463.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="58.2410%" y="437" width="0.0131%" height="15" fill="rgb(224,185,1)" fg:x="13297" fg:w="3"/><text x="58.4910%" y="447.50"></text></g><g><title>sd-core`DYLD-STUB$$memcpy (11 samples, 0.05%)</title><rect x="58.2541%" y="453" width="0.0482%" height="15" fill="rgb(223,139,8)" fg:x="13300" fg:w="11"/><text x="58.5041%" y="463.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="58.3023%" y="453" width="0.0175%" height="15" fill="rgb(232,213,38)" fg:x="13311" fg:w="4"/><text x="58.5523%" y="463.50"></text></g><g><title>sd-core`&lt;serde::de::OneOf as core::fmt::Display&gt;::fmt (190 samples, 0.83%)</title><rect x="57.4964%" y="485" width="0.8322%" height="15" fill="rgb(207,94,22)" fg:x="13127" fg:w="190"/><text x="57.7464%" y="495.50"></text></g><g><title>sd-core`core::fmt::write (169 samples, 0.74%)</title><rect x="57.5884%" y="469" width="0.7402%" height="15" fill="rgb(219,183,54)" fg:x="13148" fg:w="169"/><text x="57.8384%" y="479.50"></text></g><g><title>sd-core`alloc::fmt::format::format_inner (233 samples, 1.02%)</title><rect x="57.3781%" y="517" width="1.0205%" height="15" fill="rgb(216,185,54)" fg:x="13100" fg:w="233"/><text x="57.6281%" y="527.50"></text></g><g><title>sd-core`core::fmt::write (210 samples, 0.92%)</title><rect x="57.4789%" y="501" width="0.9198%" height="15" fill="rgb(254,217,39)" fg:x="13123" fg:w="210"/><text x="57.7289%" y="511.50"></text></g><g><title>sd-core`core::fmt::write (13 samples, 0.06%)</title><rect x="58.3417%" y="485" width="0.0569%" height="15" fill="rgb(240,178,23)" fg:x="13320" fg:w="13"/><text x="58.5917%" y="495.50"></text></g><g><title>sd-core`core::fmt::write (4 samples, 0.02%)</title><rect x="58.3987%" y="517" width="0.0175%" height="15" fill="rgb(218,11,47)" fg:x="13333" fg:w="4"/><text x="58.6487%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.02%)</title><rect x="58.4775%" y="501" width="0.0219%" height="15" fill="rgb(218,51,51)" fg:x="13351" fg:w="5"/><text x="58.7275%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (4 samples, 0.02%)</title><rect x="58.4819%" y="485" width="0.0175%" height="15" fill="rgb(238,126,27)" fg:x="13352" fg:w="4"/><text x="58.7319%" y="495.50"></text></g><g><title>sd-core`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (285 samples, 1.25%)</title><rect x="57.3475%" y="533" width="1.2483%" height="15" fill="rgb(249,202,22)" fg:x="13093" fg:w="285"/><text x="57.5975%" y="543.50"></text></g><g><title>sd-core`serde_json::error::make_error (40 samples, 0.18%)</title><rect x="58.4206%" y="517" width="0.1752%" height="15" fill="rgb(254,195,49)" fg:x="13338" fg:w="40"/><text x="58.6706%" y="527.50"></text></g><g><title>sd-core`core::str::pattern::StrSearcher::new (21 samples, 0.09%)</title><rect x="58.5038%" y="501" width="0.0920%" height="15" fill="rgb(208,123,14)" fg:x="13357" fg:w="21"/><text x="58.7538%" y="511.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::_::&lt;impl serde::de::Deserialize for sd_file_ext::extensions::DocumentExtension&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (295 samples, 1.29%)</title><rect x="57.3299%" y="565" width="1.2921%" height="15" fill="rgb(224,200,8)" fg:x="13089" fg:w="295"/><text x="57.5799%" y="575.50"></text></g><g><title>sd-core`serde::de::Error::unknown_variant (292 samples, 1.28%)</title><rect x="57.3431%" y="549" width="1.2790%" height="15" fill="rgb(217,61,36)" fg:x="13092" fg:w="292"/><text x="57.5931%" y="559.50"></text></g><g><title>sd-core`serde_json::error::make_error (6 samples, 0.03%)</title><rect x="58.5958%" y="533" width="0.0263%" height="15" fill="rgb(206,35,45)" fg:x="13378" fg:w="6"/><text x="58.8458%" y="543.50"></text></g><g><title>sd-core`&lt;serde_json::value::de::EnumDeserializer as serde::de::EnumAccess&gt;::variant_seed (305 samples, 1.34%)</title><rect x="57.3037%" y="581" width="1.3359%" height="15" fill="rgb(217,65,33)" fg:x="13083" fg:w="305"/><text x="57.5537%" y="591.50"></text></g><g><title>sd-core`serde::de::Error::unknown_variant (4 samples, 0.02%)</title><rect x="58.6220%" y="565" width="0.0175%" height="15" fill="rgb(222,158,48)" fg:x="13384" fg:w="4"/><text x="58.8720%" y="575.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::DocumentExtension as core::str::traits::FromStr&gt;::from_str (310 samples, 1.36%)</title><rect x="57.2949%" y="597" width="1.3578%" height="15" fill="rgb(254,2,54)" fg:x="13081" fg:w="310"/><text x="57.5449%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.01%)</title><rect x="58.7096%" y="533" width="0.0131%" height="15" fill="rgb(250,143,38)" fg:x="13404" fg:w="3"/><text x="58.9596%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.02%)</title><rect x="58.7228%" y="533" width="0.0175%" height="15" fill="rgb(248,25,0)" fg:x="13407" fg:w="4"/><text x="58.9728%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.01%)</title><rect x="58.7534%" y="501" width="0.0131%" height="15" fill="rgb(206,152,27)" fg:x="13414" fg:w="3"/><text x="59.0034%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.03%)</title><rect x="58.8367%" y="469" width="0.0263%" height="15" fill="rgb(240,77,30)" fg:x="13433" fg:w="6"/><text x="59.0867%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (11 samples, 0.05%)</title><rect x="58.8892%" y="421" width="0.0482%" height="15" fill="rgb(231,5,3)" fg:x="13445" fg:w="11"/><text x="59.1392%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (8 samples, 0.04%)</title><rect x="58.9024%" y="405" width="0.0350%" height="15" fill="rgb(207,226,32)" fg:x="13448" fg:w="8"/><text x="59.1524%" y="415.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (18 samples, 0.08%)</title><rect x="58.8629%" y="469" width="0.0788%" height="15" fill="rgb(222,207,47)" fg:x="13439" fg:w="18"/><text x="59.1129%" y="479.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.06%)</title><rect x="58.8805%" y="453" width="0.0613%" height="15" fill="rgb(229,115,45)" fg:x="13443" fg:w="14"/><text x="59.1305%" y="463.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (12 samples, 0.05%)</title><rect x="58.8892%" y="437" width="0.0526%" height="15" fill="rgb(224,191,6)" fg:x="13445" fg:w="12"/><text x="59.1392%" y="447.50"></text></g><g><title>sd-core`&lt;serde::de::OneOf as core::fmt::Display&gt;::fmt (42 samples, 0.18%)</title><rect x="58.7753%" y="501" width="0.1840%" height="15" fill="rgb(230,227,24)" fg:x="13419" fg:w="42"/><text x="59.0253%" y="511.50"></text></g><g><title>sd-core`core::fmt::write (37 samples, 0.16%)</title><rect x="58.7972%" y="485" width="0.1621%" height="15" fill="rgb(228,80,19)" fg:x="13424" fg:w="37"/><text x="59.0472%" y="495.50"></text></g><g><title>sd-core`alloc::fmt::format::format_inner (50 samples, 0.22%)</title><rect x="58.7491%" y="533" width="0.2190%" height="15" fill="rgb(247,229,0)" fg:x="13413" fg:w="50"/><text x="58.9991%" y="543.50"></text></g><g><title>sd-core`core::fmt::write (49 samples, 0.21%)</title><rect x="58.7534%" y="517" width="0.2146%" height="15" fill="rgb(237,194,15)" fg:x="13414" fg:w="49"/><text x="59.0034%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.01%)</title><rect x="59.0206%" y="517" width="0.0131%" height="15" fill="rgb(219,203,20)" fg:x="13475" fg:w="3"/><text x="59.2706%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.01%)</title><rect x="59.0206%" y="501" width="0.0131%" height="15" fill="rgb(234,128,8)" fg:x="13475" fg:w="3"/><text x="59.2706%" y="511.50"></text></g><g><title>sd-core`&lt;serde_json::value::de::EnumDeserializer as serde::de::EnumAccess&gt;::variant_seed (94 samples, 0.41%)</title><rect x="58.6834%" y="581" width="0.4117%" height="15" fill="rgb(248,202,8)" fg:x="13398" fg:w="94"/><text x="58.9334%" y="591.50"></text></g><g><title>sd-core`serde::de::Error::unknown_variant (91 samples, 0.40%)</title><rect x="58.6965%" y="565" width="0.3986%" height="15" fill="rgb(206,104,37)" fg:x="13401" fg:w="91"/><text x="58.9465%" y="575.50"></text></g><g><title>sd-core`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (90 samples, 0.39%)</title><rect x="58.7009%" y="549" width="0.3942%" height="15" fill="rgb(223,8,27)" fg:x="13402" fg:w="90"/><text x="58.9509%" y="559.50"></text></g><g><title>sd-core`serde_json::error::make_error (29 samples, 0.13%)</title><rect x="58.9681%" y="533" width="0.1270%" height="15" fill="rgb(216,217,28)" fg:x="13463" fg:w="29"/><text x="59.2181%" y="543.50"></text></g><g><title>sd-core`core::str::pattern::StrSearcher::new (10 samples, 0.04%)</title><rect x="59.0513%" y="517" width="0.0438%" height="15" fill="rgb(249,199,1)" fg:x="13482" fg:w="10"/><text x="59.3013%" y="527.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::EncryptedExtension as core::str::traits::FromStr&gt;::from_str (104 samples, 0.46%)</title><rect x="58.6527%" y="597" width="0.4555%" height="15" fill="rgb(240,85,17)" fg:x="13391" fg:w="104"/><text x="58.9027%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="59.1345%" y="581" width="0.0131%" height="15" fill="rgb(206,108,45)" fg:x="13501" fg:w="3"/><text x="59.3845%" y="591.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.03%)</title><rect x="59.2309%" y="469" width="0.0307%" height="15" fill="rgb(245,210,41)" fg:x="13523" fg:w="7"/><text x="59.4809%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.02%)</title><rect x="59.3185%" y="453" width="0.0175%" height="15" fill="rgb(206,13,37)" fg:x="13543" fg:w="4"/><text x="59.5685%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.02%)</title><rect x="59.4017%" y="373" width="0.0175%" height="15" fill="rgb(250,61,18)" fg:x="13562" fg:w="4"/><text x="59.6517%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (8 samples, 0.04%)</title><rect x="59.3973%" y="405" width="0.0350%" height="15" fill="rgb(235,172,48)" fg:x="13561" fg:w="8"/><text x="59.6473%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (8 samples, 0.04%)</title><rect x="59.3973%" y="389" width="0.0350%" height="15" fill="rgb(249,201,17)" fg:x="13561" fg:w="8"/><text x="59.6473%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.01%)</title><rect x="59.4192%" y="373" width="0.0131%" height="15" fill="rgb(219,208,6)" fg:x="13566" fg:w="3"/><text x="59.6692%" y="383.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (23 samples, 0.10%)</title><rect x="59.3360%" y="453" width="0.1007%" height="15" fill="rgb(248,31,23)" fg:x="13547" fg:w="23"/><text x="59.5860%" y="463.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.04%)</title><rect x="59.3973%" y="437" width="0.0394%" height="15" fill="rgb(245,15,42)" fg:x="13561" fg:w="9"/><text x="59.6473%" y="447.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (9 samples, 0.04%)</title><rect x="59.3973%" y="421" width="0.0394%" height="15" fill="rgb(222,217,39)" fg:x="13561" fg:w="9"/><text x="59.6473%" y="431.50"></text></g><g><title>sd-core`DYLD-STUB$$memcpy (5 samples, 0.02%)</title><rect x="59.4367%" y="453" width="0.0219%" height="15" fill="rgb(210,219,27)" fg:x="13570" fg:w="5"/><text x="59.6867%" y="463.50"></text></g><g><title>sd-core`&lt;serde::de::OneOf as core::fmt::Display&gt;::fmt (58 samples, 0.25%)</title><rect x="59.2134%" y="485" width="0.2540%" height="15" fill="rgb(252,166,36)" fg:x="13519" fg:w="58"/><text x="59.4634%" y="495.50"></text></g><g><title>sd-core`core::fmt::write (46 samples, 0.20%)</title><rect x="59.2659%" y="469" width="0.2015%" height="15" fill="rgb(245,132,34)" fg:x="13531" fg:w="46"/><text x="59.5159%" y="479.50"></text></g><g><title>sd-core`alloc::fmt::format::format_inner (73 samples, 0.32%)</title><rect x="59.1783%" y="517" width="0.3197%" height="15" fill="rgb(236,54,3)" fg:x="13511" fg:w="73"/><text x="59.4283%" y="527.50"></text></g><g><title>sd-core`core::fmt::write (70 samples, 0.31%)</title><rect x="59.1915%" y="501" width="0.3066%" height="15" fill="rgb(241,173,43)" fg:x="13514" fg:w="70"/><text x="59.4415%" y="511.50"></text></g><g><title>sd-core`core::fmt::write (6 samples, 0.03%)</title><rect x="59.4718%" y="485" width="0.0263%" height="15" fill="rgb(215,190,9)" fg:x="13578" fg:w="6"/><text x="59.7218%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.02%)</title><rect x="59.5550%" y="501" width="0.0219%" height="15" fill="rgb(242,101,16)" fg:x="13597" fg:w="5"/><text x="59.8050%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.01%)</title><rect x="59.5638%" y="485" width="0.0131%" height="15" fill="rgb(223,190,21)" fg:x="13599" fg:w="3"/><text x="59.8138%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.01%)</title><rect x="59.5638%" y="469" width="0.0131%" height="15" fill="rgb(215,228,25)" fg:x="13599" fg:w="3"/><text x="59.8138%" y="479.50"></text></g><g><title>sd-core`&lt;serde_json::value::de::EnumDeserializer as serde::de::EnumAccess&gt;::variant_seed (116 samples, 0.51%)</title><rect x="59.1477%" y="581" width="0.5081%" height="15" fill="rgb(225,36,22)" fg:x="13504" fg:w="116"/><text x="59.3977%" y="591.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::_::&lt;impl serde::de::Deserialize for sd_file_ext::extensions::ExecutableExtension&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (115 samples, 0.50%)</title><rect x="59.1520%" y="565" width="0.5037%" height="15" fill="rgb(251,106,46)" fg:x="13505" fg:w="115"/><text x="59.4020%" y="575.50"></text></g><g><title>sd-core`serde::de::Error::unknown_variant (115 samples, 0.50%)</title><rect x="59.1520%" y="549" width="0.5037%" height="15" fill="rgb(208,90,1)" fg:x="13505" fg:w="115"/><text x="59.4020%" y="559.50"></text></g><g><title>sd-core`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (115 samples, 0.50%)</title><rect x="59.1520%" y="533" width="0.5037%" height="15" fill="rgb(243,10,4)" fg:x="13505" fg:w="115"/><text x="59.4020%" y="543.50"></text></g><g><title>sd-core`serde_json::error::make_error (35 samples, 0.15%)</title><rect x="59.5024%" y="517" width="0.1533%" height="15" fill="rgb(212,137,27)" fg:x="13585" fg:w="35"/><text x="59.7524%" y="527.50"></text></g><g><title>sd-core`core::str::pattern::StrSearcher::new (15 samples, 0.07%)</title><rect x="59.5900%" y="501" width="0.0657%" height="15" fill="rgb(231,220,49)" fg:x="13605" fg:w="15"/><text x="59.8400%" y="511.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::ExecutableExtension as core::str::traits::FromStr&gt;::from_str (129 samples, 0.57%)</title><rect x="59.1082%" y="597" width="0.5650%" height="15" fill="rgb(237,96,20)" fg:x="13495" fg:w="129"/><text x="59.3582%" y="607.50"></text></g><g><title>sd-core`alloc::string::String::push (3 samples, 0.01%)</title><rect x="59.6601%" y="581" width="0.0131%" height="15" fill="rgb(239,229,30)" fg:x="13621" fg:w="3"/><text x="59.9101%" y="591.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="59.7258%" y="485" width="0.0131%" height="15" fill="rgb(219,65,33)" fg:x="13636" fg:w="3"/><text x="59.9758%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.04%)</title><rect x="59.7828%" y="453" width="0.0350%" height="15" fill="rgb(243,134,7)" fg:x="13649" fg:w="8"/><text x="60.0328%" y="463.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.03%)</title><rect x="59.8309%" y="437" width="0.0263%" height="15" fill="rgb(216,177,54)" fg:x="13660" fg:w="6"/><text x="60.0809%" y="447.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="59.8397%" y="421" width="0.0175%" height="15" fill="rgb(211,160,20)" fg:x="13662" fg:w="4"/><text x="60.0897%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (4 samples, 0.02%)</title><rect x="59.8397%" y="405" width="0.0175%" height="15" fill="rgb(239,85,39)" fg:x="13662" fg:w="4"/><text x="60.0897%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.01%)</title><rect x="59.8441%" y="389" width="0.0131%" height="15" fill="rgb(232,125,22)" fg:x="13663" fg:w="3"/><text x="60.0941%" y="399.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.04%)</title><rect x="59.8178%" y="453" width="0.0438%" height="15" fill="rgb(244,57,34)" fg:x="13657" fg:w="10"/><text x="60.0678%" y="463.50"></text></g><g><title>sd-core`&lt;serde::de::OneOf as core::fmt::Display&gt;::fmt (29 samples, 0.13%)</title><rect x="59.7390%" y="485" width="0.1270%" height="15" fill="rgb(214,203,32)" fg:x="13639" fg:w="29"/><text x="59.9890%" y="495.50"></text></g><g><title>sd-core`core::fmt::write (25 samples, 0.11%)</title><rect x="59.7565%" y="469" width="0.1095%" height="15" fill="rgb(207,58,43)" fg:x="13643" fg:w="25"/><text x="60.0065%" y="479.50"></text></g><g><title>sd-core`alloc::fmt::format::format_inner (36 samples, 0.16%)</title><rect x="59.7127%" y="517" width="0.1577%" height="15" fill="rgb(215,193,15)" fg:x="13633" fg:w="36"/><text x="59.9627%" y="527.50"></text></g><g><title>sd-core`core::fmt::write (34 samples, 0.15%)</title><rect x="59.7214%" y="501" width="0.1489%" height="15" fill="rgb(232,15,44)" fg:x="13635" fg:w="34"/><text x="59.9714%" y="511.50"></text></g><g><title>sd-core`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (63 samples, 0.28%)</title><rect x="59.6995%" y="533" width="0.2759%" height="15" fill="rgb(212,3,48)" fg:x="13630" fg:w="63"/><text x="59.9495%" y="543.50"></text></g><g><title>sd-core`serde_json::error::make_error (22 samples, 0.10%)</title><rect x="59.8791%" y="517" width="0.0964%" height="15" fill="rgb(218,128,7)" fg:x="13671" fg:w="22"/><text x="60.1291%" y="527.50"></text></g><g><title>sd-core`core::str::pattern::StrSearcher::new (15 samples, 0.07%)</title><rect x="59.9098%" y="501" width="0.0657%" height="15" fill="rgb(226,216,39)" fg:x="13678" fg:w="15"/><text x="60.1598%" y="511.50"></text></g><g><title>sd-core`&lt;serde_json::value::de::EnumDeserializer as serde::de::EnumAccess&gt;::variant_seed (68 samples, 0.30%)</title><rect x="59.6820%" y="581" width="0.2978%" height="15" fill="rgb(243,47,51)" fg:x="13626" fg:w="68"/><text x="59.9320%" y="591.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::_::&lt;impl serde::de::Deserialize for sd_file_ext::extensions::FontExtension&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (65 samples, 0.28%)</title><rect x="59.6952%" y="565" width="0.2847%" height="15" fill="rgb(241,183,40)" fg:x="13629" fg:w="65"/><text x="59.9452%" y="575.50"></text></g><g><title>sd-core`serde::de::Error::unknown_variant (64 samples, 0.28%)</title><rect x="59.6995%" y="549" width="0.2803%" height="15" fill="rgb(231,217,32)" fg:x="13630" fg:w="64"/><text x="59.9495%" y="559.50"></text></g><g><title>sd-core`alloc::str::_&lt;impl str&gt;::to_lowercase (3 samples, 0.01%)</title><rect x="59.9799%" y="581" width="0.0131%" height="15" fill="rgb(229,61,38)" fg:x="13694" fg:w="3"/><text x="60.2299%" y="591.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::FontExtension as core::str::traits::FromStr&gt;::from_str (74 samples, 0.32%)</title><rect x="59.6733%" y="597" width="0.3241%" height="15" fill="rgb(225,210,5)" fg:x="13624" fg:w="74"/><text x="59.9233%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="60.0061%" y="581" width="0.0131%" height="15" fill="rgb(231,79,45)" fg:x="13700" fg:w="3"/><text x="60.2561%" y="591.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (14 samples, 0.06%)</title><rect x="60.1375%" y="469" width="0.0613%" height="15" fill="rgb(224,100,7)" fg:x="13730" fg:w="14"/><text x="60.3875%" y="479.50"></text></g><g><title>sd-core`core::fmt::Formatter::pad (6 samples, 0.03%)</title><rect x="60.1989%" y="469" width="0.0263%" height="15" fill="rgb(241,198,18)" fg:x="13744" fg:w="6"/><text x="60.4489%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (65 samples, 0.28%)</title><rect x="60.4091%" y="453" width="0.2847%" height="15" fill="rgb(252,97,53)" fg:x="13792" fg:w="65"/><text x="60.6591%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.02%)</title><rect x="60.8690%" y="373" width="0.0175%" height="15" fill="rgb(220,88,7)" fg:x="13897" fg:w="4"/><text x="61.1190%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.01%)</title><rect x="60.8865%" y="373" width="0.0131%" height="15" fill="rgb(213,176,14)" fg:x="13901" fg:w="3"/><text x="61.1365%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.02%)</title><rect x="60.9172%" y="357" width="0.0219%" height="15" fill="rgb(246,73,7)" fg:x="13908" fg:w="5"/><text x="61.1672%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.04%)</title><rect x="60.9391%" y="357" width="0.0438%" height="15" fill="rgb(245,64,36)" fg:x="13913" fg:w="10"/><text x="61.1891%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.03%)</title><rect x="60.9522%" y="341" width="0.0307%" height="15" fill="rgb(245,80,10)" fg:x="13916" fg:w="7"/><text x="61.2022%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.03%)</title><rect x="60.9522%" y="325" width="0.0307%" height="15" fill="rgb(232,107,50)" fg:x="13916" fg:w="7"/><text x="61.2022%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.01%)</title><rect x="60.9697%" y="309" width="0.0131%" height="15" fill="rgb(253,3,0)" fg:x="13920" fg:w="3"/><text x="61.2197%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (20 samples, 0.09%)</title><rect x="60.8997%" y="373" width="0.0876%" height="15" fill="rgb(212,99,53)" fg:x="13904" fg:w="20"/><text x="61.1497%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (33 samples, 0.14%)</title><rect x="60.8559%" y="405" width="0.1445%" height="15" fill="rgb(249,111,54)" fg:x="13894" fg:w="33"/><text x="61.1059%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (31 samples, 0.14%)</title><rect x="60.8646%" y="389" width="0.1358%" height="15" fill="rgb(249,55,30)" fg:x="13896" fg:w="31"/><text x="61.1146%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.01%)</title><rect x="60.9873%" y="373" width="0.0131%" height="15" fill="rgb(237,47,42)" fg:x="13924" fg:w="3"/><text x="61.2373%" y="383.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (75 samples, 0.33%)</title><rect x="60.6938%" y="453" width="0.3285%" height="15" fill="rgb(211,20,18)" fg:x="13857" fg:w="75"/><text x="60.9438%" y="463.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (39 samples, 0.17%)</title><rect x="60.8515%" y="437" width="0.1708%" height="15" fill="rgb(231,203,46)" fg:x="13893" fg:w="39"/><text x="61.1015%" y="447.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (38 samples, 0.17%)</title><rect x="60.8559%" y="421" width="0.1664%" height="15" fill="rgb(237,142,3)" fg:x="13894" fg:w="38"/><text x="61.1059%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.02%)</title><rect x="61.0004%" y="405" width="0.0219%" height="15" fill="rgb(241,107,1)" fg:x="13927" fg:w="5"/><text x="61.2504%" y="415.50"></text></g><g><title>sd-core`DYLD-STUB$$memcpy (23 samples, 0.10%)</title><rect x="61.0223%" y="453" width="0.1007%" height="15" fill="rgb(229,83,13)" fg:x="13932" fg:w="23"/><text x="61.2723%" y="463.50"></text></g><g><title>sd-core`&lt;serde::de::OneOf as core::fmt::Display&gt;::fmt (240 samples, 1.05%)</title><rect x="60.0937%" y="485" width="1.0512%" height="15" fill="rgb(241,91,40)" fg:x="13720" fg:w="240"/><text x="60.3437%" y="495.50"></text></g><g><title>sd-core`core::fmt::write (210 samples, 0.92%)</title><rect x="60.2251%" y="469" width="0.9198%" height="15" fill="rgb(225,3,45)" fg:x="13750" fg:w="210"/><text x="60.4751%" y="479.50"></text></g><g><title>sd-core`core::fmt::Formatter::pad (4 samples, 0.02%)</title><rect x="61.1274%" y="453" width="0.0175%" height="15" fill="rgb(244,223,14)" fg:x="13956" fg:w="4"/><text x="61.3774%" y="463.50"></text></g><g><title>sd-core`alloc::fmt::format::format_inner (262 samples, 1.15%)</title><rect x="60.0631%" y="517" width="1.1476%" height="15" fill="rgb(224,124,37)" fg:x="13713" fg:w="262"/><text x="60.3131%" y="527.50"></text></g><g><title>sd-core`core::fmt::write (259 samples, 1.13%)</title><rect x="60.0762%" y="501" width="1.1344%" height="15" fill="rgb(251,171,30)" fg:x="13716" fg:w="259"/><text x="60.3262%" y="511.50"></text></g><g><title>sd-core`core::fmt::write (14 samples, 0.06%)</title><rect x="61.1493%" y="485" width="0.0613%" height="15" fill="rgb(236,46,54)" fg:x="13961" fg:w="14"/><text x="61.3993%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (5 samples, 0.02%)</title><rect x="61.2982%" y="485" width="0.0219%" height="15" fill="rgb(245,213,5)" fg:x="13995" fg:w="5"/><text x="61.5482%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (11 samples, 0.05%)</title><rect x="61.2939%" y="501" width="0.0482%" height="15" fill="rgb(230,144,27)" fg:x="13994" fg:w="11"/><text x="61.5439%" y="511.50"></text></g><g><title>sd-core`&lt;serde_json::value::de::EnumDeserializer as serde::de::EnumAccess&gt;::variant_seed (316 samples, 1.38%)</title><rect x="60.0237%" y="581" width="1.3841%" height="15" fill="rgb(220,86,6)" fg:x="13704" fg:w="316"/><text x="60.2737%" y="591.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::_::&lt;impl serde::de::Deserialize for sd_file_ext::extensions::ImageExtension&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (315 samples, 1.38%)</title><rect x="60.0280%" y="565" width="1.3797%" height="15" fill="rgb(240,20,13)" fg:x="13705" fg:w="315"/><text x="60.2780%" y="575.50"></text></g><g><title>sd-core`serde::de::Error::unknown_variant (311 samples, 1.36%)</title><rect x="60.0456%" y="549" width="1.3622%" height="15" fill="rgb(217,89,34)" fg:x="13709" fg:w="311"/><text x="60.2956%" y="559.50"></text></g><g><title>sd-core`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (310 samples, 1.36%)</title><rect x="60.0499%" y="533" width="1.3578%" height="15" fill="rgb(229,13,5)" fg:x="13710" fg:w="310"/><text x="60.2999%" y="543.50"></text></g><g><title>sd-core`serde_json::error::make_error (45 samples, 0.20%)</title><rect x="61.2106%" y="517" width="0.1971%" height="15" fill="rgb(244,67,35)" fg:x="13975" fg:w="45"/><text x="61.4606%" y="527.50"></text></g><g><title>sd-core`core::str::pattern::StrSearcher::new (14 samples, 0.06%)</title><rect x="61.3464%" y="501" width="0.0613%" height="15" fill="rgb(221,40,2)" fg:x="14006" fg:w="14"/><text x="61.5964%" y="511.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::ImageExtension as core::str::traits::FromStr&gt;::from_str (325 samples, 1.42%)</title><rect x="59.9974%" y="597" width="1.4235%" height="15" fill="rgb(237,157,21)" fg:x="13698" fg:w="325"/><text x="60.2474%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.01%)</title><rect x="61.4340%" y="565" width="0.0131%" height="15" fill="rgb(222,94,11)" fg:x="14026" fg:w="3"/><text x="61.6840%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.02%)</title><rect x="61.4734%" y="517" width="0.0175%" height="15" fill="rgb(249,113,6)" fg:x="14035" fg:w="4"/><text x="61.7234%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.05%)</title><rect x="61.5698%" y="453" width="0.0526%" height="15" fill="rgb(238,137,36)" fg:x="14057" fg:w="12"/><text x="61.8198%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (4 samples, 0.02%)</title><rect x="61.6881%" y="405" width="0.0175%" height="15" fill="rgb(210,102,26)" fg:x="14084" fg:w="4"/><text x="61.9381%" y="415.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (20 samples, 0.09%)</title><rect x="61.6224%" y="453" width="0.0876%" height="15" fill="rgb(218,30,30)" fg:x="14069" fg:w="20"/><text x="61.8724%" y="463.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.03%)</title><rect x="61.6837%" y="437" width="0.0263%" height="15" fill="rgb(214,67,26)" fg:x="14083" fg:w="6"/><text x="61.9337%" y="447.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="61.6881%" y="421" width="0.0219%" height="15" fill="rgb(251,9,53)" fg:x="14084" fg:w="5"/><text x="61.9381%" y="431.50"></text></g><g><title>sd-core`&lt;serde::de::OneOf as core::fmt::Display&gt;::fmt (45 samples, 0.20%)</title><rect x="61.5260%" y="485" width="0.1971%" height="15" fill="rgb(228,204,25)" fg:x="14047" fg:w="45"/><text x="61.7760%" y="495.50"></text></g><g><title>sd-core`core::fmt::write (39 samples, 0.17%)</title><rect x="61.5523%" y="469" width="0.1708%" height="15" fill="rgb(207,153,8)" fg:x="14053" fg:w="39"/><text x="61.8023%" y="479.50"></text></g><g><title>sd-core`core::fmt::Formatter::pad (3 samples, 0.01%)</title><rect x="61.7100%" y="453" width="0.0131%" height="15" fill="rgb(242,9,16)" fg:x="14089" fg:w="3"/><text x="61.9600%" y="463.50"></text></g><g><title>sd-core`alloc::fmt::format::format_inner (56 samples, 0.25%)</title><rect x="61.4953%" y="517" width="0.2453%" height="15" fill="rgb(217,211,10)" fg:x="14040" fg:w="56"/><text x="61.7453%" y="527.50"></text></g><g><title>sd-core`core::fmt::write (53 samples, 0.23%)</title><rect x="61.5085%" y="501" width="0.2321%" height="15" fill="rgb(219,228,52)" fg:x="14043" fg:w="53"/><text x="61.7585%" y="511.50"></text></g><g><title>sd-core`core::fmt::write (4 samples, 0.02%)</title><rect x="61.7231%" y="485" width="0.0175%" height="15" fill="rgb(231,92,29)" fg:x="14092" fg:w="4"/><text x="61.9731%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.02%)</title><rect x="61.7713%" y="501" width="0.0175%" height="15" fill="rgb(232,8,23)" fg:x="14103" fg:w="4"/><text x="62.0213%" y="511.50"></text></g><g><title>sd-core`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (81 samples, 0.35%)</title><rect x="61.4691%" y="533" width="0.3548%" height="15" fill="rgb(216,211,34)" fg:x="14034" fg:w="81"/><text x="61.7191%" y="543.50"></text></g><g><title>sd-core`serde_json::error::make_error (18 samples, 0.08%)</title><rect x="61.7450%" y="517" width="0.0788%" height="15" fill="rgb(236,151,0)" fg:x="14097" fg:w="18"/><text x="61.9950%" y="527.50"></text></g><g><title>sd-core`core::str::pattern::StrSearcher::new (7 samples, 0.03%)</title><rect x="61.7932%" y="501" width="0.0307%" height="15" fill="rgb(209,168,3)" fg:x="14108" fg:w="7"/><text x="62.0432%" y="511.50"></text></g><g><title>sd-core`&lt;serde_json::value::de::EnumDeserializer as serde::de::EnumAccess&gt;::variant_seed (90 samples, 0.39%)</title><rect x="61.4340%" y="581" width="0.3942%" height="15" fill="rgb(208,129,28)" fg:x="14026" fg:w="90"/><text x="61.6840%" y="591.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::_::&lt;impl serde::de::Deserialize for sd_file_ext::extensions::KeyExtension&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (87 samples, 0.38%)</title><rect x="61.4472%" y="565" width="0.3811%" height="15" fill="rgb(229,78,22)" fg:x="14029" fg:w="87"/><text x="61.6972%" y="575.50"></text></g><g><title>sd-core`serde::de::Error::unknown_variant (84 samples, 0.37%)</title><rect x="61.4603%" y="549" width="0.3679%" height="15" fill="rgb(228,187,13)" fg:x="14032" fg:w="84"/><text x="61.7103%" y="559.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::KeyExtension as core::str::traits::FromStr&gt;::from_str (97 samples, 0.42%)</title><rect x="61.4209%" y="597" width="0.4249%" height="15" fill="rgb(240,119,24)" fg:x="14023" fg:w="97"/><text x="61.6709%" y="607.50"></text></g><g><title>sd-core`&lt;serde_json::value::de::EnumDeserializer as serde::de::EnumAccess&gt;::variant_seed (3 samples, 0.01%)</title><rect x="61.8676%" y="581" width="0.0131%" height="15" fill="rgb(209,194,42)" fg:x="14125" fg:w="3"/><text x="62.1176%" y="591.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::TextExtension as core::str::traits::FromStr&gt;::from_str (12 samples, 0.05%)</title><rect x="61.8457%" y="597" width="0.0526%" height="15" fill="rgb(247,200,46)" fg:x="14120" fg:w="12"/><text x="62.0957%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="61.8983%" y="581" width="0.0131%" height="15" fill="rgb(218,76,16)" fg:x="14132" fg:w="3"/><text x="62.1483%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (10 samples, 0.04%)</title><rect x="61.9333%" y="565" width="0.0438%" height="15" fill="rgb(225,21,48)" fg:x="14140" fg:w="10"/><text x="62.1833%" y="575.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (14 samples, 0.06%)</title><rect x="62.0910%" y="469" width="0.0613%" height="15" fill="rgb(239,223,50)" fg:x="14176" fg:w="14"/><text x="62.3410%" y="479.50"></text></g><g><title>sd-core`core::fmt::Formatter::pad (10 samples, 0.04%)</title><rect x="62.1523%" y="469" width="0.0438%" height="15" fill="rgb(244,45,21)" fg:x="14190" fg:w="10"/><text x="62.4023%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (83 samples, 0.36%)</title><rect x="62.3976%" y="453" width="0.3635%" height="15" fill="rgb(232,33,43)" fg:x="14246" fg:w="83"/><text x="62.6476%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.01%)</title><rect x="62.9539%" y="421" width="0.0131%" height="15" fill="rgb(209,8,3)" fg:x="14373" fg:w="3"/><text x="63.2039%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.01%)</title><rect x="63.0064%" y="357" width="0.0131%" height="15" fill="rgb(214,25,53)" fg:x="14385" fg:w="3"/><text x="63.2564%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="63.0240%" y="325" width="0.0131%" height="15" fill="rgb(254,186,54)" fg:x="14389" fg:w="3"/><text x="63.2740%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.09%)</title><rect x="63.0196%" y="357" width="0.0920%" height="15" fill="rgb(208,174,49)" fg:x="14388" fg:w="21"/><text x="63.2696%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.09%)</title><rect x="63.0240%" y="341" width="0.0876%" height="15" fill="rgb(233,191,51)" fg:x="14389" fg:w="20"/><text x="63.2740%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (17 samples, 0.07%)</title><rect x="63.0371%" y="325" width="0.0745%" height="15" fill="rgb(222,134,10)" fg:x="14392" fg:w="17"/><text x="63.2871%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.02%)</title><rect x="63.0897%" y="309" width="0.0219%" height="15" fill="rgb(230,226,20)" fg:x="14404" fg:w="5"/><text x="63.3397%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (30 samples, 0.13%)</title><rect x="62.9933%" y="373" width="0.1314%" height="15" fill="rgb(251,111,25)" fg:x="14382" fg:w="30"/><text x="63.2433%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.01%)</title><rect x="63.1116%" y="357" width="0.0131%" height="15" fill="rgb(224,40,46)" fg:x="14409" fg:w="3"/><text x="63.3616%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (38 samples, 0.17%)</title><rect x="62.9802%" y="389" width="0.1664%" height="15" fill="rgb(236,108,47)" fg:x="14379" fg:w="38"/><text x="63.2302%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.01%)</title><rect x="63.1335%" y="373" width="0.0131%" height="15" fill="rgb(234,93,0)" fg:x="14414" fg:w="3"/><text x="63.3835%" y="383.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (90 samples, 0.39%)</title><rect x="62.7612%" y="453" width="0.3942%" height="15" fill="rgb(224,213,32)" fg:x="14329" fg:w="90"/><text x="63.0112%" y="463.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (47 samples, 0.21%)</title><rect x="62.9495%" y="437" width="0.2059%" height="15" fill="rgb(251,11,48)" fg:x="14372" fg:w="47"/><text x="63.1995%" y="447.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (42 samples, 0.18%)</title><rect x="62.9714%" y="421" width="0.1840%" height="15" fill="rgb(236,173,5)" fg:x="14377" fg:w="42"/><text x="63.2214%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (41 samples, 0.18%)</title><rect x="62.9758%" y="405" width="0.1796%" height="15" fill="rgb(230,95,12)" fg:x="14378" fg:w="41"/><text x="63.2258%" y="415.50"></text></g><g><title>sd-core`DYLD-STUB$$memcpy (13 samples, 0.06%)</title><rect x="63.1554%" y="453" width="0.0569%" height="15" fill="rgb(232,209,1)" fg:x="14419" fg:w="13"/><text x="63.4054%" y="463.50"></text></g><g><title>sd-core`&lt;serde::de::OneOf as core::fmt::Display&gt;::fmt (277 samples, 1.21%)</title><rect x="62.0385%" y="485" width="1.2133%" height="15" fill="rgb(232,6,1)" fg:x="14164" fg:w="277"/><text x="62.2885%" y="495.50"></text></g><g><title>sd-core`core::fmt::write (241 samples, 1.06%)</title><rect x="62.1961%" y="469" width="1.0556%" height="15" fill="rgb(210,224,50)" fg:x="14200" fg:w="241"/><text x="62.4461%" y="479.50"></text></g><g><title>sd-core`core::fmt::Formatter::pad (8 samples, 0.04%)</title><rect x="63.2167%" y="453" width="0.0350%" height="15" fill="rgb(228,127,35)" fg:x="14433" fg:w="8"/><text x="63.4667%" y="463.50"></text></g><g><title>sd-core`alloc::fmt::format::format_inner (294 samples, 1.29%)</title><rect x="62.0209%" y="517" width="1.2877%" height="15" fill="rgb(245,102,45)" fg:x="14160" fg:w="294"/><text x="62.2709%" y="527.50"></text></g><g><title>sd-core`core::fmt::write (291 samples, 1.27%)</title><rect x="62.0341%" y="501" width="1.2746%" height="15" fill="rgb(214,1,49)" fg:x="14163" fg:w="291"/><text x="62.2841%" y="511.50"></text></g><g><title>sd-core`core::fmt::write (13 samples, 0.06%)</title><rect x="63.2517%" y="485" width="0.0569%" height="15" fill="rgb(226,163,40)" fg:x="14441" fg:w="13"/><text x="63.5017%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (8 samples, 0.04%)</title><rect x="63.4094%" y="485" width="0.0350%" height="15" fill="rgb(239,212,28)" fg:x="14477" fg:w="8"/><text x="63.6594%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.02%)</title><rect x="63.4225%" y="469" width="0.0219%" height="15" fill="rgb(220,20,13)" fg:x="14480" fg:w="5"/><text x="63.6725%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.01%)</title><rect x="63.4313%" y="453" width="0.0131%" height="15" fill="rgb(210,164,35)" fg:x="14482" fg:w="3"/><text x="63.6813%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (16 samples, 0.07%)</title><rect x="63.4050%" y="501" width="0.0701%" height="15" fill="rgb(248,109,41)" fg:x="14476" fg:w="16"/><text x="63.6550%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.02%)</title><rect x="63.4532%" y="485" width="0.0219%" height="15" fill="rgb(238,23,50)" fg:x="14487" fg:w="5"/><text x="63.7032%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.02%)</title><rect x="63.4576%" y="469" width="0.0175%" height="15" fill="rgb(211,48,49)" fg:x="14488" fg:w="4"/><text x="63.7076%" y="479.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::_::&lt;impl serde::de::Deserialize for sd_file_ext::extensions::VideoExtension&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (356 samples, 1.56%)</title><rect x="61.9771%" y="565" width="1.5593%" height="15" fill="rgb(223,36,21)" fg:x="14150" fg:w="356"/><text x="62.2271%" y="575.50"></text></g><g><title>sd-core`serde::de::Error::unknown_variant (353 samples, 1.55%)</title><rect x="61.9903%" y="549" width="1.5461%" height="15" fill="rgb(207,123,46)" fg:x="14153" fg:w="353"/><text x="62.2403%" y="559.50"></text></g><g><title>sd-core`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (352 samples, 1.54%)</title><rect x="61.9947%" y="533" width="1.5418%" height="15" fill="rgb(240,218,32)" fg:x="14154" fg:w="352"/><text x="62.2447%" y="543.50"></text></g><g><title>sd-core`serde_json::error::make_error (52 samples, 0.23%)</title><rect x="63.3087%" y="517" width="0.2278%" height="15" fill="rgb(252,5,43)" fg:x="14454" fg:w="52"/><text x="63.5587%" y="527.50"></text></g><g><title>sd-core`core::str::pattern::StrSearcher::new (12 samples, 0.05%)</title><rect x="63.4839%" y="501" width="0.0526%" height="15" fill="rgb(252,84,19)" fg:x="14494" fg:w="12"/><text x="63.7339%" y="511.50"></text></g><g><title>sd-core`&lt;serde_json::value::de::EnumDeserializer as serde::de::EnumAccess&gt;::variant_seed (370 samples, 1.62%)</title><rect x="61.9290%" y="581" width="1.6206%" height="15" fill="rgb(243,152,39)" fg:x="14139" fg:w="370"/><text x="62.1790%" y="591.50"></text></g><g><title>sd-core`DYLD-STUB$$memcmp (3 samples, 0.01%)</title><rect x="63.5364%" y="565" width="0.0131%" height="15" fill="rgb(234,160,15)" fg:x="14506" fg:w="3"/><text x="63.7864%" y="575.50"></text></g><g><title>sd-core`&lt;sd_file_ext::extensions::VideoExtension as core::str::traits::FromStr&gt;::from_str (383 samples, 1.68%)</title><rect x="61.8983%" y="597" width="1.6775%" height="15" fill="rgb(237,34,20)" fg:x="14132" fg:w="383"/><text x="62.1483%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.04%)</title><rect x="63.5977%" y="581" width="0.0350%" height="15" fill="rgb(229,97,13)" fg:x="14520" fg:w="8"/><text x="63.8477%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.03%)</title><rect x="63.6372%" y="549" width="0.0263%" height="15" fill="rgb(234,71,50)" fg:x="14529" fg:w="6"/><text x="63.8872%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.02%)</title><rect x="63.6678%" y="549" width="0.0175%" height="15" fill="rgb(253,155,4)" fg:x="14536" fg:w="4"/><text x="63.9178%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.01%)</title><rect x="63.7291%" y="517" width="0.0131%" height="15" fill="rgb(222,185,37)" fg:x="14550" fg:w="3"/><text x="63.9791%" y="527.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.01%)</title><rect x="63.7423%" y="517" width="0.0131%" height="15" fill="rgb(251,177,13)" fg:x="14553" fg:w="3"/><text x="63.9923%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.04%)</title><rect x="63.7861%" y="485" width="0.0438%" height="15" fill="rgb(250,179,40)" fg:x="14563" fg:w="10"/><text x="64.0361%" y="495.50"></text></g><g><title>sd-core`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.02%)</title><rect x="63.8299%" y="485" width="0.0175%" height="15" fill="rgb(242,44,2)" fg:x="14573" fg:w="4"/><text x="64.0799%" y="495.50"></text></g><g><title>sd-core`&lt;serde::de::OneOf as core::fmt::Display&gt;::fmt (24 samples, 0.11%)</title><rect x="63.7554%" y="517" width="0.1051%" height="15" fill="rgb(216,177,13)" fg:x="14556" fg:w="24"/><text x="64.0054%" y="527.50"></text></g><g><title>sd-core`core::fmt::write (21 samples, 0.09%)</title><rect x="63.7686%" y="501" width="0.0920%" height="15" fill="rgb(216,106,43)" fg:x="14559" fg:w="21"/><text x="64.0186%" y="511.50"></text></g><g><title>sd-core`DYLD-STUB$$memcpy (3 samples, 0.01%)</title><rect x="63.8474%" y="485" width="0.0131%" height="15" fill="rgb(216,183,2)" fg:x="14577" fg:w="3"/><text x="64.0974%" y="495.50"></text></g><g><title>sd-core`alloc::fmt::format::format_inner (40 samples, 0.18%)</title><rect x="63.6941%" y="549" width="0.1752%" height="15" fill="rgb(249,75,3)" fg:x="14542" fg:w="40"/><text x="63.9441%" y="559.50"></text></g><g><title>sd-core`core::fmt::write (34 samples, 0.15%)</title><rect x="63.7204%" y="533" width="0.1489%" height="15" fill="rgb(219,67,39)" fg:x="14548" fg:w="34"/><text x="63.9704%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (8 samples, 0.04%)</title><rect x="63.9306%" y="533" width="0.0350%" height="15" fill="rgb(253,228,2)" fg:x="14596" fg:w="8"/><text x="64.1806%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (7 samples, 0.03%)</title><rect x="63.9350%" y="517" width="0.0307%" height="15" fill="rgb(235,138,27)" fg:x="14597" fg:w="7"/><text x="64.1850%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.01%)</title><rect x="63.9525%" y="501" width="0.0131%" height="15" fill="rgb(236,97,51)" fg:x="14601" fg:w="3"/><text x="64.2025%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.02%)</title><rect x="63.9657%" y="533" width="0.0175%" height="15" fill="rgb(240,80,30)" fg:x="14604" fg:w="4"/><text x="64.2157%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.02%)</title><rect x="63.9832%" y="533" width="0.0219%" height="15" fill="rgb(230,178,19)" fg:x="14608" fg:w="5"/><text x="64.2332%" y="543.50"></text></g><g><title>sd-core`&lt;serde_json::value::de::EnumDeserializer as serde::de::EnumAccess&gt;::variant_seed (115 samples, 0.50%)</title><rect x="63.5758%" y="597" width="0.5037%" height="15" fill="rgb(210,190,27)" fg:x="14515" fg:w="115"/><text x="63.8258%" y="607.50"></text></g><g><title>sd-core`serde::de::Error::unknown_variant (102 samples, 0.45%)</title><rect x="63.6328%" y="581" width="0.4468%" height="15" fill="rgb(222,107,31)" fg:x="14528" fg:w="102"/><text x="63.8828%" y="591.50"></text></g><g><title>sd-core`&lt;serde_json::error::Error as serde::de::Error&gt;::custom (101 samples, 0.44%)</title><rect x="63.6372%" y="565" width="0.4424%" height="15" fill="rgb(216,127,34)" fg:x="14529" fg:w="101"/><text x="63.8872%" y="575.50"></text></g><g><title>sd-core`serde_json::error::make_error (48 samples, 0.21%)</title><rect x="63.8693%" y="549" width="0.2102%" height="15" fill="rgb(234,116,52)" fg:x="14582" fg:w="48"/><text x="64.1193%" y="559.50"></text></g><g><title>sd-core`core::str::pattern::StrSearcher::new (16 samples, 0.07%)</title><rect x="64.0095%" y="533" width="0.0701%" height="15" fill="rgb(222,124,15)" fg:x="14614" fg:w="16"/><text x="64.2595%" y="543.50"></text></g><g><title>sd-core`&lt;serde_json::value::de::VariantDeserializer as serde::de::VariantAccess&gt;::unit_variant (4 samples, 0.02%)</title><rect x="64.0795%" y="597" width="0.0175%" height="15" fill="rgb(231,179,28)" fg:x="14630" fg:w="4"/><text x="64.3295%" y="607.50"></text></g><g><title>sd-core`DYLD-STUB$$free (4 samples, 0.02%)</title><rect x="64.0971%" y="597" width="0.0175%" height="15" fill="rgb(226,93,45)" fg:x="14634" fg:w="4"/><text x="64.3471%" y="607.50"></text></g><g><title>sd-core`__rdl_alloc (3 samples, 0.01%)</title><rect x="64.1190%" y="597" width="0.0131%" height="15" fill="rgb(215,8,51)" fg:x="14639" fg:w="3"/><text x="64.3690%" y="607.50"></text></g><g><title>sd-core`alloc::str::_&lt;impl str&gt;::to_lowercase (13 samples, 0.06%)</title><rect x="64.1321%" y="597" width="0.0569%" height="15" fill="rgb(223,106,5)" fg:x="14642" fg:w="13"/><text x="64.3821%" y="607.50"></text></g><g><title>sd-core`alloc::string::String::push (3 samples, 0.01%)</title><rect x="64.1890%" y="597" width="0.0131%" height="15" fill="rgb(250,191,5)" fg:x="14655" fg:w="3"/><text x="64.4390%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (18 samples, 0.08%)</title><rect x="64.2416%" y="581" width="0.0788%" height="15" fill="rgb(242,132,44)" fg:x="14667" fg:w="18"/><text x="64.4916%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (27 samples, 0.12%)</title><rect x="64.3248%" y="581" width="0.1183%" height="15" fill="rgb(251,152,29)" fg:x="14686" fg:w="27"/><text x="64.5748%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (20 samples, 0.09%)</title><rect x="64.3555%" y="565" width="0.0876%" height="15" fill="rgb(218,179,5)" fg:x="14693" fg:w="20"/><text x="64.6055%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8 samples, 0.04%)</title><rect x="64.4080%" y="549" width="0.0350%" height="15" fill="rgb(227,67,19)" fg:x="14705" fg:w="8"/><text x="64.6580%" y="559.50"></text></g><g><title>libsystem_platform.dylib`__bzero (4 samples, 0.02%)</title><rect x="64.4475%" y="581" width="0.0175%" height="15" fill="rgb(233,119,31)" fg:x="14714" fg:w="4"/><text x="64.6975%" y="591.50"></text></g><g><title>sd-core`core::ptr::drop_in_place&lt;serde_json::error::Error&gt; (79 samples, 0.35%)</title><rect x="64.2022%" y="597" width="0.3460%" height="15" fill="rgb(241,120,22)" fg:x="14658" fg:w="79"/><text x="64.4522%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (19 samples, 0.08%)</title><rect x="64.4650%" y="581" width="0.0832%" height="15" fill="rgb(224,102,30)" fg:x="14718" fg:w="19"/><text x="64.7150%" y="591.50"></text></g><g><title>sd-core`sd_file_ext::extensions::Extension::from_str (3,170 samples, 13.88%)</title><rect x="50.6811%" y="613" width="13.8846%" height="15" fill="rgb(210,164,37)" fg:x="11571" fg:w="3170"/><text x="50.9311%" y="623.50">sd-core`sd_file_ext::..</text></g><g><title>sd-core`std::path::Path::extension (3 samples, 0.01%)</title><rect x="64.5657%" y="613" width="0.0131%" height="15" fill="rgb(226,191,16)" fg:x="14741" fg:w="3"/><text x="64.8157%" y="623.50"></text></g><g><title>sd-core`tokio::fs::file::File::from_std (10 samples, 0.04%)</title><rect x="64.5789%" y="613" width="0.0438%" height="15" fill="rgb(214,40,45)" fg:x="14744" fg:w="10"/><text x="64.8289%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (9 samples, 0.04%)</title><rect x="64.5832%" y="597" width="0.0394%" height="15" fill="rgb(244,29,26)" fg:x="14745" fg:w="9"/><text x="64.8332%" y="607.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.02%)</title><rect x="64.6314%" y="597" width="0.0175%" height="15" fill="rgb(216,16,5)" fg:x="14756" fg:w="4"/><text x="64.8814%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (3 samples, 0.01%)</title><rect x="64.6884%" y="581" width="0.0131%" height="15" fill="rgb(249,76,35)" fg:x="14769" fg:w="3"/><text x="64.9384%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (3 samples, 0.01%)</title><rect x="64.6884%" y="565" width="0.0131%" height="15" fill="rgb(207,11,44)" fg:x="14769" fg:w="3"/><text x="64.9384%" y="575.50"></text></g><g><title>sd-core`parking_lot::condvar::Condvar::notify_one_slow (5 samples, 0.02%)</title><rect x="64.7146%" y="581" width="0.0219%" height="15" fill="rgb(228,190,49)" fg:x="14775" fg:w="5"/><text x="64.9646%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (332 samples, 1.45%)</title><rect x="64.9074%" y="565" width="1.4542%" height="15" fill="rgb(214,173,12)" fg:x="14819" fg:w="332"/><text x="65.1574%" y="575.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (6 samples, 0.03%)</title><rect x="66.3659%" y="549" width="0.0263%" height="15" fill="rgb(218,26,35)" fg:x="15152" fg:w="6"/><text x="66.6159%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (6 samples, 0.03%)</title><rect x="66.3659%" y="533" width="0.0263%" height="15" fill="rgb(220,200,19)" fg:x="15152" fg:w="6"/><text x="66.6159%" y="543.50"></text></g><g><title>sd-core`parking_lot::raw_mutex::RawMutex::unlock_slow (379 samples, 1.66%)</title><rect x="64.7365%" y="581" width="1.6600%" height="15" fill="rgb(239,95,49)" fg:x="14780" fg:w="379"/><text x="64.9865%" y="591.50"></text></g><g><title>sd-core`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (7 samples, 0.03%)</title><rect x="66.3659%" y="565" width="0.0307%" height="15" fill="rgb(235,85,53)" fg:x="15152" fg:w="7"/><text x="66.6159%" y="575.50"></text></g><g><title>sd-core`tokio::runtime::blocking::pool::Spawner::spawn_task (396 samples, 1.73%)</title><rect x="64.6665%" y="597" width="1.7345%" height="15" fill="rgb(233,133,31)" fg:x="14764" fg:w="396"/><text x="64.9165%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (3 samples, 0.01%)</title><rect x="66.4185%" y="581" width="0.0131%" height="15" fill="rgb(218,25,20)" fg:x="15164" fg:w="3"/><text x="66.6685%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.03%)</title><rect x="66.4579%" y="517" width="0.0263%" height="15" fill="rgb(252,210,38)" fg:x="15173" fg:w="6"/><text x="66.7079%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.01%)</title><rect x="66.4710%" y="501" width="0.0131%" height="15" fill="rgb(242,134,21)" fg:x="15176" fg:w="3"/><text x="66.7210%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (18 samples, 0.08%)</title><rect x="66.4404%" y="549" width="0.0788%" height="15" fill="rgb(213,28,48)" fg:x="15169" fg:w="18"/><text x="66.6904%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_memalign (16 samples, 0.07%)</title><rect x="66.4491%" y="533" width="0.0701%" height="15" fill="rgb(250,196,2)" fg:x="15171" fg:w="16"/><text x="66.6991%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.04%)</title><rect x="66.4842%" y="517" width="0.0350%" height="15" fill="rgb(227,5,17)" fg:x="15179" fg:w="8"/><text x="66.7342%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.02%)</title><rect x="66.4973%" y="501" width="0.0219%" height="15" fill="rgb(221,226,24)" fg:x="15182" fg:w="5"/><text x="66.7473%" y="511.50"></text></g><g><title>sd-core`tokio::runtime::task::core::Cell&lt;T,S&gt;::new (30 samples, 0.13%)</title><rect x="66.4053%" y="597" width="0.1314%" height="15" fill="rgb(211,5,48)" fg:x="15161" fg:w="30"/><text x="66.6553%" y="607.50"></text></g><g><title>sd-core`__rdl_alloc (22 samples, 0.10%)</title><rect x="66.4404%" y="581" width="0.0964%" height="15" fill="rgb(219,150,6)" fg:x="15169" fg:w="22"/><text x="66.6904%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (22 samples, 0.10%)</title><rect x="66.4404%" y="565" width="0.0964%" height="15" fill="rgb(251,46,16)" fg:x="15169" fg:w="22"/><text x="66.6904%" y="575.50"></text></g><g><title>sd-core`tokio::runtime::blocking::pool::spawn_blocking (437 samples, 1.91%)</title><rect x="64.6270%" y="613" width="1.9141%" height="15" fill="rgb(220,204,40)" fg:x="14755" fg:w="437"/><text x="64.8770%" y="623.50">s..</text></g><g><title>libsystem_malloc.dylib`_szone_free (3 samples, 0.01%)</title><rect x="66.5761%" y="597" width="0.0131%" height="15" fill="rgb(211,85,2)" fg:x="15200" fg:w="3"/><text x="66.8261%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.11%)</title><rect x="66.5893%" y="597" width="0.1095%" height="15" fill="rgb(229,17,7)" fg:x="15203" fg:w="25"/><text x="66.8393%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.07%)</title><rect x="66.6331%" y="581" width="0.0657%" height="15" fill="rgb(239,72,28)" fg:x="15213" fg:w="15"/><text x="66.8831%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.03%)</title><rect x="66.6725%" y="565" width="0.0263%" height="15" fill="rgb(230,47,54)" fg:x="15222" fg:w="6"/><text x="66.9225%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.03%)</title><rect x="66.6988%" y="597" width="0.0263%" height="15" fill="rgb(214,50,8)" fg:x="15228" fg:w="6"/><text x="66.9488%" y="607.50"></text></g><g><title>sd-core`std::panicking::try (4 samples, 0.02%)</title><rect x="66.7294%" y="597" width="0.0175%" height="15" fill="rgb(216,198,43)" fg:x="15235" fg:w="4"/><text x="66.9794%" y="607.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.02%)</title><rect x="66.7294%" y="581" width="0.0175%" height="15" fill="rgb(234,20,35)" fg:x="15235" fg:w="4"/><text x="66.9794%" y="591.50"></text></g><g><title>sd-core`tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (60 samples, 0.26%)</title><rect x="66.5674%" y="613" width="0.2628%" height="15" fill="rgb(254,45,19)" fg:x="15198" fg:w="60"/><text x="66.8174%" y="623.50"></text></g><g><title>sd-core`tokio::runtime::task::state::State::unset_join_interested (18 samples, 0.08%)</title><rect x="66.7513%" y="597" width="0.0788%" height="15" fill="rgb(219,14,44)" fg:x="15240" fg:w="18"/><text x="67.0013%" y="607.50"></text></g><g><title>sd-core`tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (4 samples, 0.02%)</title><rect x="66.8302%" y="613" width="0.0175%" height="15" fill="rgb(217,220,26)" fg:x="15258" fg:w="4"/><text x="67.0802%" y="623.50"></text></g><g><title>sd-core`sd_file_ext::magic::_&lt;impl sd_file_ext::extensions::Extension&gt;::resolve_conflicting::_{{closure}} (4,140 samples, 18.13%)</title><rect x="48.7320%" y="629" width="18.1332%" height="15" fill="rgb(213,158,28)" fg:x="11126" fg:w="4140"/><text x="48.9820%" y="639.50">sd-core`sd_file_ext::magic::..</text></g><g><title>sd-core`tokio::runtime::task::raw::try_read_output (3 samples, 0.01%)</title><rect x="66.8521%" y="613" width="0.0131%" height="15" fill="rgb(252,51,52)" fg:x="15263" fg:w="3"/><text x="67.1021%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.01%)</title><rect x="66.8915%" y="597" width="0.0131%" height="15" fill="rgb(246,89,16)" fg:x="15272" fg:w="3"/><text x="67.1415%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.01%)</title><rect x="66.9265%" y="549" width="0.0131%" height="15" fill="rgb(216,158,49)" fg:x="15280" fg:w="3"/><text x="67.1765%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.01%)</title><rect x="66.9441%" y="533" width="0.0131%" height="15" fill="rgb(236,107,19)" fg:x="15284" fg:w="3"/><text x="67.1941%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (6 samples, 0.03%)</title><rect x="66.9397%" y="549" width="0.0263%" height="15" fill="rgb(228,185,30)" fg:x="15283" fg:w="6"/><text x="67.1897%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (11 samples, 0.05%)</title><rect x="66.9222%" y="565" width="0.0482%" height="15" fill="rgb(246,134,8)" fg:x="15279" fg:w="11"/><text x="67.1722%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (15 samples, 0.07%)</title><rect x="66.9134%" y="581" width="0.0657%" height="15" fill="rgb(214,143,50)" fg:x="15277" fg:w="15"/><text x="67.1634%" y="591.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 0.10%)</title><rect x="66.8871%" y="613" width="0.1007%" height="15" fill="rgb(228,75,8)" fg:x="15271" fg:w="23"/><text x="67.1371%" y="623.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (17 samples, 0.07%)</title><rect x="66.9134%" y="597" width="0.0745%" height="15" fill="rgb(207,175,4)" fg:x="15277" fg:w="17"/><text x="67.1634%" y="607.50"></text></g><g><title>sd-core`std::path::Path::_join (29 samples, 0.13%)</title><rect x="66.8740%" y="629" width="0.1270%" height="15" fill="rgb(205,108,24)" fg:x="15268" fg:w="29"/><text x="67.1240%" y="639.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="66.9879%" y="613" width="0.0131%" height="15" fill="rgb(244,120,49)" fg:x="15294" fg:w="3"/><text x="67.2379%" y="623.50"></text></g><g><title>sd-core`std::path::Path::extension (6 samples, 0.03%)</title><rect x="67.0098%" y="629" width="0.0263%" height="15" fill="rgb(223,47,38)" fg:x="15299" fg:w="6"/><text x="67.2598%" y="639.50"></text></g><g><title>sd-core`&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (3 samples, 0.01%)</title><rect x="67.0229%" y="613" width="0.0131%" height="15" fill="rgb(229,179,11)" fg:x="15302" fg:w="3"/><text x="67.2729%" y="623.50"></text></g><g><title>sd-core`std::path::Path::file_name (4 samples, 0.02%)</title><rect x="67.0360%" y="629" width="0.0175%" height="15" fill="rgb(231,122,1)" fg:x="15305" fg:w="4"/><text x="67.2860%" y="639.50"></text></g><g><title>sd-core`&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (3 samples, 0.01%)</title><rect x="67.0404%" y="613" width="0.0131%" height="15" fill="rgb(245,119,9)" fg:x="15306" fg:w="3"/><text x="67.2904%" y="623.50"></text></g><g><title>sd-core`std::path::Components::parse_next_component_back (3 samples, 0.01%)</title><rect x="67.0404%" y="597" width="0.0131%" height="15" fill="rgb(241,163,25)" fg:x="15306" fg:w="3"/><text x="67.2904%" y="607.50"></text></g><g><title>sd-core`&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (9 samples, 0.04%)</title><rect x="67.0711%" y="613" width="0.0394%" height="15" fill="rgb(217,214,3)" fg:x="15313" fg:w="9"/><text x="67.3211%" y="623.50"></text></g><g><title>sd-core`std::path::Components::parse_next_component_back (4 samples, 0.02%)</title><rect x="67.0930%" y="597" width="0.0175%" height="15" fill="rgb(240,86,28)" fg:x="15318" fg:w="4"/><text x="67.3430%" y="607.50"></text></g><g><title>sd-core`std::path::Path::file_stem (14 samples, 0.06%)</title><rect x="67.0536%" y="629" width="0.0613%" height="15" fill="rgb(215,47,9)" fg:x="15309" fg:w="14"/><text x="67.3036%" y="639.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mach_timebase_info (4 samples, 0.02%)</title><rect x="67.1543%" y="597" width="0.0175%" height="15" fill="rgb(252,25,45)" fg:x="15332" fg:w="4"/><text x="67.4043%" y="607.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (4 samples, 0.02%)</title><rect x="67.1718%" y="597" width="0.0175%" height="15" fill="rgb(251,164,9)" fg:x="15336" fg:w="4"/><text x="67.4218%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (30 samples, 0.13%)</title><rect x="67.1893%" y="597" width="0.1314%" height="15" fill="rgb(233,194,0)" fg:x="15340" fg:w="30"/><text x="67.4393%" y="607.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (45 samples, 0.20%)</title><rect x="67.1412%" y="613" width="0.1971%" height="15" fill="rgb(249,111,24)" fg:x="15329" fg:w="45"/><text x="67.3912%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (4 samples, 0.02%)</title><rect x="67.3207%" y="597" width="0.0175%" height="15" fill="rgb(250,223,3)" fg:x="15370" fg:w="4"/><text x="67.5707%" y="607.50"></text></g><g><title>sd-core`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (52 samples, 0.23%)</title><rect x="67.1236%" y="629" width="0.2278%" height="15" fill="rgb(236,178,37)" fg:x="15325" fg:w="52"/><text x="67.3736%" y="639.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (3 samples, 0.01%)</title><rect x="67.3383%" y="613" width="0.0131%" height="15" fill="rgb(241,158,50)" fg:x="15374" fg:w="3"/><text x="67.5883%" y="623.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (4 samples, 0.02%)</title><rect x="67.3514%" y="613" width="0.0175%" height="15" fill="rgb(213,121,41)" fg:x="15377" fg:w="4"/><text x="67.6014%" y="623.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mach_timebase_info (6 samples, 0.03%)</title><rect x="67.3864%" y="581" width="0.0263%" height="15" fill="rgb(240,92,3)" fg:x="15385" fg:w="6"/><text x="67.6364%" y="591.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (6 samples, 0.03%)</title><rect x="67.4127%" y="581" width="0.0263%" height="15" fill="rgb(205,123,3)" fg:x="15391" fg:w="6"/><text x="67.6627%" y="591.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (38 samples, 0.17%)</title><rect x="67.3821%" y="597" width="0.1664%" height="15" fill="rgb(205,97,47)" fg:x="15384" fg:w="38"/><text x="67.6321%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (25 samples, 0.11%)</title><rect x="67.4390%" y="581" width="0.1095%" height="15" fill="rgb(247,152,14)" fg:x="15397" fg:w="25"/><text x="67.6890%" y="591.50"></text></g><g><title>sd-core`std::time::Instant::elapsed (48 samples, 0.21%)</title><rect x="67.3514%" y="629" width="0.2102%" height="15" fill="rgb(248,195,53)" fg:x="15377" fg:w="48"/><text x="67.6014%" y="639.50"></text></g><g><title>sd-core`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (41 samples, 0.18%)</title><rect x="67.3821%" y="613" width="0.1796%" height="15" fill="rgb(226,201,16)" fg:x="15384" fg:w="41"/><text x="67.6321%" y="623.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (3 samples, 0.01%)</title><rect x="67.5485%" y="597" width="0.0131%" height="15" fill="rgb(205,98,0)" fg:x="15422" fg:w="3"/><text x="67.7985%" y="607.50"></text></g><g><title>sd-core`tokio::fs::file::File::from_std (4 samples, 0.02%)</title><rect x="67.5660%" y="629" width="0.0175%" height="15" fill="rgb(214,191,48)" fg:x="15426" fg:w="4"/><text x="67.8160%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (3 samples, 0.01%)</title><rect x="67.6054%" y="613" width="0.0131%" height="15" fill="rgb(237,112,39)" fg:x="15435" fg:w="3"/><text x="67.8554%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (3 samples, 0.01%)</title><rect x="67.6230%" y="613" width="0.0131%" height="15" fill="rgb(247,203,27)" fg:x="15439" fg:w="3"/><text x="67.8730%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (31 samples, 0.14%)</title><rect x="67.6361%" y="613" width="0.1358%" height="15" fill="rgb(235,124,28)" fg:x="15442" fg:w="31"/><text x="67.8861%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (22 samples, 0.10%)</title><rect x="67.6755%" y="597" width="0.0964%" height="15" fill="rgb(208,207,46)" fg:x="15451" fg:w="22"/><text x="67.9255%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.03%)</title><rect x="67.7456%" y="581" width="0.0263%" height="15" fill="rgb(234,176,4)" fg:x="15467" fg:w="6"/><text x="67.9956%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.01%)</title><rect x="67.7719%" y="613" width="0.0131%" height="15" fill="rgb(230,133,28)" fg:x="15473" fg:w="3"/><text x="68.0219%" y="623.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.04%)</title><rect x="67.8025%" y="597" width="0.0350%" height="15" fill="rgb(211,137,40)" fg:x="15480" fg:w="8"/><text x="68.0525%" y="607.50"></text></g><g><title>sd-core`&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="67.8376%" y="597" width="0.0175%" height="15" fill="rgb(254,35,13)" fg:x="15488" fg:w="4"/><text x="68.0876%" y="607.50"></text></g><g><title>sd-core`tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (9 samples, 0.04%)</title><rect x="67.8551%" y="597" width="0.0394%" height="15" fill="rgb(225,49,51)" fg:x="15492" fg:w="9"/><text x="68.1051%" y="607.50"></text></g><g><title>sd-core`&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.12%)</title><rect x="67.7850%" y="613" width="0.1183%" height="15" fill="rgb(251,10,15)" fg:x="15476" fg:w="27"/><text x="68.0350%" y="623.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.01%)</title><rect x="67.9164%" y="597" width="0.0131%" height="15" fill="rgb(228,207,15)" fg:x="15506" fg:w="3"/><text x="68.1664%" y="607.50"></text></g><g><title>sd-core`parking_lot::condvar::Condvar::notify_one_slow (3 samples, 0.01%)</title><rect x="67.9296%" y="597" width="0.0131%" height="15" fill="rgb(241,99,19)" fg:x="15509" fg:w="3"/><text x="68.1796%" y="607.50"></text></g><g><title>sd-core`parking_lot::condvar::Condvar::notify_one_slow (12 samples, 0.05%)</title><rect x="67.9734%" y="581" width="0.0526%" height="15" fill="rgb(207,104,49)" fg:x="15519" fg:w="12"/><text x="68.2234%" y="591.50"></text></g><g><title>sd-core`parking_lot_core::parking_lot::lock_bucket_pair (3 samples, 0.01%)</title><rect x="68.0128%" y="565" width="0.0131%" height="15" fill="rgb(234,99,18)" fg:x="15528" fg:w="3"/><text x="68.2628%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (357 samples, 1.56%)</title><rect x="68.1004%" y="565" width="1.5637%" height="15" fill="rgb(213,191,49)" fg:x="15548" fg:w="357"/><text x="68.3504%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (3 samples, 0.01%)</title><rect x="69.6641%" y="565" width="0.0131%" height="15" fill="rgb(210,226,19)" fg:x="15905" fg:w="3"/><text x="69.9141%" y="575.50"></text></g><g><title>sd-core`parking_lot::raw_mutex::RawMutex::unlock_slow (381 samples, 1.67%)</title><rect x="68.0259%" y="581" width="1.6688%" height="15" fill="rgb(229,97,18)" fg:x="15531" fg:w="381"/><text x="68.2759%" y="591.50"></text></g><g><title>sd-core`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.01%)</title><rect x="69.6816%" y="565" width="0.0131%" height="15" fill="rgb(211,167,15)" fg:x="15909" fg:w="3"/><text x="69.9316%" y="575.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (3 samples, 0.01%)</title><rect x="69.6816%" y="549" width="0.0131%" height="15" fill="rgb(210,169,34)" fg:x="15909" fg:w="3"/><text x="69.9316%" y="559.50"></text></g><g><title>sd-core`parking_lot_core::parking_lot::lock_bucket_pair (5 samples, 0.02%)</title><rect x="69.6947%" y="581" width="0.0219%" height="15" fill="rgb(241,121,31)" fg:x="15912" fg:w="5"/><text x="69.9447%" y="591.50"></text></g><g><title>sd-core`tokio::runtime::blocking::pool::Spawner::spawn_task (406 samples, 1.78%)</title><rect x="67.9427%" y="597" width="1.7783%" height="15" fill="rgb(232,40,11)" fg:x="15512" fg:w="406"/><text x="68.1927%" y="607.50">s..</text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.05%)</title><rect x="69.7736%" y="517" width="0.0526%" height="15" fill="rgb(205,86,26)" fg:x="15930" fg:w="12"/><text x="70.0236%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.04%)</title><rect x="69.7867%" y="501" width="0.0394%" height="15" fill="rgb(231,126,28)" fg:x="15933" fg:w="9"/><text x="70.0367%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.02%)</title><rect x="69.8042%" y="485" width="0.0219%" height="15" fill="rgb(219,221,18)" fg:x="15937" fg:w="5"/><text x="70.0542%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.05%)</title><rect x="69.8349%" y="517" width="0.0482%" height="15" fill="rgb(211,40,0)" fg:x="15944" fg:w="11"/><text x="70.0849%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.04%)</title><rect x="69.8436%" y="501" width="0.0394%" height="15" fill="rgb(239,85,43)" fg:x="15946" fg:w="9"/><text x="70.0936%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (30 samples, 0.13%)</title><rect x="69.7560%" y="549" width="0.1314%" height="15" fill="rgb(231,55,21)" fg:x="15926" fg:w="30"/><text x="70.0060%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_memalign (30 samples, 0.13%)</title><rect x="69.7560%" y="533" width="0.1314%" height="15" fill="rgb(225,184,43)" fg:x="15926" fg:w="30"/><text x="70.0060%" y="543.50"></text></g><g><title>sd-core`tokio::runtime::blocking::pool::spawn_blocking (453 samples, 1.98%)</title><rect x="67.9120%" y="613" width="1.9841%" height="15" fill="rgb(251,158,41)" fg:x="15505" fg:w="453"/><text x="68.1620%" y="623.50">s..</text></g><g><title>sd-core`tokio::runtime::task::core::Cell&lt;T,S&gt;::new (39 samples, 0.17%)</title><rect x="69.7254%" y="597" width="0.1708%" height="15" fill="rgb(234,159,37)" fg:x="15919" fg:w="39"/><text x="69.9754%" y="607.50"></text></g><g><title>sd-core`__rdl_alloc (36 samples, 0.16%)</title><rect x="69.7385%" y="581" width="0.1577%" height="15" fill="rgb(216,204,22)" fg:x="15922" fg:w="36"/><text x="69.9885%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (32 samples, 0.14%)</title><rect x="69.7560%" y="565" width="0.1402%" height="15" fill="rgb(214,17,3)" fg:x="15926" fg:w="32"/><text x="70.0060%" y="575.50"></text></g><g><title>sd-core`tokio::runtime::coop::poll_proceed (9 samples, 0.04%)</title><rect x="69.8962%" y="613" width="0.0394%" height="15" fill="rgb(212,111,17)" fg:x="15958" fg:w="9"/><text x="70.1462%" y="623.50"></text></g><g><title>sd-core`tokio::runtime::task::core::Cell&lt;T,S&gt;::new (3 samples, 0.01%)</title><rect x="69.9400%" y="613" width="0.0131%" height="15" fill="rgb(221,157,24)" fg:x="15968" fg:w="3"/><text x="70.1900%" y="623.50"></text></g><g><title>sd-core`tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (6 samples, 0.03%)</title><rect x="69.9575%" y="597" width="0.0263%" height="15" fill="rgb(252,16,13)" fg:x="15972" fg:w="6"/><text x="70.2075%" y="607.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.02%)</title><rect x="69.9619%" y="581" width="0.0219%" height="15" fill="rgb(221,62,2)" fg:x="15973" fg:w="5"/><text x="70.2119%" y="591.50"></text></g><g><title>sd-core`tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (16 samples, 0.07%)</title><rect x="69.9575%" y="613" width="0.0701%" height="15" fill="rgb(247,87,22)" fg:x="15972" fg:w="16"/><text x="70.2075%" y="623.50"></text></g><g><title>sd-core`tokio::runtime::task::state::State::unset_join_interested (8 samples, 0.04%)</title><rect x="69.9926%" y="597" width="0.0350%" height="15" fill="rgb(215,73,9)" fg:x="15980" fg:w="8"/><text x="70.2426%" y="607.50"></text></g><g><title>sd-core`tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (8 samples, 0.04%)</title><rect x="70.0276%" y="613" width="0.0350%" height="15" fill="rgb(207,175,33)" fg:x="15988" fg:w="8"/><text x="70.2776%" y="623.50"></text></g><g><title>sd-core`tokio::fs::read_dir::DirEntry::metadata::_{{closure}} (571 samples, 2.50%)</title><rect x="67.5835%" y="629" width="2.5010%" height="15" fill="rgb(243,129,54)" fg:x="15430" fg:w="571"/><text x="67.8335%" y="639.50">sd..</text></g><g><title>sd-core`tokio::runtime::task::raw::try_read_output (3 samples, 0.01%)</title><rect x="70.0714%" y="613" width="0.0131%" height="15" fill="rgb(227,119,45)" fg:x="15998" fg:w="3"/><text x="70.3214%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (8 samples, 0.04%)</title><rect x="70.1721%" y="549" width="0.0350%" height="15" fill="rgb(205,109,36)" fg:x="16021" fg:w="8"/><text x="70.4221%" y="559.50"></text></g><g><title>sd-core`tokio::runtime::blocking::pool::spawn_blocking (15 samples, 0.07%)</title><rect x="70.1459%" y="613" width="0.0657%" height="15" fill="rgb(205,6,39)" fg:x="16015" fg:w="15"/><text x="70.3959%" y="623.50"></text></g><g><title>sd-core`tokio::runtime::blocking::pool::Spawner::spawn_blocking (15 samples, 0.07%)</title><rect x="70.1459%" y="597" width="0.0657%" height="15" fill="rgb(221,32,16)" fg:x="16015" fg:w="15"/><text x="70.3959%" y="607.50"></text></g><g><title>sd-core`tokio::runtime::blocking::pool::Spawner::spawn_task (13 samples, 0.06%)</title><rect x="70.1546%" y="581" width="0.0569%" height="15" fill="rgb(228,144,50)" fg:x="16017" fg:w="13"/><text x="70.4046%" y="591.50"></text></g><g><title>sd-core`parking_lot::raw_mutex::RawMutex::unlock_slow (13 samples, 0.06%)</title><rect x="70.1546%" y="565" width="0.0569%" height="15" fill="rgb(229,201,53)" fg:x="16017" fg:w="13"/><text x="70.4046%" y="575.50"></text></g><g><title>sd-core`tokio::fs::read_dir::ReadDir::poll_next_entry (32 samples, 0.14%)</title><rect x="70.0845%" y="629" width="0.1402%" height="15" fill="rgb(249,153,27)" fg:x="16001" fg:w="32"/><text x="70.3345%" y="639.50"></text></g><g><title>sd-core`tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (5 samples, 0.02%)</title><rect x="70.2291%" y="629" width="0.0219%" height="15" fill="rgb(227,106,25)" fg:x="16034" fg:w="5"/><text x="70.4791%" y="639.50"></text></g><g><title>sd-core`sd_core::location::non_indexed::walk::_{{closure}} (15,852 samples, 69.43%)</title><rect x="0.8541%" y="645" width="69.4319%" height="15" fill="rgb(230,65,29)" fg:x="195" fg:w="15852"/><text x="1.1041%" y="655.50">sd-core`sd_core::location::non_indexed::walk::_{{closure}}</text></g><g><title>sd-core`tokio::runtime::task::state::State::drop_join_handle_fast (3 samples, 0.01%)</title><rect x="70.2729%" y="629" width="0.0131%" height="15" fill="rgb(221,57,46)" fg:x="16044" fg:w="3"/><text x="70.5229%" y="639.50"></text></g><g><title>sd-core`sd_core::location::normalize_path (3 samples, 0.01%)</title><rect x="70.2860%" y="645" width="0.0131%" height="15" fill="rgb(229,161,17)" fg:x="16047" fg:w="3"/><text x="70.5360%" y="655.50"></text></g><g><title>sd-core`sd_file_ext::magic::_&lt;impl sd_file_ext::extensions::Extension&gt;::resolve_conflicting::_{{closure}} (3 samples, 0.01%)</title><rect x="70.3035%" y="645" width="0.0131%" height="15" fill="rgb(222,213,11)" fg:x="16051" fg:w="3"/><text x="70.5535%" y="655.50"></text></g><g><title>sd-core`std::ffi::os_str::_&lt;impl core::convert::TryFrom&lt;&amp;std::ffi::os_str::OsStr&gt; for &amp;str&gt;::try_from (6 samples, 0.03%)</title><rect x="70.3167%" y="645" width="0.0263%" height="15" fill="rgb(235,35,13)" fg:x="16054" fg:w="6"/><text x="70.5667%" y="655.50"></text></g><g><title>sd-core`std::fs::Metadata::is_dir (9 samples, 0.04%)</title><rect x="70.3430%" y="645" width="0.0394%" height="15" fill="rgb(233,158,34)" fg:x="16060" fg:w="9"/><text x="70.5930%" y="655.50"></text></g><g><title>sd-core`std::time::Instant::elapsed (5 samples, 0.02%)</title><rect x="70.3999%" y="645" width="0.0219%" height="15" fill="rgb(215,151,48)" fg:x="16073" fg:w="5"/><text x="70.6499%" y="655.50"></text></g><g><title>sd-core`std::time::Instant::now (3 samples, 0.01%)</title><rect x="70.4218%" y="645" width="0.0131%" height="15" fill="rgb(229,84,14)" fg:x="16078" fg:w="3"/><text x="70.6718%" y="655.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.01%)</title><rect x="70.5225%" y="629" width="0.0131%" height="15" fill="rgb(229,68,14)" fg:x="16101" fg:w="3"/><text x="70.7725%" y="639.50"></text></g><g><title>sd-core`DYLD-STUB$$pthread_mutex_unlock (3 samples, 0.01%)</title><rect x="70.5532%" y="629" width="0.0131%" height="15" fill="rgb(243,106,26)" fg:x="16108" fg:w="3"/><text x="70.8032%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1,133 samples, 4.96%)</title><rect x="70.6364%" y="613" width="4.9626%" height="15" fill="rgb(206,45,38)" fg:x="16127" fg:w="1133"/><text x="70.8864%" y="623.50">libsys..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (3 samples, 0.01%)</title><rect x="75.6690%" y="597" width="0.0131%" height="15" fill="rgb(226,6,15)" fg:x="17276" fg:w="3"/><text x="75.9190%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (6 samples, 0.03%)</title><rect x="75.6822%" y="597" width="0.0263%" height="15" fill="rgb(232,22,54)" fg:x="17279" fg:w="6"/><text x="75.9322%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (6 samples, 0.03%)</title><rect x="75.6822%" y="581" width="0.0263%" height="15" fill="rgb(229,222,32)" fg:x="17279" fg:w="6"/><text x="75.9322%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (31 samples, 0.14%)</title><rect x="75.5990%" y="613" width="0.1358%" height="15" fill="rgb(228,62,29)" fg:x="17260" fg:w="31"/><text x="75.8490%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (4 samples, 0.02%)</title><rect x="75.7172%" y="597" width="0.0175%" height="15" fill="rgb(251,103,34)" fg:x="17287" fg:w="4"/><text x="75.9672%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (5 samples, 0.02%)</title><rect x="75.7347%" y="613" width="0.0219%" height="15" fill="rgb(233,12,30)" fg:x="17291" fg:w="5"/><text x="75.9847%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (3 samples, 0.01%)</title><rect x="75.7566%" y="613" width="0.0131%" height="15" fill="rgb(238,52,0)" fg:x="17296" fg:w="3"/><text x="76.0066%" y="623.50"></text></g><g><title>dyld`start (17,302 samples, 75.78%)</title><rect x="0.0000%" y="773" width="75.7829%" height="15" fill="rgb(223,98,5)" fg:x="0" fg:w="17302"/><text x="0.2500%" y="783.50">dyld`start</text></g><g><title>sd-core`main (17,301 samples, 75.78%)</title><rect x="0.0044%" y="757" width="75.7785%" height="15" fill="rgb(228,75,37)" fg:x="1" fg:w="17301"/><text x="0.2544%" y="767.50">sd-core`main</text></g><g><title>sd-core`std::rt::lang_start_internal (17,301 samples, 75.78%)</title><rect x="0.0044%" y="741" width="75.7785%" height="15" fill="rgb(205,115,49)" fg:x="1" fg:w="17301"/><text x="0.2544%" y="751.50">sd-core`std::rt::lang_start_internal</text></g><g><title>sd-core`std::rt::lang_start::_{{closure}} (17,301 samples, 75.78%)</title><rect x="0.0044%" y="725" width="75.7785%" height="15" fill="rgb(250,154,43)" fg:x="1" fg:w="17301"/><text x="0.2544%" y="735.50">sd-core`std::rt::lang_start::_{{closure}}</text></g><g><title>sd-core`std::sys_common::backtrace::__rust_begin_short_backtrace (17,301 samples, 75.78%)</title><rect x="0.0044%" y="709" width="75.7785%" height="15" fill="rgb(226,43,29)" fg:x="1" fg:w="17301"/><text x="0.2544%" y="719.50">sd-core`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>sd-core`sd_core::main (17,301 samples, 75.78%)</title><rect x="0.0044%" y="693" width="75.7785%" height="15" fill="rgb(249,228,39)" fg:x="1" fg:w="17301"/><text x="0.2544%" y="703.50">sd-core`sd_core::main</text></g><g><title>sd-core`tokio::runtime::context::runtime::enter_runtime (17,300 samples, 75.77%)</title><rect x="0.0088%" y="677" width="75.7742%" height="15" fill="rgb(216,79,43)" fg:x="2" fg:w="17300"/><text x="0.2588%" y="687.50">sd-core`tokio::runtime::context::runtime::enter_runtime</text></g><g><title>sd-core`tokio::runtime::park::CachedParkThread::block_on (17,288 samples, 75.72%)</title><rect x="0.0613%" y="661" width="75.7216%" height="15" fill="rgb(228,95,12)" fg:x="14" fg:w="17288"/><text x="0.3113%" y="671.50">sd-core`tokio::runtime::park::CachedParkThread::block_on</text></g><g><title>sd-core`tokio::runtime::park::Inner::park (1,218 samples, 5.33%)</title><rect x="70.4481%" y="645" width="5.3349%" height="15" fill="rgb(249,221,15)" fg:x="16084" fg:w="1218"/><text x="70.6981%" y="655.50">sd-core..</text></g><g><title>sd-core`parking_lot::condvar::Condvar::wait_until_internal (1,191 samples, 5.22%)</title><rect x="70.5663%" y="629" width="5.2166%" height="15" fill="rgb(233,34,13)" fg:x="16111" fg:w="1191"/><text x="70.8163%" y="639.50">sd-cor..</text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (3 samples, 0.01%)</title><rect x="75.7698%" y="613" width="0.0131%" height="15" fill="rgb(214,103,39)" fg:x="17299" fg:w="3"/><text x="76.0198%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (8 samples, 0.04%)</title><rect x="75.7961%" y="773" width="0.0350%" height="15" fill="rgb(251,126,39)" fg:x="17305" fg:w="8"/><text x="76.0461%" y="783.50"></text></g><g><title>sd-core`parking_lot::condvar::Condvar::wait_until_internal (3 samples, 0.01%)</title><rect x="75.8661%" y="693" width="0.0131%" height="15" fill="rgb(214,216,36)" fg:x="17321" fg:w="3"/><text x="76.1161%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (7 samples, 0.03%)</title><rect x="75.8793%" y="661" width="0.0307%" height="15" fill="rgb(220,221,8)" fg:x="17324" fg:w="7"/><text x="76.1293%" y="671.50"></text></g><g><title>sd-core`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.01%)</title><rect x="75.9231%" y="549" width="0.0131%" height="15" fill="rgb(240,216,3)" fg:x="17334" fg:w="3"/><text x="76.1731%" y="559.50"></text></g><g><title>sd-core`rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.01%)</title><rect x="75.9231%" y="533" width="0.0131%" height="15" fill="rgb(232,218,17)" fg:x="17334" fg:w="3"/><text x="76.1731%" y="543.50"></text></g><g><title>sd-core`rayon_core::registry::in_worker (3 samples, 0.01%)</title><rect x="75.9231%" y="517" width="0.0131%" height="15" fill="rgb(229,163,45)" fg:x="17334" fg:w="3"/><text x="76.1731%" y="527.50"></text></g><g><title>sd-core`rayon_core::join::join_context::_{{closure}} (3 samples, 0.01%)</title><rect x="75.9231%" y="501" width="0.0131%" height="15" fill="rgb(231,110,42)" fg:x="17334" fg:w="3"/><text x="76.1731%" y="511.50"></text></g><g><title>sd-core`rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.03%)</title><rect x="75.9143%" y="597" width="0.0263%" height="15" fill="rgb(208,170,48)" fg:x="17332" fg:w="6"/><text x="76.1643%" y="607.50"></text></g><g><title>sd-core`rayon_core::registry::in_worker (6 samples, 0.03%)</title><rect x="75.9143%" y="581" width="0.0263%" height="15" fill="rgb(239,116,25)" fg:x="17332" fg:w="6"/><text x="76.1643%" y="591.50"></text></g><g><title>sd-core`rayon_core::join::join_context::_{{closure}} (6 samples, 0.03%)</title><rect x="75.9143%" y="565" width="0.0263%" height="15" fill="rgb(219,200,50)" fg:x="17332" fg:w="6"/><text x="76.1643%" y="575.50"></text></g><g><title>sd-core`rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.04%)</title><rect x="75.9143%" y="645" width="0.0394%" height="15" fill="rgb(245,200,0)" fg:x="17332" fg:w="9"/><text x="76.1643%" y="655.50"></text></g><g><title>sd-core`rayon_core::registry::in_worker (9 samples, 0.04%)</title><rect x="75.9143%" y="629" width="0.0394%" height="15" fill="rgb(245,119,33)" fg:x="17332" fg:w="9"/><text x="76.1643%" y="639.50"></text></g><g><title>sd-core`rayon_core::join::join_context::_{{closure}} (9 samples, 0.04%)</title><rect x="75.9143%" y="613" width="0.0394%" height="15" fill="rgb(231,125,12)" fg:x="17332" fg:w="9"/><text x="76.1643%" y="623.50"></text></g><g><title>sd-core`rayon_core::registry::ThreadBuilder::run (19 samples, 0.08%)</title><rect x="75.8793%" y="693" width="0.0832%" height="15" fill="rgb(216,96,41)" fg:x="17324" fg:w="19"/><text x="76.1293%" y="703.50"></text></g><g><title>sd-core`rayon_core::registry::WorkerThread::wait_until_cold (19 samples, 0.08%)</title><rect x="75.8793%" y="677" width="0.0832%" height="15" fill="rgb(248,43,45)" fg:x="17324" fg:w="19"/><text x="76.1293%" y="687.50"></text></g><g><title>sd-core`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (11 samples, 0.05%)</title><rect x="75.9143%" y="661" width="0.0482%" height="15" fill="rgb(217,222,7)" fg:x="17332" fg:w="11"/><text x="76.1643%" y="671.50"></text></g><g><title>sd-core`DYLD-STUB$$pthread_mutex_unlock (4 samples, 0.02%)</title><rect x="76.0632%" y="677" width="0.0175%" height="15" fill="rgb(233,28,6)" fg:x="17366" fg:w="4"/><text x="76.3132%" y="687.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (8 samples, 0.04%)</title><rect x="76.1903%" y="661" width="0.0350%" height="15" fill="rgb(231,218,15)" fg:x="17395" fg:w="8"/><text x="76.4403%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (8 samples, 0.04%)</title><rect x="76.1903%" y="645" width="0.0350%" height="15" fill="rgb(226,171,48)" fg:x="17395" fg:w="8"/><text x="76.4403%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__gettimeofday (255 samples, 1.12%)</title><rect x="76.2253%" y="661" width="1.1169%" height="15" fill="rgb(235,201,9)" fg:x="17403" fg:w="255"/><text x="76.4753%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1,197 samples, 5.24%)</title><rect x="77.3422%" y="661" width="5.2429%" height="15" fill="rgb(217,80,15)" fg:x="17658" fg:w="1197"/><text x="77.5922%" y="671.50">libsys..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (6 samples, 0.03%)</title><rect x="82.6508%" y="645" width="0.0263%" height="15" fill="rgb(219,152,8)" fg:x="18870" fg:w="6"/><text x="82.9008%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (6 samples, 0.03%)</title><rect x="82.6508%" y="629" width="0.0263%" height="15" fill="rgb(243,107,38)" fg:x="18870" fg:w="6"/><text x="82.9008%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (24 samples, 0.11%)</title><rect x="82.5851%" y="661" width="0.1051%" height="15" fill="rgb(231,17,5)" fg:x="18855" fg:w="24"/><text x="82.8351%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (6 samples, 0.03%)</title><rect x="82.6902%" y="661" width="0.0263%" height="15" fill="rgb(209,25,54)" fg:x="18879" fg:w="6"/><text x="82.9402%" y="671.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (29 samples, 0.13%)</title><rect x="82.7296%" y="645" width="0.1270%" height="15" fill="rgb(219,0,2)" fg:x="18888" fg:w="29"/><text x="82.9796%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (29 samples, 0.13%)</title><rect x="82.7296%" y="629" width="0.1270%" height="15" fill="rgb(246,9,5)" fg:x="18888" fg:w="29"/><text x="82.9796%" y="639.50"></text></g><g><title>sd-core`parking_lot::condvar::Condvar::wait_until_internal (1,549 samples, 6.78%)</title><rect x="76.0808%" y="677" width="6.7846%" height="15" fill="rgb(226,159,4)" fg:x="17370" fg:w="1549"/><text x="76.3308%" y="687.50">sd-core`p..</text></g><g><title>sd-core`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (31 samples, 0.14%)</title><rect x="82.7296%" y="661" width="0.1358%" height="15" fill="rgb(219,175,34)" fg:x="18888" fg:w="31"/><text x="82.9796%" y="671.50"></text></g><g><title>sd-core`std::panicking::try (3 samples, 0.01%)</title><rect x="82.8654%" y="677" width="0.0131%" height="15" fill="rgb(236,10,46)" fg:x="18919" fg:w="3"/><text x="83.1154%" y="687.50"></text></g><g><title>sd-core`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (17 samples, 0.07%)</title><rect x="82.8785%" y="677" width="0.0745%" height="15" fill="rgb(240,211,16)" fg:x="18922" fg:w="17"/><text x="83.1285%" y="687.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (17 samples, 0.07%)</title><rect x="82.8785%" y="661" width="0.0745%" height="15" fill="rgb(205,3,43)" fg:x="18922" fg:w="17"/><text x="83.1285%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (12 samples, 0.05%)</title><rect x="82.9004%" y="645" width="0.0526%" height="15" fill="rgb(245,7,22)" fg:x="18927" fg:w="12"/><text x="83.1504%" y="655.50"></text></g><g><title>sd-core`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (3 samples, 0.01%)</title><rect x="82.9530%" y="677" width="0.0131%" height="15" fill="rgb(239,132,32)" fg:x="18939" fg:w="3"/><text x="83.2030%" y="687.50"></text></g><g><title>sd-core`tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (4 samples, 0.02%)</title><rect x="82.9661%" y="677" width="0.0175%" height="15" fill="rgb(228,202,34)" fg:x="18942" fg:w="4"/><text x="83.2161%" y="687.50"></text></g><g><title>sd-core`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.03%)</title><rect x="83.0406%" y="661" width="0.0263%" height="15" fill="rgb(254,200,22)" fg:x="18959" fg:w="6"/><text x="83.2906%" y="671.50"></text></g><g><title>sd-core`core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;tokio::runtime::blocking::task::BlockingTask&lt;tokio::fs::file::File::open&lt;&amp;&amp;std::path::Path&gt;::{{closure}}::{{closure}}&gt;&gt;&gt; (9 samples, 0.04%)</title><rect x="83.0756%" y="661" width="0.0394%" height="15" fill="rgb(219,10,39)" fg:x="18967" fg:w="9"/><text x="83.3256%" y="671.50"></text></g><g><title>sd-core`parking_lot::condvar::Condvar::notify_one_slow (12 samples, 0.05%)</title><rect x="83.1151%" y="661" width="0.0526%" height="15" fill="rgb(226,210,39)" fg:x="18976" fg:w="12"/><text x="83.3651%" y="671.50"></text></g><g><title>sd-core`tokio::runtime::park::wake_by_ref (3 samples, 0.01%)</title><rect x="83.1764%" y="661" width="0.0131%" height="15" fill="rgb(208,219,16)" fg:x="18990" fg:w="3"/><text x="83.4264%" y="671.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.04%)</title><rect x="83.2070%" y="645" width="0.0438%" height="15" fill="rgb(216,158,51)" fg:x="18997" fg:w="10"/><text x="83.4570%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="83.2596%" y="645" width="0.0219%" height="15" fill="rgb(233,14,44)" fg:x="19009" fg:w="5"/><text x="83.5096%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_try_free_default (3 samples, 0.01%)</title><rect x="83.2815%" y="645" width="0.0131%" height="15" fill="rgb(237,97,39)" fg:x="19014" fg:w="3"/><text x="83.5315%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (3 samples, 0.01%)</title><rect x="83.3253%" y="629" width="0.0131%" height="15" fill="rgb(218,198,43)" fg:x="19024" fg:w="3"/><text x="83.5753%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.03%)</title><rect x="83.3428%" y="629" width="0.0263%" height="15" fill="rgb(231,104,20)" fg:x="19028" fg:w="6"/><text x="83.5928%" y="639.50"></text></g><g><title>libsystem_platform.dylib`__bzero (4 samples, 0.02%)</title><rect x="83.3735%" y="629" width="0.0175%" height="15" fill="rgb(254,36,13)" fg:x="19035" fg:w="4"/><text x="83.6235%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.08%)</title><rect x="83.3910%" y="629" width="0.0832%" height="15" fill="rgb(248,14,50)" fg:x="19039" fg:w="19"/><text x="83.6410%" y="639.50"></text></g><g><title>sd-core`core::ffi::c_str::CStr::from_bytes_with_nul (4 samples, 0.02%)</title><rect x="83.4830%" y="629" width="0.0175%" height="15" fill="rgb(217,107,29)" fg:x="19060" fg:w="4"/><text x="83.7330%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`lstat (495 samples, 2.17%)</title><rect x="83.5093%" y="613" width="2.1681%" height="15" fill="rgb(251,169,33)" fg:x="19066" fg:w="495"/><text x="83.7593%" y="623.50">l..</text></g><g><title>sd-core`core::ffi::c_str::CStr::from_bytes_with_nul (8 samples, 0.04%)</title><rect x="85.6949%" y="613" width="0.0350%" height="15" fill="rgb(217,108,32)" fg:x="19565" fg:w="8"/><text x="85.9449%" y="623.50"></text></g><g><title>sd-core`std::path::Path::_join (4 samples, 0.02%)</title><rect x="85.7299%" y="613" width="0.0175%" height="15" fill="rgb(219,66,42)" fg:x="19573" fg:w="4"/><text x="85.9799%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.02%)</title><rect x="85.7518%" y="597" width="0.0219%" height="15" fill="rgb(206,180,7)" fg:x="19578" fg:w="5"/><text x="86.0018%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="85.7737%" y="597" width="0.0131%" height="15" fill="rgb(208,226,31)" fg:x="19583" fg:w="3"/><text x="86.0237%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.02%)</title><rect x="85.7869%" y="597" width="0.0175%" height="15" fill="rgb(218,26,49)" fg:x="19586" fg:w="4"/><text x="86.0369%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.02%)</title><rect x="85.8613%" y="565" width="0.0219%" height="15" fill="rgb(233,197,48)" fg:x="19603" fg:w="5"/><text x="86.1113%" y="575.50"></text></g><g><title>sd-core`__rdl_realloc (3 samples, 0.01%)</title><rect x="85.8832%" y="565" width="0.0131%" height="15" fill="rgb(252,181,51)" fg:x="19608" fg:w="3"/><text x="86.1332%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (3 samples, 0.01%)</title><rect x="85.9007%" y="517" width="0.0131%" height="15" fill="rgb(253,90,19)" fg:x="19612" fg:w="3"/><text x="86.1507%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.03%)</title><rect x="85.9358%" y="501" width="0.0307%" height="15" fill="rgb(215,171,30)" fg:x="19620" fg:w="7"/><text x="86.1858%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (18 samples, 0.08%)</title><rect x="85.9007%" y="533" width="0.0788%" height="15" fill="rgb(214,222,9)" fg:x="19612" fg:w="18"/><text x="86.1507%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (12 samples, 0.05%)</title><rect x="85.9270%" y="517" width="0.0526%" height="15" fill="rgb(223,3,22)" fg:x="19618" fg:w="12"/><text x="86.1770%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (11 samples, 0.05%)</title><rect x="85.9796%" y="533" width="0.0482%" height="15" fill="rgb(225,196,46)" fg:x="19630" fg:w="11"/><text x="86.2296%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (31 samples, 0.14%)</title><rect x="85.9007%" y="549" width="0.1358%" height="15" fill="rgb(209,110,37)" fg:x="19612" fg:w="31"/><text x="86.1507%" y="559.50"></text></g><g><title>sd-core`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (44 samples, 0.19%)</title><rect x="85.8569%" y="581" width="0.1927%" height="15" fill="rgb(249,89,12)" fg:x="19602" fg:w="44"/><text x="86.1069%" y="591.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (35 samples, 0.15%)</title><rect x="85.8964%" y="565" width="0.1533%" height="15" fill="rgb(226,27,33)" fg:x="19611" fg:w="35"/><text x="86.1464%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="86.0365%" y="549" width="0.0131%" height="15" fill="rgb(213,82,22)" fg:x="19643" fg:w="3"/><text x="86.2865%" y="559.50"></text></g><g><title>sd-core`std::fs::DirEntry::metadata (587 samples, 2.57%)</title><rect x="83.5005%" y="629" width="2.5711%" height="15" fill="rgb(248,140,0)" fg:x="19064" fg:w="587"/><text x="83.7505%" y="639.50">sd..</text></g><g><title>sd-core`std::sys::unix::fs::DirEntry::metadata (74 samples, 0.32%)</title><rect x="85.7474%" y="613" width="0.3241%" height="15" fill="rgb(228,106,3)" fg:x="19577" fg:w="74"/><text x="85.9974%" y="623.50"></text></g><g><title>sd-core`std::path::Path::_join (53 samples, 0.23%)</title><rect x="85.8394%" y="597" width="0.2321%" height="15" fill="rgb(209,23,37)" fg:x="19598" fg:w="53"/><text x="86.0894%" y="607.50"></text></g><g><title>sd-core`alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="86.0497%" y="581" width="0.0219%" height="15" fill="rgb(241,93,50)" fg:x="19646" fg:w="5"/><text x="86.2997%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`open (3 samples, 0.01%)</title><rect x="86.0716%" y="613" width="0.0131%" height="15" fill="rgb(253,46,43)" fg:x="19651" fg:w="3"/><text x="86.3216%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__open (1,693 samples, 7.42%)</title><rect x="86.1066%" y="597" width="7.4154%" height="15" fill="rgb(226,206,43)" fg:x="19659" fg:w="1693"/><text x="86.3566%" y="607.50">libsystem_..</text></g><g><title>sd-core`std::fs::OpenOptions::_open (1,702 samples, 7.45%)</title><rect x="86.0716%" y="629" width="7.4548%" height="15" fill="rgb(217,54,7)" fg:x="19651" fg:w="1702"/><text x="86.3216%" y="639.50">sd-core`st..</text></g><g><title>sd-core`std::sys::unix::fs::File::open_c (1,698 samples, 7.44%)</title><rect x="86.0891%" y="613" width="7.4373%" height="15" fill="rgb(223,5,52)" fg:x="19655" fg:w="1698"/><text x="86.3391%" y="623.50">sd-core`st..</text></g><g><title>sd-core`std::sys::unix::fs::DirEntry::metadata (4 samples, 0.02%)</title><rect x="93.5263%" y="629" width="0.0175%" height="15" fill="rgb(206,52,46)" fg:x="21353" fg:w="4"/><text x="93.7763%" y="639.50"></text></g><g><title>sd-core`std::sys::unix::fs::readdir (3 samples, 0.01%)</title><rect x="93.5526%" y="629" width="0.0131%" height="15" fill="rgb(253,136,11)" fg:x="21359" fg:w="3"/><text x="93.8026%" y="639.50"></text></g><g><title>libsystem_c.dylib`__opendir2 (3 samples, 0.01%)</title><rect x="93.5526%" y="613" width="0.0131%" height="15" fill="rgb(208,106,33)" fg:x="21359" fg:w="3"/><text x="93.8026%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (3 samples, 0.01%)</title><rect x="93.5526%" y="597" width="0.0131%" height="15" fill="rgb(206,54,4)" fg:x="21359" fg:w="3"/><text x="93.8026%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (3 samples, 0.01%)</title><rect x="93.6271%" y="565" width="0.0131%" height="15" fill="rgb(213,3,15)" fg:x="21376" fg:w="3"/><text x="93.8771%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.04%)</title><rect x="93.6052%" y="613" width="0.0438%" height="15" fill="rgb(252,211,39)" fg:x="21371" fg:w="10"/><text x="93.8552%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (9 samples, 0.04%)</title><rect x="93.6096%" y="597" width="0.0394%" height="15" fill="rgb(223,6,36)" fg:x="21372" fg:w="9"/><text x="93.8596%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (7 samples, 0.03%)</title><rect x="93.6183%" y="581" width="0.0307%" height="15" fill="rgb(252,169,45)" fg:x="21374" fg:w="7"/><text x="93.8683%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.04%)</title><rect x="93.6490%" y="613" width="0.0394%" height="15" fill="rgb(212,48,26)" fg:x="21381" fg:w="9"/><text x="93.8990%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.02%)</title><rect x="93.7015%" y="597" width="0.0219%" height="15" fill="rgb(251,102,48)" fg:x="21393" fg:w="5"/><text x="93.9515%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.03%)</title><rect x="93.7234%" y="597" width="0.0263%" height="15" fill="rgb(243,208,16)" fg:x="21398" fg:w="6"/><text x="93.9734%" y="607.50"></text></g><g><title>libsystem_c.dylib`_readdir_unlocked (4 samples, 0.02%)</title><rect x="93.7672%" y="565" width="0.0175%" height="15" fill="rgb(219,96,24)" fg:x="21408" fg:w="4"/><text x="94.0172%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__getdirentries64 (141 samples, 0.62%)</title><rect x="93.7848%" y="565" width="0.6176%" height="15" fill="rgb(219,33,29)" fg:x="21412" fg:w="141"/><text x="94.0348%" y="575.50"></text></g><g><title>libsystem_c.dylib`readdir_r (147 samples, 0.64%)</title><rect x="93.7672%" y="581" width="0.6439%" height="15" fill="rgb(223,176,5)" fg:x="21408" fg:w="147"/><text x="94.0172%" y="591.50"></text></g><g><title>sd-core`&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (155 samples, 0.68%)</title><rect x="93.7497%" y="597" width="0.6789%" height="15" fill="rgb(228,140,14)" fg:x="21404" fg:w="155"/><text x="93.9997%" y="607.50"></text></g><g><title>sd-core`&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (170 samples, 0.74%)</title><rect x="93.6884%" y="613" width="0.7446%" height="15" fill="rgb(217,179,31)" fg:x="21390" fg:w="170"/><text x="93.9384%" y="623.50"></text></g><g><title>sd-core`tokio::fs::read_dir::ReadDir::next_chunk (199 samples, 0.87%)</title><rect x="93.5658%" y="629" width="0.8716%" height="15" fill="rgb(230,9,30)" fg:x="21362" fg:w="199"/><text x="93.8158%" y="639.50"></text></g><g><title>sd-core`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2,545 samples, 11.15%)</title><rect x="83.2946%" y="645" width="11.1471%" height="15" fill="rgb(230,136,20)" fg:x="19017" fg:w="2545"/><text x="83.5446%" y="655.50">sd-core`&lt;tokio::..</text></g><g><title>sd-core`std::fs::DirEntry::metadata (3 samples, 0.01%)</title><rect x="94.4549%" y="645" width="0.0131%" height="15" fill="rgb(215,210,22)" fg:x="21565" fg:w="3"/><text x="94.7049%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__getattrlist (3 samples, 0.01%)</title><rect x="94.5294%" y="341" width="0.0131%" height="15" fill="rgb(218,43,5)" fg:x="21582" fg:w="3"/><text x="94.7794%" y="351.50"></text></g><g><title>CacheDelete`volRootFromPath (5 samples, 0.02%)</title><rect x="94.5294%" y="357" width="0.0219%" height="15" fill="rgb(216,11,5)" fg:x="21582" fg:w="5"/><text x="94.7794%" y="367.50"></text></g><g><title>CacheDelete`+[CacheDeleteVolume volumeWithPath:] (6 samples, 0.03%)</title><rect x="94.5294%" y="405" width="0.0263%" height="15" fill="rgb(209,82,29)" fg:x="21582" fg:w="6"/><text x="94.7794%" y="415.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume initWithPath:] (6 samples, 0.03%)</title><rect x="94.5294%" y="389" width="0.0263%" height="15" fill="rgb(244,115,12)" fg:x="21582" fg:w="6"/><text x="94.7794%" y="399.50"></text></g><g><title>CacheDelete`_validateVolume (6 samples, 0.03%)</title><rect x="94.5294%" y="373" width="0.0263%" height="15" fill="rgb(222,82,18)" fg:x="21582" fg:w="6"/><text x="94.7794%" y="383.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume validate] (3 samples, 0.01%)</title><rect x="94.5644%" y="405" width="0.0131%" height="15" fill="rgb(249,227,8)" fg:x="21590" fg:w="3"/><text x="94.8144%" y="415.50"></text></g><g><title>CoreFoundation`CFStringGetBytes (3 samples, 0.01%)</title><rect x="94.5951%" y="181" width="0.0131%" height="15" fill="rgb(253,141,45)" fg:x="21597" fg:w="3"/><text x="94.8451%" y="191.50"></text></g><g><title>CoreFoundation`-[NSDictionary descriptionWithLocale:indent:] (6 samples, 0.03%)</title><rect x="94.5951%" y="213" width="0.0263%" height="15" fill="rgb(234,184,4)" fg:x="21597" fg:w="6"/><text x="94.8451%" y="223.50"></text></g><g><title>CoreFoundation`CFStringAppend (6 samples, 0.03%)</title><rect x="94.5951%" y="197" width="0.0263%" height="15" fill="rgb(218,194,23)" fg:x="21597" fg:w="6"/><text x="94.8451%" y="207.50"></text></g><g><title>libsystem_trace.dylib`_os_log_fmt_flatten_NSCF (7 samples, 0.03%)</title><rect x="94.5951%" y="261" width="0.0307%" height="15" fill="rgb(235,66,41)" fg:x="21597" fg:w="7"/><text x="94.8451%" y="271.50"></text></g><g><title>Foundation`_NS_os_log_callback (7 samples, 0.03%)</title><rect x="94.5951%" y="245" width="0.0307%" height="15" fill="rgb(245,217,1)" fg:x="21597" fg:w="7"/><text x="94.8451%" y="255.50"></text></g><g><title>CoreFoundation`-[NSDictionary descriptionWithLocale:indent:] (7 samples, 0.03%)</title><rect x="94.5951%" y="229" width="0.0307%" height="15" fill="rgb(229,91,1)" fg:x="21597" fg:w="7"/><text x="94.8451%" y="239.50"></text></g><g><title>CacheDelete`_logPurgeableResults (13 samples, 0.06%)</title><rect x="94.5775%" y="341" width="0.0569%" height="15" fill="rgb(207,101,30)" fg:x="21593" fg:w="13"/><text x="94.8275%" y="351.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl (9 samples, 0.04%)</title><rect x="94.5951%" y="325" width="0.0394%" height="15" fill="rgb(223,82,49)" fg:x="21597" fg:w="9"/><text x="94.8451%" y="335.50"></text></g><g><title>libsystem_trace.dylib`_os_log (9 samples, 0.04%)</title><rect x="94.5951%" y="309" width="0.0394%" height="15" fill="rgb(218,167,17)" fg:x="21597" fg:w="9"/><text x="94.8451%" y="319.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (9 samples, 0.04%)</title><rect x="94.5951%" y="293" width="0.0394%" height="15" fill="rgb(208,103,14)" fg:x="21597" fg:w="9"/><text x="94.8451%" y="303.50"></text></g><g><title>libsystem_trace.dylib`_os_log_fmt_flatten_object (9 samples, 0.04%)</title><rect x="94.5951%" y="277" width="0.0394%" height="15" fill="rgb(238,20,8)" fg:x="21597" fg:w="9"/><text x="94.8451%" y="287.50"></text></g><g><title>CacheDelete`-[CDPurgeableResultCache isStale] (3 samples, 0.01%)</title><rect x="94.6476%" y="325" width="0.0131%" height="15" fill="rgb(218,80,54)" fg:x="21609" fg:w="3"/><text x="94.8976%" y="335.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (3 samples, 0.01%)</title><rect x="94.6476%" y="309" width="0.0131%" height="15" fill="rgb(240,144,17)" fg:x="21609" fg:w="3"/><text x="94.8976%" y="319.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.01%)</title><rect x="94.6476%" y="293" width="0.0131%" height="15" fill="rgb(245,27,50)" fg:x="21609" fg:w="3"/><text x="94.8976%" y="303.50"></text></g><g><title>CacheDelete`__33-[CDPurgeableResultCache isStale]_block_invoke (3 samples, 0.01%)</title><rect x="94.6476%" y="277" width="0.0131%" height="15" fill="rgb(251,51,7)" fg:x="21609" fg:w="3"/><text x="94.8976%" y="287.50"></text></g><g><title>CacheDelete`-[CDRecentInfo isStale] (3 samples, 0.01%)</title><rect x="94.6476%" y="261" width="0.0131%" height="15" fill="rgb(245,217,29)" fg:x="21609" fg:w="3"/><text x="94.8976%" y="271.50"></text></g><g><title>CacheDelete`-[CDRecentVolumeInfo isStale] (3 samples, 0.01%)</title><rect x="94.6476%" y="245" width="0.0131%" height="15" fill="rgb(221,176,29)" fg:x="21609" fg:w="3"/><text x="94.8976%" y="255.50"></text></g><g><title>CacheDelete`validateFreespace (3 samples, 0.01%)</title><rect x="94.6476%" y="229" width="0.0131%" height="15" fill="rgb(212,180,24)" fg:x="21609" fg:w="3"/><text x="94.8976%" y="239.50"></text></g><g><title>CacheDelete`volRootFromPath (16 samples, 0.07%)</title><rect x="94.6651%" y="133" width="0.0701%" height="15" fill="rgb(254,24,2)" fg:x="21613" fg:w="16"/><text x="94.9151%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__getattrlist (15 samples, 0.07%)</title><rect x="94.6695%" y="117" width="0.0657%" height="15" fill="rgb(230,100,2)" fg:x="21614" fg:w="15"/><text x="94.9195%" y="127.50"></text></g><g><title>CacheDelete`_validateVolume (23 samples, 0.10%)</title><rect x="94.6651%" y="149" width="0.1007%" height="15" fill="rgb(219,142,25)" fg:x="21613" fg:w="23"/><text x="94.9151%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`lstat (7 samples, 0.03%)</title><rect x="94.7352%" y="133" width="0.0307%" height="15" fill="rgb(240,73,43)" fg:x="21629" fg:w="7"/><text x="94.9852%" y="143.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume validate] (30 samples, 0.13%)</title><rect x="94.6608%" y="165" width="0.1314%" height="15" fill="rgb(214,114,15)" fg:x="21612" fg:w="30"/><text x="94.9108%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`statfs (3 samples, 0.01%)</title><rect x="94.7790%" y="149" width="0.0131%" height="15" fill="rgb(207,130,4)" fg:x="21639" fg:w="3"/><text x="95.0290%" y="159.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume size] (37 samples, 0.16%)</title><rect x="94.6608%" y="181" width="0.1621%" height="15" fill="rgb(221,25,40)" fg:x="21612" fg:w="37"/><text x="94.9108%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`statfs (5 samples, 0.02%)</title><rect x="94.8009%" y="165" width="0.0219%" height="15" fill="rgb(241,184,7)" fg:x="21644" fg:w="5"/><text x="95.0509%" y="175.50"></text></g><g><title>CacheDelete`volRootFromPath (7 samples, 0.03%)</title><rect x="94.8228%" y="149" width="0.0307%" height="15" fill="rgb(235,159,4)" fg:x="21649" fg:w="7"/><text x="95.0728%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__getattrlist (7 samples, 0.03%)</title><rect x="94.8228%" y="133" width="0.0307%" height="15" fill="rgb(214,87,48)" fg:x="21649" fg:w="7"/><text x="95.0728%" y="143.50"></text></g><g><title>CacheDelete`_validateVolume (11 samples, 0.05%)</title><rect x="94.8228%" y="165" width="0.0482%" height="15" fill="rgb(246,198,24)" fg:x="21649" fg:w="11"/><text x="95.0728%" y="175.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume validate] (17 samples, 0.07%)</title><rect x="94.8228%" y="181" width="0.0745%" height="15" fill="rgb(209,66,40)" fg:x="21649" fg:w="17"/><text x="95.0728%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`statfs (4 samples, 0.02%)</title><rect x="94.8798%" y="165" width="0.0175%" height="15" fill="rgb(233,147,39)" fg:x="21662" fg:w="4"/><text x="95.1298%" y="175.50"></text></g><g><title>libicucore.A.dylib`icu::RegexCompile::matchStartType (3 samples, 0.01%)</title><rect x="94.9148%" y="85" width="0.0131%" height="15" fill="rgb(231,145,52)" fg:x="21670" fg:w="3"/><text x="95.1648%" y="95.50"></text></g><g><title>libicucore.A.dylib`icu::RegexCompile::compile (8 samples, 0.04%)</title><rect x="94.9017%" y="101" width="0.0350%" height="15" fill="rgb(206,20,26)" fg:x="21667" fg:w="8"/><text x="95.1517%" y="111.50"></text></g><g><title>Foundation`+[NSRegularExpression regularExpressionWithPattern:options:error:] (9 samples, 0.04%)</title><rect x="94.9017%" y="165" width="0.0394%" height="15" fill="rgb(238,220,4)" fg:x="21667" fg:w="9"/><text x="95.1517%" y="175.50"></text></g><g><title>Foundation`-[NSRegularExpression initWithPattern:options:error:] (9 samples, 0.04%)</title><rect x="94.9017%" y="149" width="0.0394%" height="15" fill="rgb(252,195,42)" fg:x="21667" fg:w="9"/><text x="95.1517%" y="159.50"></text></g><g><title>libicucore.A.dylib`uregex_open (9 samples, 0.04%)</title><rect x="94.9017%" y="133" width="0.0394%" height="15" fill="rgb(209,10,6)" fg:x="21667" fg:w="9"/><text x="95.1517%" y="143.50"></text></g><g><title>libicucore.A.dylib`icu::RegexPattern::compile (9 samples, 0.04%)</title><rect x="94.9017%" y="117" width="0.0394%" height="15" fill="rgb(229,3,52)" fg:x="21667" fg:w="9"/><text x="95.1517%" y="127.50"></text></g><g><title>Foundation`+[NSString stringWithUTF8String:] (3 samples, 0.01%)</title><rect x="94.9498%" y="133" width="0.0131%" height="15" fill="rgb(253,49,37)" fg:x="21678" fg:w="3"/><text x="95.1998%" y="143.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (3 samples, 0.01%)</title><rect x="94.9498%" y="117" width="0.0131%" height="15" fill="rgb(240,103,49)" fg:x="21678" fg:w="3"/><text x="95.1998%" y="127.50"></text></g><g><title>Foundation`-[NSRegularExpression(NSMatching) enumerateMatchesInString:options:range:usingBlock:] (7 samples, 0.03%)</title><rect x="94.9455%" y="165" width="0.0307%" height="15" fill="rgb(250,182,30)" fg:x="21677" fg:w="7"/><text x="95.1955%" y="175.50"></text></g><g><title>CacheDelete`__disk_block_invoke (7 samples, 0.03%)</title><rect x="94.9455%" y="149" width="0.0307%" height="15" fill="rgb(248,8,30)" fg:x="21677" fg:w="7"/><text x="95.1955%" y="159.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl (3 samples, 0.01%)</title><rect x="94.9630%" y="133" width="0.0131%" height="15" fill="rgb(237,120,30)" fg:x="21681" fg:w="3"/><text x="95.2130%" y="143.50"></text></g><g><title>libsystem_trace.dylib`_os_log (3 samples, 0.01%)</title><rect x="94.9630%" y="117" width="0.0131%" height="15" fill="rgb(221,146,34)" fg:x="21681" fg:w="3"/><text x="95.2130%" y="127.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (3 samples, 0.01%)</title><rect x="94.9630%" y="101" width="0.0131%" height="15" fill="rgb(242,55,13)" fg:x="21681" fg:w="3"/><text x="95.2130%" y="111.50"></text></g><g><title>CacheDelete`disk (19 samples, 0.08%)</title><rect x="94.8973%" y="181" width="0.0832%" height="15" fill="rgb(242,112,31)" fg:x="21666" fg:w="19"/><text x="95.1473%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__getattrlist (4 samples, 0.02%)</title><rect x="94.9893%" y="181" width="0.0175%" height="15" fill="rgb(249,192,27)" fg:x="21687" fg:w="4"/><text x="95.2393%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`statfs (7 samples, 0.03%)</title><rect x="95.0068%" y="181" width="0.0307%" height="15" fill="rgb(208,204,44)" fg:x="21691" fg:w="7"/><text x="95.2568%" y="191.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume effective_size] (88 samples, 0.39%)</title><rect x="94.6608%" y="197" width="0.3854%" height="15" fill="rgb(208,93,54)" fg:x="21612" fg:w="88"/><text x="94.9108%" y="207.50"></text></g><g><title>CacheDelete`volRootFromPath (13 samples, 0.06%)</title><rect x="95.0462%" y="149" width="0.0569%" height="15" fill="rgb(242,1,31)" fg:x="21700" fg:w="13"/><text x="95.2962%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__getattrlist (13 samples, 0.06%)</title><rect x="95.0462%" y="133" width="0.0569%" height="15" fill="rgb(241,83,25)" fg:x="21700" fg:w="13"/><text x="95.2962%" y="143.50"></text></g><g><title>CacheDelete`_validateVolume (17 samples, 0.07%)</title><rect x="95.0462%" y="165" width="0.0745%" height="15" fill="rgb(205,169,50)" fg:x="21700" fg:w="17"/><text x="95.2962%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`stat (5 samples, 0.02%)</title><rect x="95.1207%" y="165" width="0.0219%" height="15" fill="rgb(239,186,37)" fg:x="21717" fg:w="5"/><text x="95.3707%" y="175.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume validate] (26 samples, 0.11%)</title><rect x="95.0462%" y="181" width="0.1139%" height="15" fill="rgb(205,221,10)" fg:x="21700" fg:w="26"/><text x="95.2962%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`statfs (4 samples, 0.02%)</title><rect x="95.1426%" y="165" width="0.0175%" height="15" fill="rgb(218,196,15)" fg:x="21722" fg:w="4"/><text x="95.3926%" y="175.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume amountIsRational:] (116 samples, 0.51%)</title><rect x="94.6608%" y="213" width="0.5081%" height="15" fill="rgb(218,196,35)" fg:x="21612" fg:w="116"/><text x="94.9108%" y="223.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume freespace] (28 samples, 0.12%)</title><rect x="95.0462%" y="197" width="0.1226%" height="15" fill="rgb(233,63,24)" fg:x="21700" fg:w="28"/><text x="95.2962%" y="207.50"></text></g><g><title>CacheDelete`-[CDRecentVolumeInfo _recentInfoAtUrgency:validateResults:] (131 samples, 0.57%)</title><rect x="94.6608%" y="229" width="0.5738%" height="15" fill="rgb(225,8,4)" fg:x="21612" fg:w="131"/><text x="94.9108%" y="239.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl (6 samples, 0.03%)</title><rect x="95.2083%" y="213" width="0.0263%" height="15" fill="rgb(234,105,35)" fg:x="21737" fg:w="6"/><text x="95.4583%" y="223.50"></text></g><g><title>libsystem_trace.dylib`_os_log (6 samples, 0.03%)</title><rect x="95.2083%" y="197" width="0.0263%" height="15" fill="rgb(236,21,32)" fg:x="21737" fg:w="6"/><text x="95.4583%" y="207.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (6 samples, 0.03%)</title><rect x="95.2083%" y="181" width="0.0263%" height="15" fill="rgb(228,109,6)" fg:x="21737" fg:w="6"/><text x="95.4583%" y="191.50"></text></g><g><title>libsystem_trace.dylib`_os_log_fmt_flatten_object (4 samples, 0.02%)</title><rect x="95.2170%" y="165" width="0.0175%" height="15" fill="rgb(229,215,31)" fg:x="21739" fg:w="4"/><text x="95.4670%" y="175.50"></text></g><g><title>CacheDelete`-[CDPurgeableResultCache recentInfoForVolume:atUrgency:validateResults:] (134 samples, 0.59%)</title><rect x="94.6608%" y="309" width="0.5869%" height="15" fill="rgb(221,52,54)" fg:x="21612" fg:w="134"/><text x="94.9108%" y="319.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (134 samples, 0.59%)</title><rect x="94.6608%" y="293" width="0.5869%" height="15" fill="rgb(252,129,43)" fg:x="21612" fg:w="134"/><text x="94.9108%" y="303.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (134 samples, 0.59%)</title><rect x="94.6608%" y="277" width="0.5869%" height="15" fill="rgb(248,183,27)" fg:x="21612" fg:w="134"/><text x="94.9108%" y="287.50"></text></g><g><title>CacheDelete`__72-[CDPurgeableResultCache recentInfoForVolume:atUrgency:validateResults:]_block_invoke (134 samples, 0.59%)</title><rect x="94.6608%" y="261" width="0.5869%" height="15" fill="rgb(250,0,22)" fg:x="21612" fg:w="134"/><text x="94.9108%" y="271.50"></text></g><g><title>CacheDelete`-[CDRecentInfo _recentInfoForVolume:atUrgency:validateResults:] (134 samples, 0.59%)</title><rect x="94.6608%" y="245" width="0.5869%" height="15" fill="rgb(213,166,10)" fg:x="21612" fg:w="134"/><text x="94.9108%" y="255.50"></text></g><g><title>CacheDelete`-[CDPurgeableResultCache recentInfoForVolumes:atUrgency:validateResults:targetVolume:] (135 samples, 0.59%)</title><rect x="94.6608%" y="325" width="0.5913%" height="15" fill="rgb(207,163,36)" fg:x="21612" fg:w="135"/><text x="94.9108%" y="335.50"></text></g><g><title>CacheDelete`+[CacheDeleteVolume volumeWithMountpoint:] (3 samples, 0.01%)</title><rect x="95.2521%" y="309" width="0.0131%" height="15" fill="rgb(208,122,22)" fg:x="21747" fg:w="3"/><text x="95.5021%" y="319.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume initWithPath:] (3 samples, 0.01%)</title><rect x="95.2521%" y="293" width="0.0131%" height="15" fill="rgb(207,104,49)" fg:x="21747" fg:w="3"/><text x="95.5021%" y="303.50"></text></g><g><title>CacheDelete`_validateVolume (3 samples, 0.01%)</title><rect x="95.2521%" y="277" width="0.0131%" height="15" fill="rgb(248,211,50)" fg:x="21747" fg:w="3"/><text x="95.5021%" y="287.50"></text></g><g><title>Foundation`+[NSRegularExpression regularExpressionWithPattern:options:error:] (3 samples, 0.01%)</title><rect x="95.2652%" y="293" width="0.0131%" height="15" fill="rgb(217,13,45)" fg:x="21750" fg:w="3"/><text x="95.5152%" y="303.50"></text></g><g><title>Foundation`-[NSRegularExpression initWithPattern:options:error:] (3 samples, 0.01%)</title><rect x="95.2652%" y="277" width="0.0131%" height="15" fill="rgb(211,216,49)" fg:x="21750" fg:w="3"/><text x="95.5152%" y="287.50"></text></g><g><title>libicucore.A.dylib`uregex_open (3 samples, 0.01%)</title><rect x="95.2652%" y="261" width="0.0131%" height="15" fill="rgb(221,58,53)" fg:x="21750" fg:w="3"/><text x="95.5152%" y="271.50"></text></g><g><title>CacheDelete`disk (5 samples, 0.02%)</title><rect x="95.2652%" y="309" width="0.0219%" height="15" fill="rgb(220,112,41)" fg:x="21750" fg:w="5"/><text x="95.5152%" y="319.50"></text></g><g><title>CacheDelete`clientCachedResults (165 samples, 0.72%)</title><rect x="94.5775%" y="405" width="0.7227%" height="15" fill="rgb(236,38,28)" fg:x="21593" fg:w="165"/><text x="94.8275%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (165 samples, 0.72%)</title><rect x="94.5775%" y="389" width="0.7227%" height="15" fill="rgb(227,195,22)" fg:x="21593" fg:w="165"/><text x="94.8275%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (165 samples, 0.72%)</title><rect x="94.5775%" y="373" width="0.7227%" height="15" fill="rgb(214,55,33)" fg:x="21593" fg:w="165"/><text x="94.8275%" y="383.50"></text></g><g><title>CacheDelete`__clientCachedResults_block_invoke_2 (165 samples, 0.72%)</title><rect x="94.5775%" y="357" width="0.7227%" height="15" fill="rgb(248,80,13)" fg:x="21593" fg:w="165"/><text x="94.8275%" y="367.50"></text></g><g><title>CacheDelete`queryCache (152 samples, 0.67%)</title><rect x="94.6345%" y="341" width="0.6658%" height="15" fill="rgb(238,52,6)" fg:x="21606" fg:w="152"/><text x="94.8845%" y="351.50"></text></g><g><title>CacheDelete`getSiblings (11 samples, 0.05%)</title><rect x="95.2521%" y="325" width="0.0482%" height="15" fill="rgb(224,198,47)" fg:x="21747" fg:w="11"/><text x="95.5021%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__getattrlist (6 samples, 0.03%)</title><rect x="95.3046%" y="229" width="0.0263%" height="15" fill="rgb(233,171,20)" fg:x="21759" fg:w="6"/><text x="95.5546%" y="239.50"></text></g><g><title>CacheDelete`volRootFromPath (9 samples, 0.04%)</title><rect x="95.3046%" y="245" width="0.0394%" height="15" fill="rgb(241,30,25)" fg:x="21759" fg:w="9"/><text x="95.5546%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`lstat (3 samples, 0.01%)</title><rect x="95.3309%" y="229" width="0.0131%" height="15" fill="rgb(207,171,38)" fg:x="21765" fg:w="3"/><text x="95.5809%" y="239.50"></text></g><g><title>CacheDelete`_validateVolume (13 samples, 0.06%)</title><rect x="95.3046%" y="261" width="0.0569%" height="15" fill="rgb(234,70,1)" fg:x="21759" fg:w="13"/><text x="95.5546%" y="271.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume validate] (14 samples, 0.06%)</title><rect x="95.3046%" y="277" width="0.0613%" height="15" fill="rgb(232,178,18)" fg:x="21759" fg:w="14"/><text x="95.5546%" y="287.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume freespace] (15 samples, 0.07%)</title><rect x="95.3046%" y="293" width="0.0657%" height="15" fill="rgb(241,78,40)" fg:x="21759" fg:w="15"/><text x="95.5546%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__getattrlist (5 samples, 0.02%)</title><rect x="95.3703%" y="229" width="0.0219%" height="15" fill="rgb(222,35,25)" fg:x="21774" fg:w="5"/><text x="95.6203%" y="239.50"></text></g><g><title>CacheDelete`volRootFromPath (7 samples, 0.03%)</title><rect x="95.3703%" y="245" width="0.0307%" height="15" fill="rgb(207,92,16)" fg:x="21774" fg:w="7"/><text x="95.6203%" y="255.50"></text></g><g><title>CacheDelete`_validateVolume (11 samples, 0.05%)</title><rect x="95.3703%" y="261" width="0.0482%" height="15" fill="rgb(216,59,51)" fg:x="21774" fg:w="11"/><text x="95.6203%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`lstat (4 samples, 0.02%)</title><rect x="95.4010%" y="245" width="0.0175%" height="15" fill="rgb(213,80,28)" fg:x="21781" fg:w="4"/><text x="95.6510%" y="255.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume validate] (14 samples, 0.06%)</title><rect x="95.3703%" y="277" width="0.0613%" height="15" fill="rgb(220,93,7)" fg:x="21774" fg:w="14"/><text x="95.6203%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`statfs (3 samples, 0.01%)</title><rect x="95.4185%" y="261" width="0.0131%" height="15" fill="rgb(225,24,44)" fg:x="21785" fg:w="3"/><text x="95.6685%" y="271.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume size] (15 samples, 0.07%)</title><rect x="95.3703%" y="293" width="0.0657%" height="15" fill="rgb(243,74,40)" fg:x="21774" fg:w="15"/><text x="95.6203%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__getattrlist (5 samples, 0.02%)</title><rect x="95.4360%" y="229" width="0.0219%" height="15" fill="rgb(228,39,7)" fg:x="21789" fg:w="5"/><text x="95.6860%" y="239.50"></text></g><g><title>CacheDelete`volRootFromPath (8 samples, 0.04%)</title><rect x="95.4360%" y="245" width="0.0350%" height="15" fill="rgb(227,79,8)" fg:x="21789" fg:w="8"/><text x="95.6860%" y="255.50"></text></g><g><title>CacheDelete`_validateVolume (9 samples, 0.04%)</title><rect x="95.4360%" y="261" width="0.0394%" height="15" fill="rgb(236,58,11)" fg:x="21789" fg:w="9"/><text x="95.6860%" y="271.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume validate] (11 samples, 0.05%)</title><rect x="95.4360%" y="277" width="0.0482%" height="15" fill="rgb(249,63,35)" fg:x="21789" fg:w="11"/><text x="95.6860%" y="287.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume used] (15 samples, 0.07%)</title><rect x="95.4360%" y="293" width="0.0657%" height="15" fill="rgb(252,114,16)" fg:x="21789" fg:w="15"/><text x="95.6860%" y="303.50"></text></g><g><title>CacheDelete`_validateVolume (5 samples, 0.02%)</title><rect x="95.5017%" y="277" width="0.0219%" height="15" fill="rgb(254,151,24)" fg:x="21804" fg:w="5"/><text x="95.7517%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`lstat (3 samples, 0.01%)</title><rect x="95.5105%" y="261" width="0.0131%" height="15" fill="rgb(253,54,39)" fg:x="21806" fg:w="3"/><text x="95.7605%" y="271.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume validate] (6 samples, 0.03%)</title><rect x="95.5017%" y="293" width="0.0263%" height="15" fill="rgb(243,25,45)" fg:x="21804" fg:w="6"/><text x="95.7517%" y="303.50"></text></g><g><title>CoreServicesInternal`volumePropertyProviderPrepareValues(__CFURL const*, __FileCache*, __CFString const* const*, void const**, long, void const*, __CFError**) (230 samples, 1.01%)</title><rect x="94.5294%" y="437" width="1.0074%" height="15" fill="rgb(234,134,9)" fg:x="21582" fg:w="230"/><text x="94.7794%" y="447.50"></text></g><g><title>CacheDelete`CacheDeleteCopyAvailableSpaceForVolume (230 samples, 1.01%)</title><rect x="94.5294%" y="421" width="1.0074%" height="15" fill="rgb(227,166,31)" fg:x="21582" fg:w="230"/><text x="94.7794%" y="431.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl (53 samples, 0.23%)</title><rect x="95.3046%" y="405" width="0.2321%" height="15" fill="rgb(245,143,41)" fg:x="21759" fg:w="53"/><text x="95.5546%" y="415.50"></text></g><g><title>libsystem_trace.dylib`_os_log (53 samples, 0.23%)</title><rect x="95.3046%" y="389" width="0.2321%" height="15" fill="rgb(238,181,32)" fg:x="21759" fg:w="53"/><text x="95.5546%" y="399.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (53 samples, 0.23%)</title><rect x="95.3046%" y="373" width="0.2321%" height="15" fill="rgb(224,113,18)" fg:x="21759" fg:w="53"/><text x="95.5546%" y="383.50"></text></g><g><title>libsystem_trace.dylib`_os_log_fmt_flatten_object (53 samples, 0.23%)</title><rect x="95.3046%" y="357" width="0.2321%" height="15" fill="rgb(240,229,28)" fg:x="21759" fg:w="53"/><text x="95.5546%" y="367.50"></text></g><g><title>libsystem_trace.dylib`_os_log_fmt_flatten_NSCF (53 samples, 0.23%)</title><rect x="95.3046%" y="341" width="0.2321%" height="15" fill="rgb(250,185,3)" fg:x="21759" fg:w="53"/><text x="95.5546%" y="351.50"></text></g><g><title>Foundation`_NS_os_log_callback (53 samples, 0.23%)</title><rect x="95.3046%" y="325" width="0.2321%" height="15" fill="rgb(212,59,25)" fg:x="21759" fg:w="53"/><text x="95.5546%" y="335.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume description] (53 samples, 0.23%)</title><rect x="95.3046%" y="309" width="0.2321%" height="15" fill="rgb(221,87,20)" fg:x="21759" fg:w="53"/><text x="95.5546%" y="319.50"></text></g><g><title>CoreFoundation`CFURLCopyResourcePropertiesForKeys (233 samples, 1.02%)</title><rect x="94.5294%" y="485" width="1.0205%" height="15" fill="rgb(213,74,28)" fg:x="21582" fg:w="233"/><text x="94.7794%" y="495.50"></text></g><g><title>CoreServicesInternal`_FSURLCopyResourcePropertiesForKeysInternal(__CFURL const*, __CFArray const*, void*, __CFError**, unsigned char) (233 samples, 1.02%)</title><rect x="94.5294%" y="469" width="1.0205%" height="15" fill="rgb(224,132,34)" fg:x="21582" fg:w="233"/><text x="94.7794%" y="479.50"></text></g><g><title>CoreServicesInternal`prepareValuesForBitmap(__CFURL const*, __FileCache*, _FilePropertyBitmap*, __CFError**) (233 samples, 1.02%)</title><rect x="94.5294%" y="453" width="1.0205%" height="15" fill="rgb(222,101,24)" fg:x="21582" fg:w="233"/><text x="94.7794%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__getattrlist (3 samples, 0.01%)</title><rect x="95.5368%" y="437" width="0.0131%" height="15" fill="rgb(254,142,4)" fg:x="21812" fg:w="3"/><text x="95.7868%" y="447.50"></text></g><g><title>sd-core`&lt;sysinfo::apple::system::System as sysinfo::traits::SystemExt&gt;::refresh_disks_list (259 samples, 1.13%)</title><rect x="94.5250%" y="517" width="1.1344%" height="15" fill="rgb(230,229,49)" fg:x="21581" fg:w="259"/><text x="94.7750%" y="527.50"></text></g><g><title>sd-core`sysinfo::apple::disk::get_disks (258 samples, 1.13%)</title><rect x="94.5294%" y="501" width="1.1300%" height="15" fill="rgb(238,70,47)" fg:x="21582" fg:w="258"/><text x="94.7794%" y="511.50"></text></g><g><title>sd-core`sysinfo::apple::macos::disk::get_disk_type (24 samples, 0.11%)</title><rect x="95.5543%" y="485" width="0.1051%" height="15" fill="rgb(231,160,17)" fg:x="21816" fg:w="24"/><text x="95.8043%" y="495.50"></text></g><g><title>IOKit`IOServiceGetMatchingServices (23 samples, 0.10%)</title><rect x="95.5587%" y="469" width="0.1007%" height="15" fill="rgb(218,68,53)" fg:x="21817" fg:w="23"/><text x="95.8087%" y="479.50"></text></g><g><title>IOKit`io_service_get_matching_services_bin (22 samples, 0.10%)</title><rect x="95.5631%" y="453" width="0.0964%" height="15" fill="rgb(236,111,10)" fg:x="21818" fg:w="22"/><text x="95.8131%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (22 samples, 0.10%)</title><rect x="95.5631%" y="437" width="0.0964%" height="15" fill="rgb(224,34,41)" fg:x="21818" fg:w="22"/><text x="95.8131%" y="447.50"></text></g><g><title>CacheDelete`__CacheDeleteCopyAvailableSpaceForVolume_block_invoke (5 samples, 0.02%)</title><rect x="95.6638%" y="341" width="0.0219%" height="15" fill="rgb(241,118,19)" fg:x="21841" fg:w="5"/><text x="95.9138%" y="351.50"></text></g><g><title>CoreFoundation`_CF_forwarding_prep_0 (5 samples, 0.02%)</title><rect x="95.6638%" y="325" width="0.0219%" height="15" fill="rgb(238,129,25)" fg:x="21841" fg:w="5"/><text x="95.9138%" y="335.50"></text></g><g><title>CoreFoundation`___forwarding___ (5 samples, 0.02%)</title><rect x="95.6638%" y="309" width="0.0219%" height="15" fill="rgb(238,22,31)" fg:x="21841" fg:w="5"/><text x="95.9138%" y="319.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:] (5 samples, 0.02%)</title><rect x="95.6638%" y="293" width="0.0219%" height="15" fill="rgb(222,174,48)" fg:x="21841" fg:w="5"/><text x="95.9138%" y="303.50"></text></g><g><title>Foundation`__88-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:]_block_invoke_3 (5 samples, 0.02%)</title><rect x="95.6638%" y="277" width="0.0219%" height="15" fill="rgb(206,152,40)" fg:x="21841" fg:w="5"/><text x="95.9138%" y="287.50"></text></g><g><title>Foundation`-[NSXPCConnection _decodeAndInvokeReplyBlockWithEvent:sequence:replyInfo:] (5 samples, 0.02%)</title><rect x="95.6638%" y="261" width="0.0219%" height="15" fill="rgb(218,99,54)" fg:x="21841" fg:w="5"/><text x="95.9138%" y="271.50"></text></g><g><title>Foundation`__NSXPCCONNECTION_IS_CALLING_OUT_TO_REPLY_BLOCK__ (4 samples, 0.02%)</title><rect x="95.6682%" y="245" width="0.0175%" height="15" fill="rgb(220,174,26)" fg:x="21842" fg:w="4"/><text x="95.9182%" y="255.50"></text></g><g><title>CoreFoundation`-[NSInvocation invoke] (4 samples, 0.02%)</title><rect x="95.6682%" y="229" width="0.0175%" height="15" fill="rgb(245,116,9)" fg:x="21842" fg:w="4"/><text x="95.9182%" y="239.50"></text></g><g><title>CoreFoundation`__invoking___ (4 samples, 0.02%)</title><rect x="95.6682%" y="213" width="0.0175%" height="15" fill="rgb(209,72,35)" fg:x="21842" fg:w="4"/><text x="95.9182%" y="223.50"></text></g><g><title>CacheDelete`__CacheDeleteCopyAvailableSpaceForVolume_block_invoke_2 (4 samples, 0.02%)</title><rect x="95.6682%" y="197" width="0.0175%" height="15" fill="rgb(226,126,21)" fg:x="21842" fg:w="4"/><text x="95.9182%" y="207.50"></text></g><g><title>CacheDelete`daemonCachedResults (4 samples, 0.02%)</title><rect x="95.6682%" y="181" width="0.0175%" height="15" fill="rgb(227,192,1)" fg:x="21842" fg:w="4"/><text x="95.9182%" y="191.50"></text></g><g><title>CacheDelete`queryCache (3 samples, 0.01%)</title><rect x="95.6726%" y="165" width="0.0131%" height="15" fill="rgb(237,180,29)" fg:x="21843" fg:w="3"/><text x="95.9226%" y="175.50"></text></g><g><title>CacheDelete`-[CDPurgeableResultCache recentInfoForVolumes:atUrgency:validateResults:targetVolume:] (3 samples, 0.01%)</title><rect x="95.6726%" y="149" width="0.0131%" height="15" fill="rgb(230,197,35)" fg:x="21843" fg:w="3"/><text x="95.9226%" y="159.50"></text></g><g><title>CacheDelete`-[CDPurgeableResultCache recentInfoForVolume:atUrgency:validateResults:] (3 samples, 0.01%)</title><rect x="95.6726%" y="133" width="0.0131%" height="15" fill="rgb(246,193,31)" fg:x="21843" fg:w="3"/><text x="95.9226%" y="143.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (3 samples, 0.01%)</title><rect x="95.6726%" y="117" width="0.0131%" height="15" fill="rgb(241,36,4)" fg:x="21843" fg:w="3"/><text x="95.9226%" y="127.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.01%)</title><rect x="95.6726%" y="101" width="0.0131%" height="15" fill="rgb(241,130,17)" fg:x="21843" fg:w="3"/><text x="95.9226%" y="111.50"></text></g><g><title>CacheDelete`__72-[CDPurgeableResultCache recentInfoForVolume:atUrgency:validateResults:]_block_invoke (3 samples, 0.01%)</title><rect x="95.6726%" y="85" width="0.0131%" height="15" fill="rgb(206,137,32)" fg:x="21843" fg:w="3"/><text x="95.9226%" y="95.50"></text></g><g><title>CacheDelete`-[CDRecentInfo _recentInfoForVolume:atUrgency:validateResults:] (3 samples, 0.01%)</title><rect x="95.6726%" y="69" width="0.0131%" height="15" fill="rgb(237,228,51)" fg:x="21843" fg:w="3"/><text x="95.9226%" y="79.50"></text></g><g><title>CacheDelete`-[CDRecentVolumeInfo _recentInfoAtUrgency:validateResults:] (3 samples, 0.01%)</title><rect x="95.6726%" y="53" width="0.0131%" height="15" fill="rgb(243,6,42)" fg:x="21843" fg:w="3"/><text x="95.9226%" y="63.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume amountIsRational:] (3 samples, 0.01%)</title><rect x="95.6726%" y="37" width="0.0131%" height="15" fill="rgb(251,74,28)" fg:x="21843" fg:w="3"/><text x="95.9226%" y="47.50"></text></g><g><title>CacheDelete`CallBlockWithProxy (7 samples, 0.03%)</title><rect x="95.6638%" y="357" width="0.0307%" height="15" fill="rgb(218,20,49)" fg:x="21841" fg:w="7"/><text x="95.9138%" y="367.50"></text></g><g><title>CacheDelete`-[CDPurgeableResultCache recentInfoForVolumes:atUrgency:validateResults:targetVolume:] (3 samples, 0.01%)</title><rect x="95.6988%" y="277" width="0.0131%" height="15" fill="rgb(238,28,14)" fg:x="21849" fg:w="3"/><text x="95.9488%" y="287.50"></text></g><g><title>CacheDelete`-[CDPurgeableResultCache recentInfoForVolume:atUrgency:validateResults:] (3 samples, 0.01%)</title><rect x="95.6988%" y="261" width="0.0131%" height="15" fill="rgb(229,40,46)" fg:x="21849" fg:w="3"/><text x="95.9488%" y="271.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (3 samples, 0.01%)</title><rect x="95.6988%" y="245" width="0.0131%" height="15" fill="rgb(244,195,20)" fg:x="21849" fg:w="3"/><text x="95.9488%" y="255.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.01%)</title><rect x="95.6988%" y="229" width="0.0131%" height="15" fill="rgb(253,56,35)" fg:x="21849" fg:w="3"/><text x="95.9488%" y="239.50"></text></g><g><title>CacheDelete`__72-[CDPurgeableResultCache recentInfoForVolume:atUrgency:validateResults:]_block_invoke (3 samples, 0.01%)</title><rect x="95.6988%" y="213" width="0.0131%" height="15" fill="rgb(210,149,44)" fg:x="21849" fg:w="3"/><text x="95.9488%" y="223.50"></text></g><g><title>CacheDelete`-[CDRecentInfo _recentInfoForVolume:atUrgency:validateResults:] (3 samples, 0.01%)</title><rect x="95.6988%" y="197" width="0.0131%" height="15" fill="rgb(240,135,12)" fg:x="21849" fg:w="3"/><text x="95.9488%" y="207.50"></text></g><g><title>CacheDelete`-[CDRecentVolumeInfo _recentInfoAtUrgency:validateResults:] (3 samples, 0.01%)</title><rect x="95.6988%" y="181" width="0.0131%" height="15" fill="rgb(251,24,50)" fg:x="21849" fg:w="3"/><text x="95.9488%" y="191.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume amountIsRational:] (3 samples, 0.01%)</title><rect x="95.6988%" y="165" width="0.0131%" height="15" fill="rgb(243,200,47)" fg:x="21849" fg:w="3"/><text x="95.9488%" y="175.50"></text></g><g><title>CacheDelete`-[CacheDeleteVolume effective_size] (3 samples, 0.01%)</title><rect x="95.6988%" y="149" width="0.0131%" height="15" fill="rgb(224,166,26)" fg:x="21849" fg:w="3"/><text x="95.9488%" y="159.50"></text></g><g><title>CacheDelete`clientCachedResults (6 samples, 0.03%)</title><rect x="95.6945%" y="357" width="0.0263%" height="15" fill="rgb(233,0,47)" fg:x="21848" fg:w="6"/><text x="95.9445%" y="367.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (6 samples, 0.03%)</title><rect x="95.6945%" y="341" width="0.0263%" height="15" fill="rgb(253,80,5)" fg:x="21848" fg:w="6"/><text x="95.9445%" y="351.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (6 samples, 0.03%)</title><rect x="95.6945%" y="325" width="0.0263%" height="15" fill="rgb(214,133,25)" fg:x="21848" fg:w="6"/><text x="95.9445%" y="335.50"></text></g><g><title>CacheDelete`__clientCachedResults_block_invoke_2 (6 samples, 0.03%)</title><rect x="95.6945%" y="309" width="0.0263%" height="15" fill="rgb(209,27,14)" fg:x="21848" fg:w="6"/><text x="95.9445%" y="319.50"></text></g><g><title>CacheDelete`queryCache (6 samples, 0.03%)</title><rect x="95.6945%" y="293" width="0.0263%" height="15" fill="rgb(219,102,51)" fg:x="21848" fg:w="6"/><text x="95.9445%" y="303.50"></text></g><g><title>CacheDelete`CacheDeleteCopyAvailableSpaceForVolume (15 samples, 0.07%)</title><rect x="95.6638%" y="373" width="0.0657%" height="15" fill="rgb(237,18,16)" fg:x="21841" fg:w="15"/><text x="95.9138%" y="383.50"></text></g><g><title>CoreFoundation`CFURLCopyResourcePropertiesForKeys (17 samples, 0.07%)</title><rect x="95.6638%" y="437" width="0.0745%" height="15" fill="rgb(241,85,17)" fg:x="21841" fg:w="17"/><text x="95.9138%" y="447.50"></text></g><g><title>CoreServicesInternal`_FSURLCopyResourcePropertiesForKeysInternal(__CFURL const*, __CFArray const*, void*, __CFError**, unsigned char) (17 samples, 0.07%)</title><rect x="95.6638%" y="421" width="0.0745%" height="15" fill="rgb(236,90,42)" fg:x="21841" fg:w="17"/><text x="95.9138%" y="431.50"></text></g><g><title>CoreServicesInternal`prepareValuesForBitmap(__CFURL const*, __FileCache*, _FilePropertyBitmap*, __CFError**) (17 samples, 0.07%)</title><rect x="95.6638%" y="405" width="0.0745%" height="15" fill="rgb(249,57,21)" fg:x="21841" fg:w="17"/><text x="95.9138%" y="415.50"></text></g><g><title>CoreServicesInternal`volumePropertyProviderPrepareValues(__CFURL const*, __FileCache*, __CFString const* const*, void const**, long, void const*, __CFError**) (17 samples, 0.07%)</title><rect x="95.6638%" y="389" width="0.0745%" height="15" fill="rgb(243,12,36)" fg:x="21841" fg:w="17"/><text x="95.9138%" y="399.50"></text></g><g><title>sd-core`sysinfo::apple::disk::get_disks (18 samples, 0.08%)</title><rect x="95.6638%" y="453" width="0.0788%" height="15" fill="rgb(253,128,47)" fg:x="21841" fg:w="18"/><text x="95.9138%" y="463.50"></text></g><g><title>IOKit`__IOHIDEventSystemClientRefresh (3 samples, 0.01%)</title><rect x="95.7426%" y="421" width="0.0131%" height="15" fill="rgb(207,33,20)" fg:x="21859" fg:w="3"/><text x="95.9926%" y="431.50"></text></g><g><title>IOKit`IOHIDEventSystemClientSetMatchingMultiple (3 samples, 0.01%)</title><rect x="95.7426%" y="405" width="0.0131%" height="15" fill="rgb(233,215,35)" fg:x="21859" fg:w="3"/><text x="95.9926%" y="415.50"></text></g><g><title>IOKit`__IOHIDEventSystemClientCacheMatchingServices (3 samples, 0.01%)</title><rect x="95.7426%" y="389" width="0.0131%" height="15" fill="rgb(249,188,52)" fg:x="21859" fg:w="3"/><text x="95.9926%" y="399.50"></text></g><g><title>IOKit`IOHIDEventSystemClientCreateWithType (6 samples, 0.03%)</title><rect x="95.7426%" y="437" width="0.0263%" height="15" fill="rgb(225,12,32)" fg:x="21859" fg:w="6"/><text x="95.9926%" y="447.50"></text></g><g><title>dyld`dyld4::APIs::dladdr (3 samples, 0.01%)</title><rect x="95.7558%" y="421" width="0.0131%" height="15" fill="rgb(247,98,14)" fg:x="21862" fg:w="3"/><text x="96.0058%" y="431.50"></text></g><g><title>dyld`dyld3::MachOLoaded::findClosestSymbol (3 samples, 0.01%)</title><rect x="95.7558%" y="405" width="0.0131%" height="15" fill="rgb(247,219,48)" fg:x="21862" fg:w="3"/><text x="96.0058%" y="415.50"></text></g><g><title>IOKit`IOHIDServiceClientCopyProperty (3 samples, 0.01%)</title><rect x="95.7733%" y="437" width="0.0131%" height="15" fill="rgb(253,60,48)" fg:x="21866" fg:w="3"/><text x="96.0233%" y="447.50"></text></g><g><title>IOKit`_IOHIDEventSystemClientCopyPropertyForService (3 samples, 0.01%)</title><rect x="95.7733%" y="421" width="0.0131%" height="15" fill="rgb(245,15,52)" fg:x="21866" fg:w="3"/><text x="96.0233%" y="431.50"></text></g><g><title>sd-core`sysinfo::apple::macos::component::arm::Components::refresh (15 samples, 0.07%)</title><rect x="95.7426%" y="453" width="0.0657%" height="15" fill="rgb(220,133,28)" fg:x="21859" fg:w="15"/><text x="95.9926%" y="463.50"></text></g><g><title>IOKit`_IOHIDEventSystemClientCopyEventForService (5 samples, 0.02%)</title><rect x="95.7864%" y="437" width="0.0219%" height="15" fill="rgb(217,180,4)" fg:x="21869" fg:w="5"/><text x="96.0364%" y="447.50"></text></g><g><title>IOKit`io_hideventsystem_copy_event_for_service (4 samples, 0.02%)</title><rect x="95.7908%" y="421" width="0.0175%" height="15" fill="rgb(251,24,1)" fg:x="21870" fg:w="4"/><text x="96.0408%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (4 samples, 0.02%)</title><rect x="95.7908%" y="405" width="0.0175%" height="15" fill="rgb(212,185,49)" fg:x="21870" fg:w="4"/><text x="96.0408%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (4 samples, 0.02%)</title><rect x="95.7908%" y="389" width="0.0175%" height="15" fill="rgb(215,175,22)" fg:x="21870" fg:w="4"/><text x="96.0408%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.02%)</title><rect x="95.7908%" y="373" width="0.0175%" height="15" fill="rgb(250,205,14)" fg:x="21870" fg:w="4"/><text x="96.0408%" y="383.50"></text></g><g><title>sd-core`std::sync::once_lock::OnceLock&lt;T&gt;::initialize (35 samples, 0.15%)</title><rect x="95.6594%" y="517" width="0.1533%" height="15" fill="rgb(225,211,22)" fg:x="21840" fg:w="35"/><text x="95.9094%" y="527.50"></text></g><g><title>sd-core`std::sys_common::once::queue::Once::call (35 samples, 0.15%)</title><rect x="95.6594%" y="501" width="0.1533%" height="15" fill="rgb(251,179,42)" fg:x="21840" fg:w="35"/><text x="95.9094%" y="511.50"></text></g><g><title>sd-core`std::sync::once::Once::call_once_force::_{{closure}} (35 samples, 0.15%)</title><rect x="95.6594%" y="485" width="0.1533%" height="15" fill="rgb(208,216,51)" fg:x="21840" fg:w="35"/><text x="95.9094%" y="495.50"></text></g><g><title>sd-core`&lt;sysinfo::apple::system::System as sysinfo::traits::SystemExt&gt;::new_with_specifics (35 samples, 0.15%)</title><rect x="95.6594%" y="469" width="0.1533%" height="15" fill="rgb(235,36,11)" fg:x="21840" fg:w="35"/><text x="95.9094%" y="479.50"></text></g><g><title>libsystem_c.dylib`posix_spawnp (21 samples, 0.09%)</title><rect x="95.8127%" y="453" width="0.0920%" height="15" fill="rgb(213,189,28)" fg:x="21875" fg:w="21"/><text x="96.0627%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__posix_spawn (21 samples, 0.09%)</title><rect x="95.8127%" y="437" width="0.0920%" height="15" fill="rgb(227,203,42)" fg:x="21875" fg:w="21"/><text x="96.0627%" y="447.50"></text></g><g><title>sd-core`sd_core::volume::get_volumes::_{{closure}} (316 samples, 1.38%)</title><rect x="94.5250%" y="533" width="1.3841%" height="15" fill="rgb(244,72,36)" fg:x="21581" fg:w="316"/><text x="94.7750%" y="543.50"></text></g><g><title>sd-core`tokio::process::Command::output (22 samples, 0.10%)</title><rect x="95.8127%" y="517" width="0.0964%" height="15" fill="rgb(213,53,17)" fg:x="21875" fg:w="22"/><text x="96.0627%" y="527.50"></text></g><g><title>sd-core`tokio::process::Command::spawn (22 samples, 0.10%)</title><rect x="95.8127%" y="501" width="0.0964%" height="15" fill="rgb(207,167,3)" fg:x="21875" fg:w="22"/><text x="96.0627%" y="511.50"></text></g><g><title>sd-core`std::process::Command::spawn (22 samples, 0.10%)</title><rect x="95.8127%" y="485" width="0.0964%" height="15" fill="rgb(216,98,30)" fg:x="21875" fg:w="22"/><text x="96.0627%" y="495.50"></text></g><g><title>sd-core`std::sys::unix::process::process_inner::_&lt;impl std::sys::unix::process::process_common::Command&gt;::spawn (22 samples, 0.10%)</title><rect x="95.8127%" y="469" width="0.0964%" height="15" fill="rgb(236,123,15)" fg:x="21875" fg:w="22"/><text x="96.0627%" y="479.50"></text></g><g><title>sd-core`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (322 samples, 1.41%)</title><rect x="94.5031%" y="597" width="1.4104%" height="15" fill="rgb(248,81,50)" fg:x="21576" fg:w="322"/><text x="94.7531%" y="607.50"></text></g><g><title>sd-core`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (322 samples, 1.41%)</title><rect x="94.5031%" y="581" width="1.4104%" height="15" fill="rgb(214,120,4)" fg:x="21576" fg:w="322"/><text x="94.7531%" y="591.50"></text></g><g><title>sd-core`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (322 samples, 1.41%)</title><rect x="94.5031%" y="565" width="1.4104%" height="15" fill="rgb(208,179,34)" fg:x="21576" fg:w="322"/><text x="94.7531%" y="575.50"></text></g><g><title>sd-core`sd_core::volume::watcher::spawn_volume_watcher::_{{closure}} (317 samples, 1.39%)</title><rect x="94.5250%" y="549" width="1.3885%" height="15" fill="rgb(227,140,7)" fg:x="21581" fg:w="317"/><text x="94.7750%" y="559.50"></text></g><g><title>sd-core`tokio::runtime::scheduler::multi_thread::worker::run (325 samples, 1.42%)</title><rect x="94.4943%" y="645" width="1.4235%" height="15" fill="rgb(214,22,6)" fg:x="21574" fg:w="325"/><text x="94.7443%" y="655.50"></text></g><g><title>sd-core`tokio::runtime::context::runtime::enter_runtime (325 samples, 1.42%)</title><rect x="94.4943%" y="629" width="1.4235%" height="15" fill="rgb(207,137,27)" fg:x="21574" fg:w="325"/><text x="94.7443%" y="639.50"></text></g><g><title>sd-core`tokio::runtime::context::set_scheduler (325 samples, 1.42%)</title><rect x="94.4943%" y="613" width="1.4235%" height="15" fill="rgb(210,8,46)" fg:x="21574" fg:w="325"/><text x="94.7443%" y="623.50"></text></g><g><title>sd-core`tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (5 samples, 0.02%)</title><rect x="95.9178%" y="645" width="0.0219%" height="15" fill="rgb(240,16,54)" fg:x="21899" fg:w="5"/><text x="96.1678%" y="655.50"></text></g><g><title>sd-core`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2,914 samples, 12.76%)</title><rect x="83.1895%" y="661" width="12.7633%" height="15" fill="rgb(211,209,29)" fg:x="18993" fg:w="2914"/><text x="83.4395%" y="671.50">sd-core`tokio::runt..</text></g><g><title>sd-core`tokio::runtime::task::core::TaskIdGuard::enter (3 samples, 0.01%)</title><rect x="95.9397%" y="645" width="0.0131%" height="15" fill="rgb(226,228,24)" fg:x="21904" fg:w="3"/><text x="96.1897%" y="655.50"></text></g><g><title>sd-core`tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (14 samples, 0.06%)</title><rect x="95.9529%" y="661" width="0.0613%" height="15" fill="rgb(222,84,9)" fg:x="21907" fg:w="14"/><text x="96.2029%" y="671.50"></text></g><g><title>sd-core`tokio::runtime::task::core::TaskIdGuard::enter (4 samples, 0.02%)</title><rect x="96.0142%" y="661" width="0.0175%" height="15" fill="rgb(234,203,30)" fg:x="21921" fg:w="4"/><text x="96.2642%" y="671.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (10 samples, 0.04%)</title><rect x="96.1018%" y="629" width="0.0438%" height="15" fill="rgb(238,109,14)" fg:x="21941" fg:w="10"/><text x="96.3518%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (709 samples, 3.11%)</title><rect x="96.1456%" y="629" width="3.1054%" height="15" fill="rgb(233,206,34)" fg:x="21951" fg:w="709"/><text x="96.3956%" y="639.50">lib..</text></g><g><title>libsystem_pthread.dylib`DYLD-STUB$$__psynch_cvsignal (5 samples, 0.02%)</title><rect x="99.2510%" y="629" width="0.0219%" height="15" fill="rgb(220,167,47)" fg:x="22660" fg:w="5"/><text x="99.5010%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (5 samples, 0.02%)</title><rect x="99.2729%" y="629" width="0.0219%" height="15" fill="rgb(238,105,10)" fg:x="22665" fg:w="5"/><text x="99.5229%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.01%)</title><rect x="99.3080%" y="629" width="0.0131%" height="15" fill="rgb(213,227,17)" fg:x="22673" fg:w="3"/><text x="99.5580%" y="639.50"></text></g><g><title>sd-core`parking_lot_core::parking_lot::lock_bucket_pair (5 samples, 0.02%)</title><rect x="99.3299%" y="629" width="0.0219%" height="15" fill="rgb(217,132,38)" fg:x="22678" fg:w="5"/><text x="99.5799%" y="639.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mach_absolute_time (3 samples, 0.01%)</title><rect x="99.3605%" y="597" width="0.0131%" height="15" fill="rgb(242,146,4)" fg:x="22685" fg:w="3"/><text x="99.6105%" y="607.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mach_timebase_info (8 samples, 0.04%)</title><rect x="99.3737%" y="597" width="0.0350%" height="15" fill="rgb(212,61,9)" fg:x="22688" fg:w="8"/><text x="99.6237%" y="607.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (5 samples, 0.02%)</title><rect x="99.4087%" y="597" width="0.0219%" height="15" fill="rgb(247,126,22)" fg:x="22696" fg:w="5"/><text x="99.6587%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (3 samples, 0.01%)</title><rect x="99.4175%" y="581" width="0.0131%" height="15" fill="rgb(220,196,2)" fg:x="22698" fg:w="3"/><text x="99.6675%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (38 samples, 0.17%)</title><rect x="99.4306%" y="597" width="0.1664%" height="15" fill="rgb(208,46,4)" fg:x="22701" fg:w="38"/><text x="99.6806%" y="607.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (61 samples, 0.27%)</title><rect x="99.3518%" y="613" width="0.2672%" height="15" fill="rgb(252,104,46)" fg:x="22683" fg:w="61"/><text x="99.6018%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (5 samples, 0.02%)</title><rect x="99.5970%" y="597" width="0.0219%" height="15" fill="rgb(237,152,48)" fg:x="22739" fg:w="5"/><text x="99.8470%" y="607.50"></text></g><g><title>sd-core`parking_lot::condvar::Condvar::notify_one_slow (827 samples, 3.62%)</title><rect x="96.0361%" y="645" width="3.6223%" height="15" fill="rgb(221,59,37)" fg:x="21926" fg:w="827"/><text x="96.2861%" y="655.50">sd-c..</text></g><g><title>sd-core`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (70 samples, 0.31%)</title><rect x="99.3518%" y="629" width="0.3066%" height="15" fill="rgb(209,202,51)" fg:x="22683" fg:w="70"/><text x="99.6018%" y="639.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (9 samples, 0.04%)</title><rect x="99.6189%" y="613" width="0.0394%" height="15" fill="rgb(228,81,30)" fg:x="22744" fg:w="9"/><text x="99.8689%" y="623.50"></text></g><g><title>sd-core`parking_lot_core::parking_lot::lock_bucket_pair (5 samples, 0.02%)</title><rect x="99.6584%" y="645" width="0.0219%" height="15" fill="rgb(227,42,39)" fg:x="22753" fg:w="5"/><text x="99.9084%" y="655.50"></text></g><g><title>sd-core`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (10 samples, 0.04%)</title><rect x="99.6803%" y="645" width="0.0438%" height="15" fill="rgb(221,26,2)" fg:x="22758" fg:w="10"/><text x="99.9303%" y="655.50"></text></g><g><title>sd-core`std::time::Instant::now (5 samples, 0.02%)</title><rect x="99.7241%" y="645" width="0.0219%" height="15" fill="rgb(254,61,31)" fg:x="22768" fg:w="5"/><text x="99.9741%" y="655.50"></text></g><g><title>sd-core`tokio::runtime::park::wake_by_ref (6 samples, 0.03%)</title><rect x="99.7460%" y="645" width="0.0263%" height="15" fill="rgb(222,173,38)" fg:x="22773" fg:w="6"/><text x="99.9960%" y="655.50"></text></g><g><title>sd-core`tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (855 samples, 3.74%)</title><rect x="96.0361%" y="661" width="3.7449%" height="15" fill="rgb(218,50,12)" fg:x="21926" fg:w="855"/><text x="96.2861%" y="671.50">sd-c..</text></g><g><title>sd-core`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3,838 samples, 16.81%)</title><rect x="82.9837%" y="677" width="16.8105%" height="15" fill="rgb(223,88,40)" fg:x="18946" fg:w="3838"/><text x="83.2337%" y="687.50">sd-core`tokio::runtime::ta..</text></g><g><title>sd-core`tokio::runtime::task::state::State::transition_to_running (3 samples, 0.01%)</title><rect x="99.7941%" y="677" width="0.0131%" height="15" fill="rgb(237,54,19)" fg:x="22784" fg:w="3"/><text x="100.0441%" y="687.50"></text></g><g><title>sd-core`tokio::runtime::blocking::pool::Inner::run (5,447 samples, 23.86%)</title><rect x="75.9625%" y="693" width="23.8579%" height="15" fill="rgb(251,129,25)" fg:x="17343" fg:w="5447"/><text x="76.2125%" y="703.50">sd-core`tokio::runtime::blocking::pool..</text></g><g><title>sd-core`tokio::runtime::task::waker::raw_waker (3 samples, 0.01%)</title><rect x="99.8073%" y="677" width="0.0131%" height="15" fill="rgb(238,97,19)" fg:x="22787" fg:w="3"/><text x="100.0573%" y="687.50"></text></g><g><title>sd-core`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5 samples, 0.02%)</title><rect x="99.8204%" y="693" width="0.0219%" height="15" fill="rgb(240,169,18)" fg:x="22790" fg:w="5"/><text x="100.0704%" y="703.50"></text></g><g><title>all (22,831 samples, 100%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(230,187,49)" fg:x="0" fg:w="22831"/><text x="0.2500%" y="799.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (5,517 samples, 24.16%)</title><rect x="75.8355%" y="773" width="24.1645%" height="15" fill="rgb(209,44,26)" fg:x="17314" fg:w="5517"/><text x="76.0855%" y="783.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (5,516 samples, 24.16%)</title><rect x="75.8399%" y="757" width="24.1601%" height="15" fill="rgb(244,0,6)" fg:x="17315" fg:w="5516"/><text x="76.0899%" y="767.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>sd-core`std::sys::unix::thread::Thread::new::thread_start (5,514 samples, 24.15%)</title><rect x="75.8486%" y="741" width="24.1514%" height="15" fill="rgb(248,18,21)" fg:x="17317" fg:w="5514"/><text x="76.0986%" y="751.50">sd-core`std::sys::unix::thread::Thread..</text></g><g><title>sd-core`core::ops::function::FnOnce::call_once{{vtable.shim}} (5,513 samples, 24.15%)</title><rect x="75.8530%" y="725" width="24.1470%" height="15" fill="rgb(245,180,19)" fg:x="17318" fg:w="5513"/><text x="76.1030%" y="735.50">sd-core`core::ops::function::FnOnce::c..</text></g><g><title>sd-core`std::sys_common::backtrace::__rust_begin_short_backtrace (5,513 samples, 24.15%)</title><rect x="75.8530%" y="709" width="24.1470%" height="15" fill="rgb(252,118,36)" fg:x="17318" fg:w="5513"/><text x="76.1030%" y="719.50">sd-core`std::sys_common::backtrace::__..</text></g><g><title>sd-core`tokio::runtime::task::raw::poll (36 samples, 0.16%)</title><rect x="99.8423%" y="693" width="0.1577%" height="15" fill="rgb(210,224,19)" fg:x="22795" fg:w="36"/><text x="100.0923%" y="703.50"></text></g></svg></svg>